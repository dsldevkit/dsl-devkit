«REM»
/*******************************************************************************
 * Copyright (c) 2016 Avaloq Group AG and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     Avaloq Group AG - initial API and implementation
 *******************************************************************************/
«ENDREM»

«IMPORT org::eclipse::xtext»
«IMPORT org::eclipse::emf::ecore»

«IMPORT com::avaloq::tools::ddk::xtext::valid::valid»

«EXTENSION org::eclipse::xtext::generator::Naming»
«EXTENSION org::eclipse::xtext::GrammarUtil»

«EXTENSION com::avaloq::tools::ddk::xtext::valid::generator::ValidExtensions»
«EXTENSION com::avaloq::tools::ddk::xtext::generator::util::GeneratorUtil»


«DEFINE generate(ValidModel validModel) FOR Grammar -»
«IF !validModel.getAllNativeRules().contexts.quickFixes.isEmpty -»
«FOREACH validModel.categories AS category -»
«IF category.hasQuickfixes() -»
«EXPAND generate(this) FOR category -»
«ENDIF -»
«ENDFOREACH -»

«FILE getQuickfixPackage().asPath() + "/" +getName() + "QuickfixTestCommon.java" SRC_TEST-»
/*
 * Generated by com.avaloq.tools.ddk.xtext.valid.generator.ValidValidatorFragment
 */
package «getQuickfixPackage()»;

import com.avaloq.tools.ddk.xtext.test.ui.quickfix.AbstractQuickFixTest;

import com.avaloq.tools.dsl.«this.name.toSimpleName().toLowerCase()».«this.name.toSimpleName().toLowerCase()».«this.name.toSimpleName()»Source;
import com.avaloq.tools.dsl.«this.name.toSimpleName().toLowerCase()».ui.test.internal.«this.name.toSimpleName()»TestUtil;


/**
 * The Class «this.name.toSimpleName()»QuickfixTestCommon can be used to program methods available for «this.name» testers.
 */
public class «this.name.toSimpleName()»QuickfixTestCommon extends AbstractQuickFixTest {

    @Override
    protected «this.name.toSimpleName()»TestUtil getXtextTestUtil() {
        return «this.name.toSimpleName()»TestUtil.getInstance();
    }

    @Override
    protected «this.name.toSimpleName()»Source getSemanticModel() {
        return («this.name.toSimpleName()»Source) super.getSemanticModel();
    }
}
«ENDFILE -»

«FILE getQuickfixPackage().asPath() + "/" +getName() + "QuickfixTestSuite.java" SRC_GEN_TEST-»
/*
 * Generated by com.avaloq.tools.ddk.xtext.valid.generator.ValidValidatorFragment
 */
package «getQuickfixPackage()»;

import org.junit.runner.RunWith;

import com.avaloq.tools.ddk.test.core.junit.runners.DiscerningSuite;


/**
 * The Class «this.name.toSimpleName()»QuickfixTestSuite defines a suite of quickfix Tests.
 */
@RunWith(DiscerningSuite.class)
@DiscerningSuite.SuiteClasses({
// @Format-Off
«FOREACH validModel.categories AS category -»
«IF category.hasQuickfixes() -»
  «category.quickfixTestClassName(this)»QuickfixTest.class,
«ENDIF -»
«ENDFOREACH-»
// @Format-On
})
public class «this.name.toSimpleName()»QuickfixTestSuite {}
«ENDFILE -»

«ENDIF -»
«ENDDEFINE»

//
// CATEGORY
//

«DEFINE generate(Grammar grammar) FOR Category»
«FILE grammar.getQuickfixPackage().asPath() + "/Abstract" + this.quickfixTestClassName(grammar) + "QuickfixTest.java" SRC_GEN_TEST-»
/*
 * Generated by com.avaloq.tools.ddk.xtext.valid.generator.ValidValidatorFragment
 */
package «grammar.getQuickfixPackage()»;

/**
 * Quick-fix Tests for category «this.name.toFirstUpper()» of grammar «grammar.name».
 */
public abstract class Abstract«this.quickfixTestClassName(grammar)»QuickfixTest extends «grammar.name.toSimpleName()»QuickfixTestCommon {
«FOREACH this.rules.typeSelect(NativeRule) AS rule -»
«FOREACH rule.contexts AS context -»
«FOREACH context.quickFixes AS quickfix -»

    /**
     * «quickfix.name» («quickfix.quickFixKind.toString().toLowerCase()») - «quickfix.message».
     *
     * «quickfix.label»
     *
     * @param issue the issue to which a quick fix is applied
     * @param acceptor the acceptor which implements the fix in an <code>apply</code> method
     */
    public abstract void test«quickfix.name»();
«ENDFOREACH -»
«ENDFOREACH -»
«ENDFOREACH -»

}
«ENDFILE -»

«FILE grammar.getQuickfixPackage().asPath() + "/" + this.quickfixTestClassName(grammar) + "QuickfixTest.java" SRC_TEST-»
/*
 * Generated by com.avaloq.tools.ddk.xtext.valid.generator.ValidValidatorFragment
 */
package «grammar.getQuickfixPackage()»;

import org.junit.Test;

/**
 * Quick-fix Tests for category «this.name.toFirstUpper()» of grammar «grammar.name».
 */
public class «this.quickfixTestClassName(grammar)»QuickfixTest extends Abstract«this.quickfixTestClassName(grammar)»QuickfixTest {
«FOREACH this.rules.typeSelect(NativeRule) AS rule -»
«FOREACH rule.contexts AS context -»
«FOREACH context.quickFixes AS quickfix -»

    /** {@inheritDoc} */
    @Test
    @Override
    public void test«quickfix.name»() {
        // TODO implement test for «quickfix.quickFixKind.toString().toLowerCase()» quick-fix.
    }
«ENDFOREACH -»
«ENDFOREACH -»
«ENDFOREACH -»

}
«ENDFILE»
«ENDDEFINE»


