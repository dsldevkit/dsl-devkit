/*******************************************************************************
 * Copyright (c) 2016 Avaloq Evolution AG and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     Avaloq Evolution AG - initial API and implementation
 *******************************************************************************/
module FormatterTestLanguage

import org.eclipse.emf.mwe.utils.*
import org.eclipse.xtext.xtext.generator.*
import com.avaloq.tools.ddk.xtext.generator.resourceFactory.*
import com.avaloq.tools.ddk.xtext.generator.*

var grammarURI = "classpath:/com/avaloq/tools/ddk/xtext/formatter/FormatterTestLanguage.xtext"
var file.extensions = "mydsl"
var projectName = "com.avaloq.tools.ddk.xtext.test"
var runtimeProject = "../${projectName}"
var rootPath = ".."

Workflow {
    bean = StandaloneSetup {
        platformUri = "${runtimeProject}/.."
    }

    component = DirectoryCleaner {
        directory = "${runtimeProject}/src-gen"
    }

    component = XtextGenerator {
     configuration = GeneratorModule {
      project = model.project.ProjectConfig {
        baseName = projectName
        rootPath = rootPath
        runtime = {
         ecoreModel = "../com.avaloq.tools.ddk.xtext.test/src-gen/com/avaloq/tools/ddk/xtext/formatter"
        }
      }
      code = {
        encoding = "UTF-8"
        lineDelimiter = "\r\n"
        fileHeader = "/*\n * generated by Xtext\n */"
      }
    }

      language = {
        grammarUri = grammarURI
        fileExtensions = file.extensions

        // generate the eCore model
        fragment = ecore.EMFGeneratorFragment2 {}

        // Java API to access grammar elements (required by several other fragments)
        fragment = grammarAccess.GrammarAccessFragment2 {}

        fragment = ecore.EcoreGeneratorFragment2 {
          genModel = "platform:/resource/com.avaloq.tools.ddk.xtext.test/src-gen/com/avaloq/tools/ddk/xtext/formatter/FormatterTestLanguage.genmodel"
        }

        // a custom ResourceFactory for use with EM
        fragment = ResourceFactoryFragment2 {
          fileExtensions = file.extensions
        }

        // the serialization component
        fragment = serializer.SerializerFragment2  {}

        // The antlr parser generator fragment.
        fragment = parser.antlr.XtextAntlrGeneratorFragment2 {
          options = auto-inject {}
        }

        // formatter API
        fragment = org.eclipse.xtext.xtext.generator.formatting.Formatter2Fragment2 {
          generateStub = false
        }
      }
    }
}
