/*
 * generated by Xtext
 */
package com.avaloq.tools.ddk.xtext.valid.ide.contentassist.antlr;

import com.avaloq.tools.ddk.xtext.valid.ide.contentassist.antlr.internal.InternalValidParser;
import com.avaloq.tools.ddk.xtext.valid.services.ValidGrammarAccess;
import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;

public class ValidParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(ValidGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, ValidGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getRuleAccess().getAlternatives(), "rule__Rule__Alternatives");
			builder.put(grammarAccess.getPredefinedRuleAccess().getAlternatives(), "rule__PredefinedRule__Alternatives");
			builder.put(grammarAccess.getContextAccess().getAlternatives(), "rule__Context__Alternatives");
			builder.put(grammarAccess.getCheckKindAccess().getAlternatives(), "rule__CheckKind__Alternatives");
			builder.put(grammarAccess.getSeverityKindAccess().getAlternatives(), "rule__SeverityKind__Alternatives");
			builder.put(grammarAccess.getQuickFixKindAccess().getAlternatives(), "rule__QuickFixKind__Alternatives");
			builder.put(grammarAccess.getValidModelAccess().getGroup(), "rule__ValidModel__Group__0");
			builder.put(grammarAccess.getImportAccess().getGroup(), "rule__Import__Group__0");
			builder.put(grammarAccess.getCategoryAccess().getGroup(), "rule__Category__Group__0");
			builder.put(grammarAccess.getCategoryAccess().getGroup_4(), "rule__Category__Group_4__0");
			builder.put(grammarAccess.getNativeRuleAccess().getGroup(), "rule__NativeRule__Group__0");
			builder.put(grammarAccess.getNativeRuleAccess().getGroup_5(), "rule__NativeRule__Group_5__0");
			builder.put(grammarAccess.getSizeRuleAccess().getGroup(), "rule__SizeRule__Group__0");
			builder.put(grammarAccess.getSizeRuleAccess().getGroup_6(), "rule__SizeRule__Group_6__0");
			builder.put(grammarAccess.getSizeRuleAccess().getGroup_7(), "rule__SizeRule__Group_7__0");
			builder.put(grammarAccess.getSizeRuleAccess().getGroup_9(), "rule__SizeRule__Group_9__0");
			builder.put(grammarAccess.getRangeRuleAccess().getGroup(), "rule__RangeRule__Group__0");
			builder.put(grammarAccess.getRangeRuleAccess().getGroup_6(), "rule__RangeRule__Group_6__0");
			builder.put(grammarAccess.getRangeRuleAccess().getGroup_7(), "rule__RangeRule__Group_7__0");
			builder.put(grammarAccess.getRangeRuleAccess().getGroup_9(), "rule__RangeRule__Group_9__0");
			builder.put(grammarAccess.getUniqueRuleAccess().getGroup(), "rule__UniqueRule__Group__0");
			builder.put(grammarAccess.getUniqueRuleAccess().getGroup_6(), "rule__UniqueRule__Group_6__0");
			builder.put(grammarAccess.getUniqueRuleAccess().getGroup_7(), "rule__UniqueRule__Group_7__0");
			builder.put(grammarAccess.getSimpleContextAccess().getGroup(), "rule__SimpleContext__Group__0");
			builder.put(grammarAccess.getSimpleContextAccess().getGroup_1(), "rule__SimpleContext__Group_1__0");
			builder.put(grammarAccess.getDuplicateContextAccess().getGroup(), "rule__DuplicateContext__Group__0");
			builder.put(grammarAccess.getDuplicateContextAccess().getGroup_1(), "rule__DuplicateContext__Group_1__0");
			builder.put(grammarAccess.getNativeContextAccess().getGroup(), "rule__NativeContext__Group__0");
			builder.put(grammarAccess.getNativeContextAccess().getGroup_1(), "rule__NativeContext__Group_1__0");
			builder.put(grammarAccess.getNativeContextAccess().getGroup_2(), "rule__NativeContext__Group_2__0");
			builder.put(grammarAccess.getNativeContextAccess().getGroup_3(), "rule__NativeContext__Group_3__0");
			builder.put(grammarAccess.getNativeContextAccess().getGroup_3_2(), "rule__NativeContext__Group_3_2__0");
			builder.put(grammarAccess.getNativeContextAccess().getGroup_4(), "rule__NativeContext__Group_4__0");
			builder.put(grammarAccess.getQuickFixAccess().getGroup(), "rule__QuickFix__Group__0");
			builder.put(grammarAccess.getQualifiedIDAccess().getGroup(), "rule__QualifiedID__Group__0");
			builder.put(grammarAccess.getQualifiedIDAccess().getGroup_0(), "rule__QualifiedID__Group_0__0");
			builder.put(grammarAccess.getValidModelAccess().getImportsAssignment_0(), "rule__ValidModel__ImportsAssignment_0");
			builder.put(grammarAccess.getValidModelAccess().getCategoriesAssignment_1(), "rule__ValidModel__CategoriesAssignment_1");
			builder.put(grammarAccess.getImportAccess().getPackageAssignment_1(), "rule__Import__PackageAssignment_1");
			builder.put(grammarAccess.getCategoryAccess().getNameAssignment_1(), "rule__Category__NameAssignment_1");
			builder.put(grammarAccess.getCategoryAccess().getLabelAssignment_3(), "rule__Category__LabelAssignment_3");
			builder.put(grammarAccess.getCategoryAccess().getDescriptionAssignment_4_1(), "rule__Category__DescriptionAssignment_4_1");
			builder.put(grammarAccess.getCategoryAccess().getRulesAssignment_6(), "rule__Category__RulesAssignment_6");
			builder.put(grammarAccess.getNativeRuleAccess().getOptionalAssignment_0_0(), "rule__NativeRule__OptionalAssignment_0_0");
			builder.put(grammarAccess.getNativeRuleAccess().getCheckKindAssignment_0_1(), "rule__NativeRule__CheckKindAssignment_0_1");
			builder.put(grammarAccess.getNativeRuleAccess().getSeverityAssignment_1(), "rule__NativeRule__SeverityAssignment_1");
			builder.put(grammarAccess.getNativeRuleAccess().getNameAssignment_2(), "rule__NativeRule__NameAssignment_2");
			builder.put(grammarAccess.getNativeRuleAccess().getLabelAssignment_4(), "rule__NativeRule__LabelAssignment_4");
			builder.put(grammarAccess.getNativeRuleAccess().getDescriptionAssignment_5_1(), "rule__NativeRule__DescriptionAssignment_5_1");
			builder.put(grammarAccess.getNativeRuleAccess().getMessageAssignment_7(), "rule__NativeRule__MessageAssignment_7");
			builder.put(grammarAccess.getNativeRuleAccess().getContextsAssignment_10(), "rule__NativeRule__ContextsAssignment_10");
			builder.put(grammarAccess.getSizeRuleAccess().getOptionalAssignment_0_0(), "rule__SizeRule__OptionalAssignment_0_0");
			builder.put(grammarAccess.getSizeRuleAccess().getCheckKindAssignment_0_1(), "rule__SizeRule__CheckKindAssignment_0_1");
			builder.put(grammarAccess.getSizeRuleAccess().getSeverityAssignment_2(), "rule__SizeRule__SeverityAssignment_2");
			builder.put(grammarAccess.getSizeRuleAccess().getNameAssignment_3(), "rule__SizeRule__NameAssignment_3");
			builder.put(grammarAccess.getSizeRuleAccess().getLabelAssignment_5(), "rule__SizeRule__LabelAssignment_5");
			builder.put(grammarAccess.getSizeRuleAccess().getDescriptionAssignment_6_1(), "rule__SizeRule__DescriptionAssignment_6_1");
			builder.put(grammarAccess.getSizeRuleAccess().getMessageAssignment_7_1(), "rule__SizeRule__MessageAssignment_7_1");
			builder.put(grammarAccess.getSizeRuleAccess().getMinAssignment_9_0(), "rule__SizeRule__MinAssignment_9_0");
			builder.put(grammarAccess.getSizeRuleAccess().getMaxAssignment_10(), "rule__SizeRule__MaxAssignment_10");
			builder.put(grammarAccess.getSizeRuleAccess().getContextsAssignment_13(), "rule__SizeRule__ContextsAssignment_13");
			builder.put(grammarAccess.getRangeRuleAccess().getOptionalAssignment_0_0(), "rule__RangeRule__OptionalAssignment_0_0");
			builder.put(grammarAccess.getRangeRuleAccess().getCheckKindAssignment_0_1(), "rule__RangeRule__CheckKindAssignment_0_1");
			builder.put(grammarAccess.getRangeRuleAccess().getSeverityAssignment_2(), "rule__RangeRule__SeverityAssignment_2");
			builder.put(grammarAccess.getRangeRuleAccess().getNameAssignment_3(), "rule__RangeRule__NameAssignment_3");
			builder.put(grammarAccess.getRangeRuleAccess().getLabelAssignment_5(), "rule__RangeRule__LabelAssignment_5");
			builder.put(grammarAccess.getRangeRuleAccess().getDescriptionAssignment_6_1(), "rule__RangeRule__DescriptionAssignment_6_1");
			builder.put(grammarAccess.getRangeRuleAccess().getMessageAssignment_7_1(), "rule__RangeRule__MessageAssignment_7_1");
			builder.put(grammarAccess.getRangeRuleAccess().getMinAssignment_9_0(), "rule__RangeRule__MinAssignment_9_0");
			builder.put(grammarAccess.getRangeRuleAccess().getMaxAssignment_10(), "rule__RangeRule__MaxAssignment_10");
			builder.put(grammarAccess.getRangeRuleAccess().getContextsAssignment_13(), "rule__RangeRule__ContextsAssignment_13");
			builder.put(grammarAccess.getUniqueRuleAccess().getOptionalAssignment_0_0(), "rule__UniqueRule__OptionalAssignment_0_0");
			builder.put(grammarAccess.getUniqueRuleAccess().getCheckKindAssignment_0_1(), "rule__UniqueRule__CheckKindAssignment_0_1");
			builder.put(grammarAccess.getUniqueRuleAccess().getSeverityAssignment_2(), "rule__UniqueRule__SeverityAssignment_2");
			builder.put(grammarAccess.getUniqueRuleAccess().getNameAssignment_3(), "rule__UniqueRule__NameAssignment_3");
			builder.put(grammarAccess.getUniqueRuleAccess().getLabelAssignment_5(), "rule__UniqueRule__LabelAssignment_5");
			builder.put(grammarAccess.getUniqueRuleAccess().getDescriptionAssignment_6_1(), "rule__UniqueRule__DescriptionAssignment_6_1");
			builder.put(grammarAccess.getUniqueRuleAccess().getMessageAssignment_7_1(), "rule__UniqueRule__MessageAssignment_7_1");
			builder.put(grammarAccess.getUniqueRuleAccess().getContextsAssignment_10(), "rule__UniqueRule__ContextsAssignment_10");
			builder.put(grammarAccess.getSimpleContextAccess().getContextTypeAssignment_0(), "rule__SimpleContext__ContextTypeAssignment_0");
			builder.put(grammarAccess.getSimpleContextAccess().getContextFeatureAssignment_1_1(), "rule__SimpleContext__ContextFeatureAssignment_1_1");
			builder.put(grammarAccess.getDuplicateContextAccess().getContextTypeAssignment_0(), "rule__DuplicateContext__ContextTypeAssignment_0");
			builder.put(grammarAccess.getDuplicateContextAccess().getContextFeatureAssignment_1_1(), "rule__DuplicateContext__ContextFeatureAssignment_1_1");
			builder.put(grammarAccess.getDuplicateContextAccess().getMarkerTypeAssignment_3(), "rule__DuplicateContext__MarkerTypeAssignment_3");
			builder.put(grammarAccess.getDuplicateContextAccess().getMarkerFeatureAssignment_5(), "rule__DuplicateContext__MarkerFeatureAssignment_5");
			builder.put(grammarAccess.getNativeContextAccess().getContextTypeAssignment_0(), "rule__NativeContext__ContextTypeAssignment_0");
			builder.put(grammarAccess.getNativeContextAccess().getContextFeatureAssignment_1_1(), "rule__NativeContext__ContextFeatureAssignment_1_1");
			builder.put(grammarAccess.getNativeContextAccess().getNamedAssignment_2_0(), "rule__NativeContext__NamedAssignment_2_0");
			builder.put(grammarAccess.getNativeContextAccess().getGivenNameAssignment_2_1(), "rule__NativeContext__GivenNameAssignment_2_1");
			builder.put(grammarAccess.getNativeContextAccess().getMarkerTypeAssignment_3_1(), "rule__NativeContext__MarkerTypeAssignment_3_1");
			builder.put(grammarAccess.getNativeContextAccess().getMarkerFeatureAssignment_3_2_1(), "rule__NativeContext__MarkerFeatureAssignment_3_2_1");
			builder.put(grammarAccess.getNativeContextAccess().getQuickFixesAssignment_4_2(), "rule__NativeContext__QuickFixesAssignment_4_2");
			builder.put(grammarAccess.getQuickFixAccess().getQuickFixKindAssignment_0(), "rule__QuickFix__QuickFixKindAssignment_0");
			builder.put(grammarAccess.getQuickFixAccess().getNameAssignment_2(), "rule__QuickFix__NameAssignment_2");
			builder.put(grammarAccess.getQuickFixAccess().getLabelAssignment_4(), "rule__QuickFix__LabelAssignment_4");
			builder.put(grammarAccess.getQuickFixAccess().getMessageAssignment_6(), "rule__QuickFix__MessageAssignment_6");
			builder.put(grammarAccess.getNativeRuleAccess().getUnorderedGroup_0(), "rule__NativeRule__UnorderedGroup_0");
			builder.put(grammarAccess.getSizeRuleAccess().getUnorderedGroup_0(), "rule__SizeRule__UnorderedGroup_0");
			builder.put(grammarAccess.getRangeRuleAccess().getUnorderedGroup_0(), "rule__RangeRule__UnorderedGroup_0");
			builder.put(grammarAccess.getUniqueRuleAccess().getUnorderedGroup_0(), "rule__UniqueRule__UnorderedGroup_0");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private ValidGrammarAccess grammarAccess;

	@Override
	protected InternalValidParser createParser() {
		InternalValidParser result = new InternalValidParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public ValidGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(ValidGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
