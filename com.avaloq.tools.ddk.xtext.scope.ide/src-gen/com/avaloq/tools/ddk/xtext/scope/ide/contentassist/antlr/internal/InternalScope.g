/*
 * generated by Xtext
 */
grammar InternalScope;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
}

@lexer::header {
package com.avaloq.tools.ddk.xtext.scope.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package com.avaloq.tools.ddk.xtext.scope.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import com.avaloq.tools.ddk.xtext.scope.services.ScopeGrammarAccess;

}
@parser::members {
	private ScopeGrammarAccess grammarAccess;

	public void setGrammarAccess(ScopeGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleScopeModel
entryRuleScopeModel
:
{ before(grammarAccess.getScopeModelRule()); }
	 ruleScopeModel
{ after(grammarAccess.getScopeModelRule()); } 
	 EOF 
;

// Rule ScopeModel
ruleScopeModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getScopeModelAccess().getGroup()); }
		(rule__ScopeModel__Group__0)
		{ after(grammarAccess.getScopeModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImport
entryRuleImport
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportAccess().getGroup()); }
		(rule__Import__Group__0)
		{ after(grammarAccess.getImportAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExtension
entryRuleExtension
:
{ before(grammarAccess.getExtensionRule()); }
	 ruleExtension
{ after(grammarAccess.getExtensionRule()); } 
	 EOF 
;

// Rule Extension
ruleExtension 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExtensionAccess().getGroup()); }
		(rule__Extension__Group__0)
		{ after(grammarAccess.getExtensionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInjection
entryRuleInjection
:
{ before(grammarAccess.getInjectionRule()); }
	 ruleInjection
{ after(grammarAccess.getInjectionRule()); } 
	 EOF 
;

// Rule Injection
ruleInjection 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInjectionAccess().getGroup()); }
		(rule__Injection__Group__0)
		{ after(grammarAccess.getInjectionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNamingSection
entryRuleNamingSection
:
{ before(grammarAccess.getNamingSectionRule()); }
	 ruleNamingSection
{ after(grammarAccess.getNamingSectionRule()); } 
	 EOF 
;

// Rule NamingSection
ruleNamingSection 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNamingSectionAccess().getGroup()); }
		(rule__NamingSection__Group__0)
		{ after(grammarAccess.getNamingSectionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNamingDefinition
entryRuleNamingDefinition
:
{ before(grammarAccess.getNamingDefinitionRule()); }
	 ruleNamingDefinition
{ after(grammarAccess.getNamingDefinitionRule()); } 
	 EOF 
;

// Rule NamingDefinition
ruleNamingDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNamingDefinitionAccess().getGroup()); }
		(rule__NamingDefinition__Group__0)
		{ after(grammarAccess.getNamingDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleScopeDefinition
entryRuleScopeDefinition
:
{ before(grammarAccess.getScopeDefinitionRule()); }
	 ruleScopeDefinition
{ after(grammarAccess.getScopeDefinitionRule()); } 
	 EOF 
;

// Rule ScopeDefinition
ruleScopeDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getScopeDefinitionAccess().getGroup()); }
		(rule__ScopeDefinition__Group__0)
		{ after(grammarAccess.getScopeDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleScopeRule
entryRuleScopeRule
:
{ before(grammarAccess.getScopeRuleRule()); }
	 ruleScopeRule
{ after(grammarAccess.getScopeRuleRule()); } 
	 EOF 
;

// Rule ScopeRule
ruleScopeRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getScopeRuleAccess().getGroup()); }
		(rule__ScopeRule__Group__0)
		{ after(grammarAccess.getScopeRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleScopeContext
entryRuleScopeContext
:
{ before(grammarAccess.getScopeContextRule()); }
	 ruleScopeContext
{ after(grammarAccess.getScopeContextRule()); } 
	 EOF 
;

// Rule ScopeContext
ruleScopeContext 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getScopeContextAccess().getGroup()); }
		(rule__ScopeContext__Group__0)
		{ after(grammarAccess.getScopeContextAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleScopeExpression
entryRuleScopeExpression
:
{ before(grammarAccess.getScopeExpressionRule()); }
	 ruleScopeExpression
{ after(grammarAccess.getScopeExpressionRule()); } 
	 EOF 
;

// Rule ScopeExpression
ruleScopeExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getScopeExpressionAccess().getAlternatives()); }
		(rule__ScopeExpression__Alternatives)
		{ after(grammarAccess.getScopeExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFactoryExpression
entryRuleFactoryExpression
:
{ before(grammarAccess.getFactoryExpressionRule()); }
	 ruleFactoryExpression
{ after(grammarAccess.getFactoryExpressionRule()); } 
	 EOF 
;

// Rule FactoryExpression
ruleFactoryExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFactoryExpressionAccess().getGroup()); }
		(rule__FactoryExpression__Group__0)
		{ after(grammarAccess.getFactoryExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleScopeDelegation
entryRuleScopeDelegation
:
{ before(grammarAccess.getScopeDelegationRule()); }
	 ruleScopeDelegation
{ after(grammarAccess.getScopeDelegationRule()); } 
	 EOF 
;

// Rule ScopeDelegation
ruleScopeDelegation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getScopeDelegationAccess().getGroup()); }
		(rule__ScopeDelegation__Group__0)
		{ after(grammarAccess.getScopeDelegationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNamedScopeExpression
entryRuleNamedScopeExpression
:
{ before(grammarAccess.getNamedScopeExpressionRule()); }
	 ruleNamedScopeExpression
{ after(grammarAccess.getNamedScopeExpressionRule()); } 
	 EOF 
;

// Rule NamedScopeExpression
ruleNamedScopeExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNamedScopeExpressionAccess().getGroup()); }
		(rule__NamedScopeExpression__Group__0)
		{ after(grammarAccess.getNamedScopeExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGlobalScopeExpression
entryRuleGlobalScopeExpression
:
{ before(grammarAccess.getGlobalScopeExpressionRule()); }
	 ruleGlobalScopeExpression
{ after(grammarAccess.getGlobalScopeExpressionRule()); } 
	 EOF 
;

// Rule GlobalScopeExpression
ruleGlobalScopeExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGlobalScopeExpressionAccess().getGroup()); }
		(rule__GlobalScopeExpression__Group__0)
		{ after(grammarAccess.getGlobalScopeExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDataExpression
entryRuleDataExpression
:
{ before(grammarAccess.getDataExpressionRule()); }
	 ruleDataExpression
{ after(grammarAccess.getDataExpressionRule()); } 
	 EOF 
;

// Rule DataExpression
ruleDataExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDataExpressionAccess().getAlternatives()); }
		(rule__DataExpression__Alternatives)
		{ after(grammarAccess.getDataExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMatchDataExpression
entryRuleMatchDataExpression
:
{ before(grammarAccess.getMatchDataExpressionRule()); }
	 ruleMatchDataExpression
{ after(grammarAccess.getMatchDataExpressionRule()); } 
	 EOF 
;

// Rule MatchDataExpression
ruleMatchDataExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMatchDataExpressionAccess().getGroup()); }
		(rule__MatchDataExpression__Group__0)
		{ after(grammarAccess.getMatchDataExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLambdaDataExpression
entryRuleLambdaDataExpression
:
{ before(grammarAccess.getLambdaDataExpressionRule()); }
	 ruleLambdaDataExpression
{ after(grammarAccess.getLambdaDataExpressionRule()); } 
	 EOF 
;

// Rule LambdaDataExpression
ruleLambdaDataExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLambdaDataExpressionAccess().getGroup()); }
		(rule__LambdaDataExpression__Group__0)
		{ after(grammarAccess.getLambdaDataExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSimpleScopeExpression
entryRuleSimpleScopeExpression
:
{ before(grammarAccess.getSimpleScopeExpressionRule()); }
	 ruleSimpleScopeExpression
{ after(grammarAccess.getSimpleScopeExpressionRule()); } 
	 EOF 
;

// Rule SimpleScopeExpression
ruleSimpleScopeExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSimpleScopeExpressionAccess().getExprAssignment()); }
		(rule__SimpleScopeExpression__ExprAssignment)
		{ after(grammarAccess.getSimpleScopeExpressionAccess().getExprAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNaming
entryRuleNaming
:
{ before(grammarAccess.getNamingRule()); }
	 ruleNaming
{ after(grammarAccess.getNamingRule()); } 
	 EOF 
;

// Rule Naming
ruleNaming 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNamingAccess().getAlternatives()); }
		(rule__Naming__Alternatives)
		{ after(grammarAccess.getNamingAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNamingExpression
entryRuleNamingExpression
:
{ before(grammarAccess.getNamingExpressionRule()); }
	 ruleNamingExpression
{ after(grammarAccess.getNamingExpressionRule()); } 
	 EOF 
;

// Rule NamingExpression
ruleNamingExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNamingExpressionAccess().getAlternatives()); }
		(rule__NamingExpression__Alternatives)
		{ after(grammarAccess.getNamingExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedID
entryRuleQualifiedID
:
{ before(grammarAccess.getQualifiedIDRule()); }
	 ruleQualifiedID
{ after(grammarAccess.getQualifiedIDRule()); } 
	 EOF 
;

// Rule QualifiedID
ruleQualifiedID 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedIDAccess().getGroup()); }
		(rule__QualifiedID__Group__0)
		{ after(grammarAccess.getQualifiedIDAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDottedID
entryRuleDottedID
:
{ before(grammarAccess.getDottedIDRule()); }
	 ruleDottedID
{ after(grammarAccess.getDottedIDRule()); } 
	 EOF 
;

// Rule DottedID
ruleDottedID 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDottedIDAccess().getGroup()); }
		(rule__DottedID__Group__0)
		{ after(grammarAccess.getDottedIDAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getAlternatives()); }
		(rule__Expression__Alternatives)
		{ after(grammarAccess.getExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLetExpression
entryRuleLetExpression
:
{ before(grammarAccess.getLetExpressionRule()); }
	 ruleLetExpression
{ after(grammarAccess.getLetExpressionRule()); } 
	 EOF 
;

// Rule LetExpression
ruleLetExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLetExpressionAccess().getGroup()); }
		(rule__LetExpression__Group__0)
		{ after(grammarAccess.getLetExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCastedExpression
entryRuleCastedExpression
:
{ before(grammarAccess.getCastedExpressionRule()); }
	 ruleCastedExpression
{ after(grammarAccess.getCastedExpressionRule()); } 
	 EOF 
;

// Rule CastedExpression
ruleCastedExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCastedExpressionAccess().getGroup()); }
		(rule__CastedExpression__Group__0)
		{ after(grammarAccess.getCastedExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleChainExpression
entryRuleChainExpression
:
{ before(grammarAccess.getChainExpressionRule()); }
	 ruleChainExpression
{ after(grammarAccess.getChainExpressionRule()); } 
	 EOF 
;

// Rule ChainExpression
ruleChainExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getChainExpressionAccess().getGroup()); }
		(rule__ChainExpression__Group__0)
		{ after(grammarAccess.getChainExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleChainedExpression
entryRuleChainedExpression
:
{ before(grammarAccess.getChainedExpressionRule()); }
	 ruleChainedExpression
{ after(grammarAccess.getChainedExpressionRule()); } 
	 EOF 
;

// Rule ChainedExpression
ruleChainedExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getChainedExpressionAccess().getAlternatives()); }
		(rule__ChainedExpression__Alternatives)
		{ after(grammarAccess.getChainedExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIfExpressionTri
entryRuleIfExpressionTri
:
{ before(grammarAccess.getIfExpressionTriRule()); }
	 ruleIfExpressionTri
{ after(grammarAccess.getIfExpressionTriRule()); } 
	 EOF 
;

// Rule IfExpressionTri
ruleIfExpressionTri 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIfExpressionTriAccess().getGroup()); }
		(rule__IfExpressionTri__Group__0)
		{ after(grammarAccess.getIfExpressionTriAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIfExpressionKw
entryRuleIfExpressionKw
:
{ before(grammarAccess.getIfExpressionKwRule()); }
	 ruleIfExpressionKw
{ after(grammarAccess.getIfExpressionKwRule()); } 
	 EOF 
;

// Rule IfExpressionKw
ruleIfExpressionKw 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIfExpressionKwAccess().getGroup()); }
		(rule__IfExpressionKw__Group__0)
		{ after(grammarAccess.getIfExpressionKwAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSwitchExpression
entryRuleSwitchExpression
:
{ before(grammarAccess.getSwitchExpressionRule()); }
	 ruleSwitchExpression
{ after(grammarAccess.getSwitchExpressionRule()); } 
	 EOF 
;

// Rule SwitchExpression
ruleSwitchExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSwitchExpressionAccess().getGroup()); }
		(rule__SwitchExpression__Group__0)
		{ after(grammarAccess.getSwitchExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCase
entryRuleCase
:
{ before(grammarAccess.getCaseRule()); }
	 ruleCase
{ after(grammarAccess.getCaseRule()); } 
	 EOF 
;

// Rule Case
ruleCase 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCaseAccess().getGroup()); }
		(rule__Case__Group__0)
		{ after(grammarAccess.getCaseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOrExpression
entryRuleOrExpression
:
{ before(grammarAccess.getOrExpressionRule()); }
	 ruleOrExpression
{ after(grammarAccess.getOrExpressionRule()); } 
	 EOF 
;

// Rule OrExpression
ruleOrExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrExpressionAccess().getGroup()); }
		(rule__OrExpression__Group__0)
		{ after(grammarAccess.getOrExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAndExpression
entryRuleAndExpression
:
{ before(grammarAccess.getAndExpressionRule()); }
	 ruleAndExpression
{ after(grammarAccess.getAndExpressionRule()); } 
	 EOF 
;

// Rule AndExpression
ruleAndExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAndExpressionAccess().getGroup()); }
		(rule__AndExpression__Group__0)
		{ after(grammarAccess.getAndExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImpliesExpression
entryRuleImpliesExpression
:
{ before(grammarAccess.getImpliesExpressionRule()); }
	 ruleImpliesExpression
{ after(grammarAccess.getImpliesExpressionRule()); } 
	 EOF 
;

// Rule ImpliesExpression
ruleImpliesExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImpliesExpressionAccess().getGroup()); }
		(rule__ImpliesExpression__Group__0)
		{ after(grammarAccess.getImpliesExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelationalExpression
entryRuleRelationalExpression
:
{ before(grammarAccess.getRelationalExpressionRule()); }
	 ruleRelationalExpression
{ after(grammarAccess.getRelationalExpressionRule()); } 
	 EOF 
;

// Rule RelationalExpression
ruleRelationalExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelationalExpressionAccess().getGroup()); }
		(rule__RelationalExpression__Group__0)
		{ after(grammarAccess.getRelationalExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAdditiveExpression
entryRuleAdditiveExpression
:
{ before(grammarAccess.getAdditiveExpressionRule()); }
	 ruleAdditiveExpression
{ after(grammarAccess.getAdditiveExpressionRule()); } 
	 EOF 
;

// Rule AdditiveExpression
ruleAdditiveExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAdditiveExpressionAccess().getGroup()); }
		(rule__AdditiveExpression__Group__0)
		{ after(grammarAccess.getAdditiveExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultiplicativeExpression
entryRuleMultiplicativeExpression
:
{ before(grammarAccess.getMultiplicativeExpressionRule()); }
	 ruleMultiplicativeExpression
{ after(grammarAccess.getMultiplicativeExpressionRule()); } 
	 EOF 
;

// Rule MultiplicativeExpression
ruleMultiplicativeExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultiplicativeExpressionAccess().getGroup()); }
		(rule__MultiplicativeExpression__Group__0)
		{ after(grammarAccess.getMultiplicativeExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnaryOrInfixExpression
entryRuleUnaryOrInfixExpression
:
{ before(grammarAccess.getUnaryOrInfixExpressionRule()); }
	 ruleUnaryOrInfixExpression
{ after(grammarAccess.getUnaryOrInfixExpressionRule()); } 
	 EOF 
;

// Rule UnaryOrInfixExpression
ruleUnaryOrInfixExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnaryOrInfixExpressionAccess().getAlternatives()); }
		(rule__UnaryOrInfixExpression__Alternatives)
		{ after(grammarAccess.getUnaryOrInfixExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnaryExpression
entryRuleUnaryExpression
:
{ before(grammarAccess.getUnaryExpressionRule()); }
	 ruleUnaryExpression
{ after(grammarAccess.getUnaryExpressionRule()); } 
	 EOF 
;

// Rule UnaryExpression
ruleUnaryExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getGroup()); }
		(rule__UnaryExpression__Group__0)
		{ after(grammarAccess.getUnaryExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInfixExpression
entryRuleInfixExpression
:
{ before(grammarAccess.getInfixExpressionRule()); }
	 ruleInfixExpression
{ after(grammarAccess.getInfixExpressionRule()); } 
	 EOF 
;

// Rule InfixExpression
ruleInfixExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInfixExpressionAccess().getGroup()); }
		(rule__InfixExpression__Group__0)
		{ after(grammarAccess.getInfixExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimaryExpression
entryRulePrimaryExpression
:
{ before(grammarAccess.getPrimaryExpressionRule()); }
	 rulePrimaryExpression
{ after(grammarAccess.getPrimaryExpressionRule()); } 
	 EOF 
;

// Rule PrimaryExpression
rulePrimaryExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
		(rule__PrimaryExpression__Alternatives)
		{ after(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLiteral
entryRuleLiteral
:
{ before(grammarAccess.getLiteralRule()); }
	 ruleLiteral
{ after(grammarAccess.getLiteralRule()); } 
	 EOF 
;

// Rule Literal
ruleLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLiteralAccess().getAlternatives()); }
		(rule__Literal__Alternatives)
		{ after(grammarAccess.getLiteralAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBooleanLiteral
entryRuleBooleanLiteral
:
{ before(grammarAccess.getBooleanLiteralRule()); }
	 ruleBooleanLiteral
{ after(grammarAccess.getBooleanLiteralRule()); } 
	 EOF 
;

// Rule BooleanLiteral
ruleBooleanLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanLiteralAccess().getValAssignment()); }
		(rule__BooleanLiteral__ValAssignment)
		{ after(grammarAccess.getBooleanLiteralAccess().getValAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIntegerLiteral
entryRuleIntegerLiteral
:
{ before(grammarAccess.getIntegerLiteralRule()); }
	 ruleIntegerLiteral
{ after(grammarAccess.getIntegerLiteralRule()); } 
	 EOF 
;

// Rule IntegerLiteral
ruleIntegerLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntegerLiteralAccess().getValAssignment()); }
		(rule__IntegerLiteral__ValAssignment)
		{ after(grammarAccess.getIntegerLiteralAccess().getValAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNullLiteral
entryRuleNullLiteral
:
{ before(grammarAccess.getNullLiteralRule()); }
	 ruleNullLiteral
{ after(grammarAccess.getNullLiteralRule()); } 
	 EOF 
;

// Rule NullLiteral
ruleNullLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNullLiteralAccess().getValAssignment()); }
		(rule__NullLiteral__ValAssignment)
		{ after(grammarAccess.getNullLiteralAccess().getValAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRealLiteral
entryRuleRealLiteral
:
{ before(grammarAccess.getRealLiteralRule()); }
	 ruleRealLiteral
{ after(grammarAccess.getRealLiteralRule()); } 
	 EOF 
;

// Rule RealLiteral
ruleRealLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRealLiteralAccess().getValAssignment()); }
		(rule__RealLiteral__ValAssignment)
		{ after(grammarAccess.getRealLiteralAccess().getValAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStringLiteral
entryRuleStringLiteral
:
{ before(grammarAccess.getStringLiteralRule()); }
	 ruleStringLiteral
{ after(grammarAccess.getStringLiteralRule()); } 
	 EOF 
;

// Rule StringLiteral
ruleStringLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringLiteralAccess().getValAssignment()); }
		(rule__StringLiteral__ValAssignment)
		{ after(grammarAccess.getStringLiteralAccess().getValAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParanthesizedExpression
entryRuleParanthesizedExpression
:
{ before(grammarAccess.getParanthesizedExpressionRule()); }
	 ruleParanthesizedExpression
{ after(grammarAccess.getParanthesizedExpressionRule()); } 
	 EOF 
;

// Rule ParanthesizedExpression
ruleParanthesizedExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParanthesizedExpressionAccess().getGroup()); }
		(rule__ParanthesizedExpression__Group__0)
		{ after(grammarAccess.getParanthesizedExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGlobalVarExpression
entryRuleGlobalVarExpression
:
{ before(grammarAccess.getGlobalVarExpressionRule()); }
	 ruleGlobalVarExpression
{ after(grammarAccess.getGlobalVarExpressionRule()); } 
	 EOF 
;

// Rule GlobalVarExpression
ruleGlobalVarExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGlobalVarExpressionAccess().getGroup()); }
		(rule__GlobalVarExpression__Group__0)
		{ after(grammarAccess.getGlobalVarExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFeatureCall
entryRuleFeatureCall
:
{ before(grammarAccess.getFeatureCallRule()); }
	 ruleFeatureCall
{ after(grammarAccess.getFeatureCallRule()); } 
	 EOF 
;

// Rule FeatureCall
ruleFeatureCall 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFeatureCallAccess().getAlternatives()); }
		(rule__FeatureCall__Alternatives)
		{ after(grammarAccess.getFeatureCallAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperationCall
entryRuleOperationCall
:
{ before(grammarAccess.getOperationCallRule()); }
	 ruleOperationCall
{ after(grammarAccess.getOperationCallRule()); } 
	 EOF 
;

// Rule OperationCall
ruleOperationCall 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperationCallAccess().getGroup()); }
		(rule__OperationCall__Group__0)
		{ after(grammarAccess.getOperationCallAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleListLiteral
entryRuleListLiteral
:
{ before(grammarAccess.getListLiteralRule()); }
	 ruleListLiteral
{ after(grammarAccess.getListLiteralRule()); } 
	 EOF 
;

// Rule ListLiteral
ruleListLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getListLiteralAccess().getGroup()); }
		(rule__ListLiteral__Group__0)
		{ after(grammarAccess.getListLiteralAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstructorCallExpression
entryRuleConstructorCallExpression
:
{ before(grammarAccess.getConstructorCallExpressionRule()); }
	 ruleConstructorCallExpression
{ after(grammarAccess.getConstructorCallExpressionRule()); } 
	 EOF 
;

// Rule ConstructorCallExpression
ruleConstructorCallExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstructorCallExpressionAccess().getGroup()); }
		(rule__ConstructorCallExpression__Group__0)
		{ after(grammarAccess.getConstructorCallExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeSelectExpression
entryRuleTypeSelectExpression
:
{ before(grammarAccess.getTypeSelectExpressionRule()); }
	 ruleTypeSelectExpression
{ after(grammarAccess.getTypeSelectExpressionRule()); } 
	 EOF 
;

// Rule TypeSelectExpression
ruleTypeSelectExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeSelectExpressionAccess().getGroup()); }
		(rule__TypeSelectExpression__Group__0)
		{ after(grammarAccess.getTypeSelectExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCollectionExpression
entryRuleCollectionExpression
:
{ before(grammarAccess.getCollectionExpressionRule()); }
	 ruleCollectionExpression
{ after(grammarAccess.getCollectionExpressionRule()); } 
	 EOF 
;

// Rule CollectionExpression
ruleCollectionExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCollectionExpressionAccess().getGroup()); }
		(rule__CollectionExpression__Group__0)
		{ after(grammarAccess.getCollectionExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleType
entryRuleType
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getAlternatives()); }
		(rule__Type__Alternatives)
		{ after(grammarAccess.getTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCollectionType
entryRuleCollectionType
:
{ before(grammarAccess.getCollectionTypeRule()); }
	 ruleCollectionType
{ after(grammarAccess.getCollectionTypeRule()); } 
	 EOF 
;

// Rule CollectionType
ruleCollectionType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCollectionTypeAccess().getGroup()); }
		(rule__CollectionType__Group__0)
		{ after(grammarAccess.getCollectionTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSimpleType
entryRuleSimpleType
:
{ before(grammarAccess.getSimpleTypeRule()); }
	 ruleSimpleType
{ after(grammarAccess.getSimpleTypeRule()); } 
	 EOF 
;

// Rule SimpleType
ruleSimpleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSimpleTypeAccess().getGroup()); }
		(rule__SimpleType__Group__0)
		{ after(grammarAccess.getSimpleTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIdentifier
entryRuleIdentifier
:
{ before(grammarAccess.getIdentifierRule()); }
	 ruleIdentifier
{ after(grammarAccess.getIdentifierRule()); } 
	 EOF 
;

// Rule Identifier
ruleIdentifier 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIdentifierAccess().getIDTerminalRuleCall()); }
		RULE_ID
		{ after(grammarAccess.getIdentifierAccess().getIDTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Casing
ruleCasing
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCasingAccess().getAlternatives()); }
		(rule__Casing__Alternatives)
		{ after(grammarAccess.getCasingAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeDefinition__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScopeDefinitionAccess().getTargetTypeAssignment_2_0()); }
		(rule__ScopeDefinition__TargetTypeAssignment_2_0)
		{ after(grammarAccess.getScopeDefinitionAccess().getTargetTypeAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getScopeDefinitionAccess().getGroup_2_1()); }
		(rule__ScopeDefinition__Group_2_1__0)
		{ after(grammarAccess.getScopeDefinitionAccess().getGroup_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeContext__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScopeContextAccess().getGlobalAssignment_0_0()); }
		(rule__ScopeContext__GlobalAssignment_0_0)
		{ after(grammarAccess.getScopeContextAccess().getGlobalAssignment_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getScopeContextAccess().getContextTypeAssignment_0_1()); }
		(rule__ScopeContext__ContextTypeAssignment_0_1)
		{ after(grammarAccess.getScopeContextAccess().getContextTypeAssignment_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScopeExpressionAccess().getScopeDelegationParserRuleCall_0()); }
		ruleScopeDelegation
		{ after(grammarAccess.getScopeExpressionAccess().getScopeDelegationParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getScopeExpressionAccess().getFactoryExpressionParserRuleCall_1()); }
		ruleFactoryExpression
		{ after(grammarAccess.getScopeExpressionAccess().getFactoryExpressionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getScopeExpressionAccess().getNamedScopeExpressionParserRuleCall_2()); }
		ruleNamedScopeExpression
		{ after(grammarAccess.getScopeExpressionAccess().getNamedScopeExpressionParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeDelegation__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScopeDelegationAccess().getDelegateAssignment_2_0()); }
		(rule__ScopeDelegation__DelegateAssignment_2_0)
		{ after(grammarAccess.getScopeDelegationAccess().getDelegateAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getScopeDelegationAccess().getExternalAssignment_2_1()); }
		(rule__ScopeDelegation__ExternalAssignment_2_1)
		{ after(grammarAccess.getScopeDelegationAccess().getExternalAssignment_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedScopeExpression__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNamedScopeExpressionAccess().getGlobalScopeExpressionParserRuleCall_0_0()); }
		ruleGlobalScopeExpression
		{ after(grammarAccess.getNamedScopeExpressionAccess().getGlobalScopeExpressionParserRuleCall_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getNamedScopeExpressionAccess().getSimpleScopeExpressionParserRuleCall_0_1()); }
		ruleSimpleScopeExpression
		{ after(grammarAccess.getNamedScopeExpressionAccess().getSimpleScopeExpressionParserRuleCall_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalScopeExpression__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGlobalScopeExpressionAccess().getGroup_3_0()); }
		(rule__GlobalScopeExpression__Group_3_0__0)
		{ after(grammarAccess.getGlobalScopeExpressionAccess().getGroup_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getGlobalScopeExpressionAccess().getGroup_3_1()); }
		(rule__GlobalScopeExpression__Group_3_1__0)
		{ after(grammarAccess.getGlobalScopeExpressionAccess().getGroup_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalScopeExpression__Alternatives_5_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGlobalScopeExpressionAccess().getDomainsAssignment_5_3_0()); }
		(rule__GlobalScopeExpression__DomainsAssignment_5_3_0)
		{ after(grammarAccess.getGlobalScopeExpressionAccess().getDomainsAssignment_5_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getGlobalScopeExpressionAccess().getDomainsAssignment_5_3_1()); }
		(rule__GlobalScopeExpression__DomainsAssignment_5_3_1)
		{ after(grammarAccess.getGlobalScopeExpressionAccess().getDomainsAssignment_5_3_1()); }
	)
	|
	(
		{ before(grammarAccess.getGlobalScopeExpressionAccess().getGroup_5_3_2()); }
		(rule__GlobalScopeExpression__Group_5_3_2__0)
		{ after(grammarAccess.getGlobalScopeExpressionAccess().getGroup_5_3_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataExpressionAccess().getMatchDataExpressionParserRuleCall_0()); }
		ruleMatchDataExpression
		{ after(grammarAccess.getDataExpressionAccess().getMatchDataExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getDataExpressionAccess().getLambdaDataExpressionParserRuleCall_1()); }
		ruleLambdaDataExpression
		{ after(grammarAccess.getDataExpressionAccess().getLambdaDataExpressionParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Naming__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNamingAccess().getGroup_0()); }
		(rule__Naming__Group_0__0)
		{ after(grammarAccess.getNamingAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getNamingAccess().getNamesAssignment_1()); }
		(rule__Naming__NamesAssignment_1)
		{ after(grammarAccess.getNamingAccess().getNamesAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamingExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNamingExpressionAccess().getExportAssignment_0()); }
		(rule__NamingExpression__ExportAssignment_0)
		{ after(grammarAccess.getNamingExpressionAccess().getExportAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getNamingExpressionAccess().getGroup_1()); }
		(rule__NamingExpression__Group_1__0)
		{ after(grammarAccess.getNamingExpressionAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getLetExpressionParserRuleCall_0()); }
		ruleLetExpression
		{ after(grammarAccess.getExpressionAccess().getLetExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getCastedExpressionParserRuleCall_1()); }
		(ruleCastedExpression)
		{ after(grammarAccess.getExpressionAccess().getCastedExpressionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getChainExpressionParserRuleCall_2()); }
		ruleChainExpression
		{ after(grammarAccess.getExpressionAccess().getChainExpressionParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChainedExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChainedExpressionAccess().getIfExpressionKwParserRuleCall_0()); }
		ruleIfExpressionKw
		{ after(grammarAccess.getChainedExpressionAccess().getIfExpressionKwParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getChainedExpressionAccess().getIfExpressionTriParserRuleCall_1()); }
		ruleIfExpressionTri
		{ after(grammarAccess.getChainedExpressionAccess().getIfExpressionTriParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getChainedExpressionAccess().getSwitchExpressionParserRuleCall_2()); }
		ruleSwitchExpression
		{ after(grammarAccess.getChainedExpressionAccess().getSwitchExpressionParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__OperatorAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationalExpressionAccess().getOperatorEqualsSignEqualsSignKeyword_1_1_0_0()); }
		'=='
		{ after(grammarAccess.getRelationalExpressionAccess().getOperatorEqualsSignEqualsSignKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalExpressionAccess().getOperatorExclamationMarkEqualsSignKeyword_1_1_0_1()); }
		'!='
		{ after(grammarAccess.getRelationalExpressionAccess().getOperatorExclamationMarkEqualsSignKeyword_1_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalExpressionAccess().getOperatorGreaterThanSignEqualsSignKeyword_1_1_0_2()); }
		'>='
		{ after(grammarAccess.getRelationalExpressionAccess().getOperatorGreaterThanSignEqualsSignKeyword_1_1_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalExpressionAccess().getOperatorLessThanSignEqualsSignKeyword_1_1_0_3()); }
		'<='
		{ after(grammarAccess.getRelationalExpressionAccess().getOperatorLessThanSignEqualsSignKeyword_1_1_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalExpressionAccess().getOperatorGreaterThanSignKeyword_1_1_0_4()); }
		'>'
		{ after(grammarAccess.getRelationalExpressionAccess().getOperatorGreaterThanSignKeyword_1_1_0_4()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalExpressionAccess().getOperatorLessThanSignKeyword_1_1_0_5()); }
		'<'
		{ after(grammarAccess.getRelationalExpressionAccess().getOperatorLessThanSignKeyword_1_1_0_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__NameAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditiveExpressionAccess().getNamePlusSignKeyword_1_1_0_0()); }
		'+'
		{ after(grammarAccess.getAdditiveExpressionAccess().getNamePlusSignKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAdditiveExpressionAccess().getNameHyphenMinusKeyword_1_1_0_1()); }
		'-'
		{ after(grammarAccess.getAdditiveExpressionAccess().getNameHyphenMinusKeyword_1_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__NameAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicativeExpressionAccess().getNameAsteriskKeyword_1_1_0_0()); }
		'*'
		{ after(grammarAccess.getMultiplicativeExpressionAccess().getNameAsteriskKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getMultiplicativeExpressionAccess().getNameSolidusKeyword_1_1_0_1()); }
		'/'
		{ after(grammarAccess.getMultiplicativeExpressionAccess().getNameSolidusKeyword_1_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOrInfixExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryOrInfixExpressionAccess().getUnaryExpressionParserRuleCall_0()); }
		ruleUnaryExpression
		{ after(grammarAccess.getUnaryOrInfixExpressionAccess().getUnaryExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryOrInfixExpressionAccess().getInfixExpressionParserRuleCall_1()); }
		ruleInfixExpression
		{ after(grammarAccess.getUnaryOrInfixExpressionAccess().getInfixExpressionParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__NameAlternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getNameExclamationMarkKeyword_0_0_0()); }
		'!'
		{ after(grammarAccess.getUnaryExpressionAccess().getNameExclamationMarkKeyword_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getNameHyphenMinusKeyword_0_0_1()); }
		'-'
		{ after(grammarAccess.getUnaryExpressionAccess().getNameHyphenMinusKeyword_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixExpression__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInfixExpressionAccess().getGroup_1_0()); }
		(rule__InfixExpression__Group_1_0__0)
		{ after(grammarAccess.getInfixExpressionAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getInfixExpressionAccess().getGroup_1_1()); }
		(rule__InfixExpression__Group_1_1__0)
		{ after(grammarAccess.getInfixExpressionAccess().getGroup_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getInfixExpressionAccess().getGroup_1_2()); }
		(rule__InfixExpression__Group_1_2__0)
		{ after(grammarAccess.getInfixExpressionAccess().getGroup_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getInfixExpressionAccess().getGroup_1_3()); }
		(rule__InfixExpression__Group_1_3__0)
		{ after(grammarAccess.getInfixExpressionAccess().getGroup_1_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixExpression__NameAlternatives_1_3_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInfixExpressionAccess().getNameCollectKeyword_1_3_2_0_0()); }
		'collect'
		{ after(grammarAccess.getInfixExpressionAccess().getNameCollectKeyword_1_3_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getInfixExpressionAccess().getNameSelectKeyword_1_3_2_0_1()); }
		'select'
		{ after(grammarAccess.getInfixExpressionAccess().getNameSelectKeyword_1_3_2_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getInfixExpressionAccess().getNameSelectFirstKeyword_1_3_2_0_2()); }
		'selectFirst'
		{ after(grammarAccess.getInfixExpressionAccess().getNameSelectFirstKeyword_1_3_2_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getInfixExpressionAccess().getNameRejectKeyword_1_3_2_0_3()); }
		'reject'
		{ after(grammarAccess.getInfixExpressionAccess().getNameRejectKeyword_1_3_2_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getInfixExpressionAccess().getNameExistsKeyword_1_3_2_0_4()); }
		'exists'
		{ after(grammarAccess.getInfixExpressionAccess().getNameExistsKeyword_1_3_2_0_4()); }
	)
	|
	(
		{ before(grammarAccess.getInfixExpressionAccess().getNameNotExistsKeyword_1_3_2_0_5()); }
		'notExists'
		{ after(grammarAccess.getInfixExpressionAccess().getNameNotExistsKeyword_1_3_2_0_5()); }
	)
	|
	(
		{ before(grammarAccess.getInfixExpressionAccess().getNameSortByKeyword_1_3_2_0_6()); }
		'sortBy'
		{ after(grammarAccess.getInfixExpressionAccess().getNameSortByKeyword_1_3_2_0_6()); }
	)
	|
	(
		{ before(grammarAccess.getInfixExpressionAccess().getNameForAllKeyword_1_3_2_0_7()); }
		'forAll'
		{ after(grammarAccess.getInfixExpressionAccess().getNameForAllKeyword_1_3_2_0_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getLiteralParserRuleCall_0()); }
		ruleLiteral
		{ after(grammarAccess.getPrimaryExpressionAccess().getLiteralParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getFeatureCallParserRuleCall_1()); }
		ruleFeatureCall
		{ after(grammarAccess.getPrimaryExpressionAccess().getFeatureCallParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getListLiteralParserRuleCall_2()); }
		ruleListLiteral
		{ after(grammarAccess.getPrimaryExpressionAccess().getListLiteralParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getConstructorCallExpressionParserRuleCall_3()); }
		ruleConstructorCallExpression
		{ after(grammarAccess.getPrimaryExpressionAccess().getConstructorCallExpressionParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getGlobalVarExpressionParserRuleCall_4()); }
		ruleGlobalVarExpression
		{ after(grammarAccess.getPrimaryExpressionAccess().getGlobalVarExpressionParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getParanthesizedExpressionParserRuleCall_5()); }
		ruleParanthesizedExpression
		{ after(grammarAccess.getPrimaryExpressionAccess().getParanthesizedExpressionParserRuleCall_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralAccess().getBooleanLiteralParserRuleCall_0()); }
		ruleBooleanLiteral
		{ after(grammarAccess.getLiteralAccess().getBooleanLiteralParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getIntegerLiteralParserRuleCall_1()); }
		ruleIntegerLiteral
		{ after(grammarAccess.getLiteralAccess().getIntegerLiteralParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getNullLiteralParserRuleCall_2()); }
		ruleNullLiteral
		{ after(grammarAccess.getLiteralAccess().getNullLiteralParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getRealLiteralParserRuleCall_3()); }
		ruleRealLiteral
		{ after(grammarAccess.getLiteralAccess().getRealLiteralParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getStringLiteralParserRuleCall_4()); }
		ruleStringLiteral
		{ after(grammarAccess.getLiteralAccess().getStringLiteralParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__ValAlternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanLiteralAccess().getValTrueKeyword_0_0()); }
		'true'
		{ after(grammarAccess.getBooleanLiteralAccess().getValTrueKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getBooleanLiteralAccess().getValFalseKeyword_0_1()); }
		'false'
		{ after(grammarAccess.getBooleanLiteralAccess().getValFalseKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureCall__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureCallAccess().getOperationCallParserRuleCall_0()); }
		ruleOperationCall
		{ after(grammarAccess.getFeatureCallAccess().getOperationCallParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getFeatureCallAccess().getTypeAssignment_1()); }
		(rule__FeatureCall__TypeAssignment_1)
		{ after(grammarAccess.getFeatureCallAccess().getTypeAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getFeatureCallAccess().getCollectionExpressionParserRuleCall_2()); }
		ruleCollectionExpression
		{ after(grammarAccess.getFeatureCallAccess().getCollectionExpressionParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getFeatureCallAccess().getTypeSelectExpressionParserRuleCall_3()); }
		ruleTypeSelectExpression
		{ after(grammarAccess.getFeatureCallAccess().getTypeSelectExpressionParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionExpression__NameAlternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCollectionExpressionAccess().getNameCollectKeyword_0_0_0()); }
		'collect'
		{ after(grammarAccess.getCollectionExpressionAccess().getNameCollectKeyword_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getCollectionExpressionAccess().getNameSelectKeyword_0_0_1()); }
		'select'
		{ after(grammarAccess.getCollectionExpressionAccess().getNameSelectKeyword_0_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getCollectionExpressionAccess().getNameSelectFirstKeyword_0_0_2()); }
		'selectFirst'
		{ after(grammarAccess.getCollectionExpressionAccess().getNameSelectFirstKeyword_0_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getCollectionExpressionAccess().getNameRejectKeyword_0_0_3()); }
		'reject'
		{ after(grammarAccess.getCollectionExpressionAccess().getNameRejectKeyword_0_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getCollectionExpressionAccess().getNameExistsKeyword_0_0_4()); }
		'exists'
		{ after(grammarAccess.getCollectionExpressionAccess().getNameExistsKeyword_0_0_4()); }
	)
	|
	(
		{ before(grammarAccess.getCollectionExpressionAccess().getNameNotExistsKeyword_0_0_5()); }
		'notExists'
		{ after(grammarAccess.getCollectionExpressionAccess().getNameNotExistsKeyword_0_0_5()); }
	)
	|
	(
		{ before(grammarAccess.getCollectionExpressionAccess().getNameSortByKeyword_0_0_6()); }
		'sortBy'
		{ after(grammarAccess.getCollectionExpressionAccess().getNameSortByKeyword_0_0_6()); }
	)
	|
	(
		{ before(grammarAccess.getCollectionExpressionAccess().getNameForAllKeyword_0_0_7()); }
		'forAll'
		{ after(grammarAccess.getCollectionExpressionAccess().getNameForAllKeyword_0_0_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getCollectionTypeParserRuleCall_0()); }
		ruleCollectionType
		{ after(grammarAccess.getTypeAccess().getCollectionTypeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getSimpleTypeParserRuleCall_1()); }
		ruleSimpleType
		{ after(grammarAccess.getTypeAccess().getSimpleTypeParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionType__ClAlternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCollectionTypeAccess().getClCollectionKeyword_0_0_0()); }
		'Collection'
		{ after(grammarAccess.getCollectionTypeAccess().getClCollectionKeyword_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getCollectionTypeAccess().getClListKeyword_0_0_1()); }
		'List'
		{ after(grammarAccess.getCollectionTypeAccess().getClListKeyword_0_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getCollectionTypeAccess().getClSetKeyword_0_0_2()); }
		'Set'
		{ after(grammarAccess.getCollectionTypeAccess().getClSetKeyword_0_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Casing__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCasingAccess().getSENSITIVEEnumLiteralDeclaration_0()); }
		('sensitive')
		{ after(grammarAccess.getCasingAccess().getSENSITIVEEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getCasingAccess().getINSENSITIVEEnumLiteralDeclaration_1()); }
		('insensitive')
		{ after(grammarAccess.getCasingAccess().getINSENSITIVEEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeModel__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopeModel__Group__0__Impl
	rule__ScopeModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeModel__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopeModelAccess().getScopingKeyword_0()); }
	'scoping'
	{ after(grammarAccess.getScopeModelAccess().getScopingKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeModel__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopeModel__Group__1__Impl
	rule__ScopeModel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeModel__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopeModelAccess().getNameAssignment_1()); }
	(rule__ScopeModel__NameAssignment_1)
	{ after(grammarAccess.getScopeModelAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeModel__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopeModel__Group__2__Impl
	rule__ScopeModel__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeModel__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopeModelAccess().getGroup_2()); }
	(rule__ScopeModel__Group_2__0)?
	{ after(grammarAccess.getScopeModelAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeModel__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopeModel__Group__3__Impl
	rule__ScopeModel__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeModel__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopeModelAccess().getImportsAssignment_3()); }
	(rule__ScopeModel__ImportsAssignment_3)*
	{ after(grammarAccess.getScopeModelAccess().getImportsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeModel__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopeModel__Group__4__Impl
	rule__ScopeModel__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeModel__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopeModelAccess().getExtensionsAssignment_4()); }
	(rule__ScopeModel__ExtensionsAssignment_4)*
	{ after(grammarAccess.getScopeModelAccess().getExtensionsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeModel__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopeModel__Group__5__Impl
	rule__ScopeModel__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeModel__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopeModelAccess().getInjectionsAssignment_5()); }
	(rule__ScopeModel__InjectionsAssignment_5)*
	{ after(grammarAccess.getScopeModelAccess().getInjectionsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeModel__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopeModel__Group__6__Impl
	rule__ScopeModel__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeModel__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopeModelAccess().getNamingAssignment_6()); }
	(rule__ScopeModel__NamingAssignment_6)?
	{ after(grammarAccess.getScopeModelAccess().getNamingAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeModel__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopeModel__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeModel__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopeModelAccess().getScopesAssignment_7()); }
	(rule__ScopeModel__ScopesAssignment_7)*
	{ after(grammarAccess.getScopeModelAccess().getScopesAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ScopeModel__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopeModel__Group_2__0__Impl
	rule__ScopeModel__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeModel__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopeModelAccess().getWithKeyword_2_0()); }
	'with'
	{ after(grammarAccess.getScopeModelAccess().getWithKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeModel__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopeModel__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeModel__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopeModelAccess().getIncludedScopesAssignment_2_1()); }
	(rule__ScopeModel__IncludedScopesAssignment_2_1)
	{ after(grammarAccess.getScopeModelAccess().getIncludedScopesAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }
	'import'
	{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__1__Impl
	rule__Import__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getPackageAssignment_1()); }
	(rule__Import__PackageAssignment_1)
	{ after(grammarAccess.getImportAccess().getPackageAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getGroup_2()); }
	(rule__Import__Group_2__0)?
	{ after(grammarAccess.getImportAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group_2__0__Impl
	rule__Import__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getAsKeyword_2_0()); }
	'as'
	{ after(grammarAccess.getImportAccess().getAsKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getNameAssignment_2_1()); }
	(rule__Import__NameAssignment_2_1)
	{ after(grammarAccess.getImportAccess().getNameAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Extension__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Extension__Group__0__Impl
	rule__Extension__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Extension__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtensionAccess().getExtensionKeyword_0()); }
	'extension'
	{ after(grammarAccess.getExtensionAccess().getExtensionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Extension__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Extension__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Extension__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtensionAccess().getExtensionAssignment_1()); }
	(rule__Extension__ExtensionAssignment_1)
	{ after(grammarAccess.getExtensionAccess().getExtensionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Injection__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Injection__Group__0__Impl
	rule__Injection__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Injection__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInjectionAccess().getInjectKeyword_0()); }
	'inject'
	{ after(grammarAccess.getInjectionAccess().getInjectKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Injection__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Injection__Group__1__Impl
	rule__Injection__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Injection__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInjectionAccess().getTypeAssignment_1()); }
	(rule__Injection__TypeAssignment_1)
	{ after(grammarAccess.getInjectionAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Injection__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Injection__Group__2__Impl
	rule__Injection__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Injection__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInjectionAccess().getAsKeyword_2()); }
	'as'
	{ after(grammarAccess.getInjectionAccess().getAsKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Injection__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Injection__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Injection__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInjectionAccess().getNameAssignment_3()); }
	(rule__Injection__NameAssignment_3)
	{ after(grammarAccess.getInjectionAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NamingSection__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamingSection__Group__0__Impl
	rule__NamingSection__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamingSection__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamingSectionAccess().getNamingSectionAction_0()); }
	()
	{ after(grammarAccess.getNamingSectionAccess().getNamingSectionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamingSection__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamingSection__Group__1__Impl
	rule__NamingSection__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NamingSection__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamingSectionAccess().getGroup_1()); }
	(rule__NamingSection__Group_1__0)?
	{ after(grammarAccess.getNamingSectionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamingSection__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamingSection__Group__2__Impl
	rule__NamingSection__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NamingSection__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamingSectionAccess().getNamingKeyword_2()); }
	'naming'
	{ after(grammarAccess.getNamingSectionAccess().getNamingKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamingSection__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamingSection__Group__3__Impl
	rule__NamingSection__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NamingSection__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamingSectionAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getNamingSectionAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamingSection__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamingSection__Group__4__Impl
	rule__NamingSection__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__NamingSection__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamingSectionAccess().getNamingsAssignment_4()); }
	(rule__NamingSection__NamingsAssignment_4)*
	{ after(grammarAccess.getNamingSectionAccess().getNamingsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamingSection__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamingSection__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamingSection__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamingSectionAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getNamingSectionAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NamingSection__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamingSection__Group_1__0__Impl
	rule__NamingSection__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamingSection__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamingSectionAccess().getCaseKeyword_1_0()); }
	'case'
	{ after(grammarAccess.getNamingSectionAccess().getCaseKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamingSection__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamingSection__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamingSection__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamingSectionAccess().getCasingAssignment_1_1()); }
	(rule__NamingSection__CasingAssignment_1_1)
	{ after(grammarAccess.getNamingSectionAccess().getCasingAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NamingDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamingDefinition__Group__0__Impl
	rule__NamingDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamingDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamingDefinitionAccess().getTypeAssignment_0()); }
	(rule__NamingDefinition__TypeAssignment_0)
	{ after(grammarAccess.getNamingDefinitionAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamingDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamingDefinition__Group__1__Impl
	rule__NamingDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NamingDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamingDefinitionAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getNamingDefinitionAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamingDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamingDefinition__Group__2__Impl
	rule__NamingDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NamingDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamingDefinitionAccess().getNamingAssignment_2()); }
	(rule__NamingDefinition__NamingAssignment_2)
	{ after(grammarAccess.getNamingDefinitionAccess().getNamingAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamingDefinition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamingDefinition__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamingDefinition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamingDefinitionAccess().getSemicolonKeyword_3()); }
	';'
	{ after(grammarAccess.getNamingDefinitionAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ScopeDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopeDefinition__Group__0__Impl
	rule__ScopeDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopeDefinitionAccess().getScopeKeyword_0()); }
	'scope'
	{ after(grammarAccess.getScopeDefinitionAccess().getScopeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopeDefinition__Group__1__Impl
	rule__ScopeDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopeDefinitionAccess().getGroup_1()); }
	(rule__ScopeDefinition__Group_1__0)?
	{ after(grammarAccess.getScopeDefinitionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopeDefinition__Group__2__Impl
	rule__ScopeDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopeDefinitionAccess().getAlternatives_2()); }
	(rule__ScopeDefinition__Alternatives_2)
	{ after(grammarAccess.getScopeDefinitionAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeDefinition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopeDefinition__Group__3__Impl
	rule__ScopeDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeDefinition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopeDefinitionAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getScopeDefinitionAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeDefinition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopeDefinition__Group__4__Impl
	rule__ScopeDefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeDefinition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getScopeDefinitionAccess().getRulesAssignment_4()); }
		(rule__ScopeDefinition__RulesAssignment_4)
		{ after(grammarAccess.getScopeDefinitionAccess().getRulesAssignment_4()); }
	)
	(
		{ before(grammarAccess.getScopeDefinitionAccess().getRulesAssignment_4()); }
		(rule__ScopeDefinition__RulesAssignment_4)*
		{ after(grammarAccess.getScopeDefinitionAccess().getRulesAssignment_4()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeDefinition__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopeDefinition__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeDefinition__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopeDefinitionAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getScopeDefinitionAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ScopeDefinition__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopeDefinition__Group_1__0__Impl
	rule__ScopeDefinition__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeDefinition__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopeDefinitionAccess().getLeftParenthesisKeyword_1_0()); }
	'('
	{ after(grammarAccess.getScopeDefinitionAccess().getLeftParenthesisKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeDefinition__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopeDefinition__Group_1__1__Impl
	rule__ScopeDefinition__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeDefinition__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopeDefinitionAccess().getNameAssignment_1_1()); }
	(rule__ScopeDefinition__NameAssignment_1_1)
	{ after(grammarAccess.getScopeDefinitionAccess().getNameAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeDefinition__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopeDefinition__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeDefinition__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopeDefinitionAccess().getRightParenthesisKeyword_1_2()); }
	')'
	{ after(grammarAccess.getScopeDefinitionAccess().getRightParenthesisKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ScopeDefinition__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopeDefinition__Group_2_1__0__Impl
	rule__ScopeDefinition__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeDefinition__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopeDefinitionAccess().getContextTypeAssignment_2_1_0()); }
	(rule__ScopeDefinition__ContextTypeAssignment_2_1_0)
	{ after(grammarAccess.getScopeDefinitionAccess().getContextTypeAssignment_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeDefinition__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopeDefinition__Group_2_1__1__Impl
	rule__ScopeDefinition__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeDefinition__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopeDefinitionAccess().getNumberSignKeyword_2_1_1()); }
	'#'
	{ after(grammarAccess.getScopeDefinitionAccess().getNumberSignKeyword_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeDefinition__Group_2_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopeDefinition__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeDefinition__Group_2_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopeDefinitionAccess().getReferenceAssignment_2_1_2()); }
	(rule__ScopeDefinition__ReferenceAssignment_2_1_2)
	{ after(grammarAccess.getScopeDefinitionAccess().getReferenceAssignment_2_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ScopeRule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopeRule__Group__0__Impl
	rule__ScopeRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeRule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopeRuleAccess().getContextKeyword_0()); }
	'context'
	{ after(grammarAccess.getScopeRuleAccess().getContextKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeRule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopeRule__Group__1__Impl
	rule__ScopeRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeRule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopeRuleAccess().getContextAssignment_1()); }
	(rule__ScopeRule__ContextAssignment_1)
	{ after(grammarAccess.getScopeRuleAccess().getContextAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeRule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopeRule__Group__2__Impl
	rule__ScopeRule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeRule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopeRuleAccess().getEqualsSignKeyword_2()); }
	'='
	{ after(grammarAccess.getScopeRuleAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeRule__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopeRule__Group__3__Impl
	rule__ScopeRule__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeRule__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopeRuleAccess().getExprsAssignment_3()); }
	(rule__ScopeRule__ExprsAssignment_3)
	{ after(grammarAccess.getScopeRuleAccess().getExprsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeRule__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopeRule__Group__4__Impl
	rule__ScopeRule__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeRule__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopeRuleAccess().getGroup_4()); }
	(rule__ScopeRule__Group_4__0)*
	{ after(grammarAccess.getScopeRuleAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeRule__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopeRule__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeRule__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopeRuleAccess().getSemicolonKeyword_5()); }
	';'
	{ after(grammarAccess.getScopeRuleAccess().getSemicolonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ScopeRule__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopeRule__Group_4__0__Impl
	rule__ScopeRule__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeRule__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopeRuleAccess().getGreaterThanSignGreaterThanSignKeyword_4_0()); }
	'>>'
	{ after(grammarAccess.getScopeRuleAccess().getGreaterThanSignGreaterThanSignKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeRule__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopeRule__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeRule__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopeRuleAccess().getExprsAssignment_4_1()); }
	(rule__ScopeRule__ExprsAssignment_4_1)
	{ after(grammarAccess.getScopeRuleAccess().getExprsAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ScopeContext__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopeContext__Group__0__Impl
	rule__ScopeContext__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeContext__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopeContextAccess().getAlternatives_0()); }
	(rule__ScopeContext__Alternatives_0)
	{ after(grammarAccess.getScopeContextAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeContext__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopeContext__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeContext__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopeContextAccess().getGroup_1()); }
	(rule__ScopeContext__Group_1__0)?
	{ after(grammarAccess.getScopeContextAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ScopeContext__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopeContext__Group_1__0__Impl
	rule__ScopeContext__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeContext__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopeContextAccess().getLeftSquareBracketKeyword_1_0()); }
	'['
	{ after(grammarAccess.getScopeContextAccess().getLeftSquareBracketKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeContext__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopeContext__Group_1__1__Impl
	rule__ScopeContext__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeContext__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopeContextAccess().getGuardAssignment_1_1()); }
	(rule__ScopeContext__GuardAssignment_1_1)
	{ after(grammarAccess.getScopeContextAccess().getGuardAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeContext__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopeContext__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeContext__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopeContextAccess().getRightSquareBracketKeyword_1_2()); }
	']'
	{ after(grammarAccess.getScopeContextAccess().getRightSquareBracketKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FactoryExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FactoryExpression__Group__0__Impl
	rule__FactoryExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FactoryExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactoryExpressionAccess().getFactoryKeyword_0()); }
	'factory'
	{ after(grammarAccess.getFactoryExpressionAccess().getFactoryKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FactoryExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FactoryExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FactoryExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactoryExpressionAccess().getExprAssignment_1()); }
	(rule__FactoryExpression__ExprAssignment_1)
	{ after(grammarAccess.getFactoryExpressionAccess().getExprAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ScopeDelegation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopeDelegation__Group__0__Impl
	rule__ScopeDelegation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeDelegation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopeDelegationAccess().getScopeofKeyword_0()); }
	'scopeof'
	{ after(grammarAccess.getScopeDelegationAccess().getScopeofKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeDelegation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopeDelegation__Group__1__Impl
	rule__ScopeDelegation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeDelegation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopeDelegationAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getScopeDelegationAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeDelegation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopeDelegation__Group__2__Impl
	rule__ScopeDelegation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeDelegation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopeDelegationAccess().getAlternatives_2()); }
	(rule__ScopeDelegation__Alternatives_2)
	{ after(grammarAccess.getScopeDelegationAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeDelegation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopeDelegation__Group__3__Impl
	rule__ScopeDelegation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeDelegation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopeDelegationAccess().getGroup_3()); }
	(rule__ScopeDelegation__Group_3__0)?
	{ after(grammarAccess.getScopeDelegationAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeDelegation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopeDelegation__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeDelegation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopeDelegationAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getScopeDelegationAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ScopeDelegation__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopeDelegation__Group_3__0__Impl
	rule__ScopeDelegation__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeDelegation__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopeDelegationAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getScopeDelegationAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeDelegation__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopeDelegation__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeDelegation__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopeDelegationAccess().getScopeAssignment_3_1()); }
	(rule__ScopeDelegation__ScopeAssignment_3_1)
	{ after(grammarAccess.getScopeDelegationAccess().getScopeAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NamedScopeExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamedScopeExpression__Group__0__Impl
	rule__NamedScopeExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedScopeExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamedScopeExpressionAccess().getAlternatives_0()); }
	(rule__NamedScopeExpression__Alternatives_0)
	{ after(grammarAccess.getNamedScopeExpressionAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedScopeExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamedScopeExpression__Group__1__Impl
	rule__NamedScopeExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedScopeExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamedScopeExpressionAccess().getGroup_1()); }
	(rule__NamedScopeExpression__Group_1__0)?
	{ after(grammarAccess.getNamedScopeExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedScopeExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamedScopeExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedScopeExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamedScopeExpressionAccess().getGroup_2()); }
	(rule__NamedScopeExpression__Group_2__0)?
	{ after(grammarAccess.getNamedScopeExpressionAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NamedScopeExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamedScopeExpression__Group_1__0__Impl
	rule__NamedScopeExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedScopeExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamedScopeExpressionAccess().getCaseDefAssignment_1_0()); }
	(rule__NamedScopeExpression__CaseDefAssignment_1_0)
	{ after(grammarAccess.getNamedScopeExpressionAccess().getCaseDefAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedScopeExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamedScopeExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedScopeExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamedScopeExpressionAccess().getCasingAssignment_1_1()); }
	(rule__NamedScopeExpression__CasingAssignment_1_1)
	{ after(grammarAccess.getNamedScopeExpressionAccess().getCasingAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NamedScopeExpression__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamedScopeExpression__Group_2__0__Impl
	rule__NamedScopeExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedScopeExpression__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamedScopeExpressionAccess().getAsKeyword_2_0()); }
	'as'
	{ after(grammarAccess.getNamedScopeExpressionAccess().getAsKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedScopeExpression__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamedScopeExpression__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedScopeExpression__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamedScopeExpressionAccess().getNamingAssignment_2_1()); }
	(rule__NamedScopeExpression__NamingAssignment_2_1)
	{ after(grammarAccess.getNamedScopeExpressionAccess().getNamingAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GlobalScopeExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalScopeExpression__Group__0__Impl
	rule__GlobalScopeExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalScopeExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalScopeExpressionAccess().getFindKeyword_0()); }
	'find'
	{ after(grammarAccess.getGlobalScopeExpressionAccess().getFindKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalScopeExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalScopeExpression__Group__1__Impl
	rule__GlobalScopeExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalScopeExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalScopeExpressionAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getGlobalScopeExpressionAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalScopeExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalScopeExpression__Group__2__Impl
	rule__GlobalScopeExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalScopeExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalScopeExpressionAccess().getTypeAssignment_2()); }
	(rule__GlobalScopeExpression__TypeAssignment_2)
	{ after(grammarAccess.getGlobalScopeExpressionAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalScopeExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalScopeExpression__Group__3__Impl
	rule__GlobalScopeExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalScopeExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalScopeExpressionAccess().getAlternatives_3()); }
	(rule__GlobalScopeExpression__Alternatives_3)?
	{ after(grammarAccess.getGlobalScopeExpressionAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalScopeExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalScopeExpression__Group__4__Impl
	rule__GlobalScopeExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalScopeExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalScopeExpressionAccess().getGroup_4()); }
	(rule__GlobalScopeExpression__Group_4__0)?
	{ after(grammarAccess.getGlobalScopeExpressionAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalScopeExpression__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalScopeExpression__Group__5__Impl
	rule__GlobalScopeExpression__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalScopeExpression__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalScopeExpressionAccess().getGroup_5()); }
	(rule__GlobalScopeExpression__Group_5__0)?
	{ after(grammarAccess.getGlobalScopeExpressionAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalScopeExpression__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalScopeExpression__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalScopeExpression__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalScopeExpressionAccess().getRightParenthesisKeyword_6()); }
	')'
	{ after(grammarAccess.getGlobalScopeExpressionAccess().getRightParenthesisKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GlobalScopeExpression__Group_3_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalScopeExpression__Group_3_0__0__Impl
	rule__GlobalScopeExpression__Group_3_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalScopeExpression__Group_3_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalScopeExpressionAccess().getCommaKeyword_3_0_0()); }
	','
	{ after(grammarAccess.getGlobalScopeExpressionAccess().getCommaKeyword_3_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalScopeExpression__Group_3_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalScopeExpression__Group_3_0__1__Impl
	rule__GlobalScopeExpression__Group_3_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalScopeExpression__Group_3_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalScopeExpressionAccess().getKeyKeyword_3_0_1()); }
	'key'
	{ after(grammarAccess.getGlobalScopeExpressionAccess().getKeyKeyword_3_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalScopeExpression__Group_3_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalScopeExpression__Group_3_0__2__Impl
	rule__GlobalScopeExpression__Group_3_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalScopeExpression__Group_3_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalScopeExpressionAccess().getEqualsSignKeyword_3_0_2()); }
	'='
	{ after(grammarAccess.getGlobalScopeExpressionAccess().getEqualsSignKeyword_3_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalScopeExpression__Group_3_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalScopeExpression__Group_3_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalScopeExpression__Group_3_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalScopeExpressionAccess().getNameAssignment_3_0_3()); }
	(rule__GlobalScopeExpression__NameAssignment_3_0_3)
	{ after(grammarAccess.getGlobalScopeExpressionAccess().getNameAssignment_3_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GlobalScopeExpression__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalScopeExpression__Group_3_1__0__Impl
	rule__GlobalScopeExpression__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalScopeExpression__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalScopeExpressionAccess().getCommaKeyword_3_1_0()); }
	','
	{ after(grammarAccess.getGlobalScopeExpressionAccess().getCommaKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalScopeExpression__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalScopeExpression__Group_3_1__1__Impl
	rule__GlobalScopeExpression__Group_3_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalScopeExpression__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalScopeExpressionAccess().getRecursivePrefixAssignment_3_1_1()); }
	(rule__GlobalScopeExpression__RecursivePrefixAssignment_3_1_1)?
	{ after(grammarAccess.getGlobalScopeExpressionAccess().getRecursivePrefixAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalScopeExpression__Group_3_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalScopeExpression__Group_3_1__2__Impl
	rule__GlobalScopeExpression__Group_3_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalScopeExpression__Group_3_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalScopeExpressionAccess().getPrefixKeyword_3_1_2()); }
	'prefix'
	{ after(grammarAccess.getGlobalScopeExpressionAccess().getPrefixKeyword_3_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalScopeExpression__Group_3_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalScopeExpression__Group_3_1__3__Impl
	rule__GlobalScopeExpression__Group_3_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalScopeExpression__Group_3_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalScopeExpressionAccess().getEqualsSignKeyword_3_1_3()); }
	'='
	{ after(grammarAccess.getGlobalScopeExpressionAccess().getEqualsSignKeyword_3_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalScopeExpression__Group_3_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalScopeExpression__Group_3_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalScopeExpression__Group_3_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalScopeExpressionAccess().getPrefixAssignment_3_1_4()); }
	(rule__GlobalScopeExpression__PrefixAssignment_3_1_4)
	{ after(grammarAccess.getGlobalScopeExpressionAccess().getPrefixAssignment_3_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GlobalScopeExpression__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalScopeExpression__Group_4__0__Impl
	rule__GlobalScopeExpression__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalScopeExpression__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalScopeExpressionAccess().getCommaKeyword_4_0()); }
	','
	{ after(grammarAccess.getGlobalScopeExpressionAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalScopeExpression__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalScopeExpression__Group_4__1__Impl
	rule__GlobalScopeExpression__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalScopeExpression__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalScopeExpressionAccess().getDataKeyword_4_1()); }
	'data'
	{ after(grammarAccess.getGlobalScopeExpressionAccess().getDataKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalScopeExpression__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalScopeExpression__Group_4__2__Impl
	rule__GlobalScopeExpression__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalScopeExpression__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalScopeExpressionAccess().getEqualsSignKeyword_4_2()); }
	'='
	{ after(grammarAccess.getGlobalScopeExpressionAccess().getEqualsSignKeyword_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalScopeExpression__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalScopeExpression__Group_4__3__Impl
	rule__GlobalScopeExpression__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalScopeExpression__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalScopeExpressionAccess().getLeftParenthesisKeyword_4_3()); }
	'('
	{ after(grammarAccess.getGlobalScopeExpressionAccess().getLeftParenthesisKeyword_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalScopeExpression__Group_4__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalScopeExpression__Group_4__4__Impl
	rule__GlobalScopeExpression__Group_4__5
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalScopeExpression__Group_4__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalScopeExpressionAccess().getDataAssignment_4_4()); }
	(rule__GlobalScopeExpression__DataAssignment_4_4)
	{ after(grammarAccess.getGlobalScopeExpressionAccess().getDataAssignment_4_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalScopeExpression__Group_4__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalScopeExpression__Group_4__5__Impl
	rule__GlobalScopeExpression__Group_4__6
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalScopeExpression__Group_4__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalScopeExpressionAccess().getGroup_4_5()); }
	(rule__GlobalScopeExpression__Group_4_5__0)*
	{ after(grammarAccess.getGlobalScopeExpressionAccess().getGroup_4_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalScopeExpression__Group_4__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalScopeExpression__Group_4__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalScopeExpression__Group_4__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalScopeExpressionAccess().getRightParenthesisKeyword_4_6()); }
	')'
	{ after(grammarAccess.getGlobalScopeExpressionAccess().getRightParenthesisKeyword_4_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GlobalScopeExpression__Group_4_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalScopeExpression__Group_4_5__0__Impl
	rule__GlobalScopeExpression__Group_4_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalScopeExpression__Group_4_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalScopeExpressionAccess().getCommaKeyword_4_5_0()); }
	','
	{ after(grammarAccess.getGlobalScopeExpressionAccess().getCommaKeyword_4_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalScopeExpression__Group_4_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalScopeExpression__Group_4_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalScopeExpression__Group_4_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalScopeExpressionAccess().getDataAssignment_4_5_1()); }
	(rule__GlobalScopeExpression__DataAssignment_4_5_1)
	{ after(grammarAccess.getGlobalScopeExpressionAccess().getDataAssignment_4_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GlobalScopeExpression__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalScopeExpression__Group_5__0__Impl
	rule__GlobalScopeExpression__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalScopeExpression__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalScopeExpressionAccess().getCommaKeyword_5_0()); }
	','
	{ after(grammarAccess.getGlobalScopeExpressionAccess().getCommaKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalScopeExpression__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalScopeExpression__Group_5__1__Impl
	rule__GlobalScopeExpression__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalScopeExpression__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalScopeExpressionAccess().getDomainsKeyword_5_1()); }
	'domains'
	{ after(grammarAccess.getGlobalScopeExpressionAccess().getDomainsKeyword_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalScopeExpression__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalScopeExpression__Group_5__2__Impl
	rule__GlobalScopeExpression__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalScopeExpression__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalScopeExpressionAccess().getEqualsSignKeyword_5_2()); }
	'='
	{ after(grammarAccess.getGlobalScopeExpressionAccess().getEqualsSignKeyword_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalScopeExpression__Group_5__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalScopeExpression__Group_5__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalScopeExpression__Group_5__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalScopeExpressionAccess().getAlternatives_5_3()); }
	(rule__GlobalScopeExpression__Alternatives_5_3)
	{ after(grammarAccess.getGlobalScopeExpressionAccess().getAlternatives_5_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GlobalScopeExpression__Group_5_3_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalScopeExpression__Group_5_3_2__0__Impl
	rule__GlobalScopeExpression__Group_5_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalScopeExpression__Group_5_3_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalScopeExpressionAccess().getLeftParenthesisKeyword_5_3_2_0()); }
	'('
	{ after(grammarAccess.getGlobalScopeExpressionAccess().getLeftParenthesisKeyword_5_3_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalScopeExpression__Group_5_3_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalScopeExpression__Group_5_3_2__1__Impl
	rule__GlobalScopeExpression__Group_5_3_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalScopeExpression__Group_5_3_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalScopeExpressionAccess().getDomainsAssignment_5_3_2_1()); }
	(rule__GlobalScopeExpression__DomainsAssignment_5_3_2_1)
	{ after(grammarAccess.getGlobalScopeExpressionAccess().getDomainsAssignment_5_3_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalScopeExpression__Group_5_3_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalScopeExpression__Group_5_3_2__2__Impl
	rule__GlobalScopeExpression__Group_5_3_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalScopeExpression__Group_5_3_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalScopeExpressionAccess().getGroup_5_3_2_2()); }
	(rule__GlobalScopeExpression__Group_5_3_2_2__0)*
	{ after(grammarAccess.getGlobalScopeExpressionAccess().getGroup_5_3_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalScopeExpression__Group_5_3_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalScopeExpression__Group_5_3_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalScopeExpression__Group_5_3_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalScopeExpressionAccess().getRightParenthesisKeyword_5_3_2_3()); }
	')'
	{ after(grammarAccess.getGlobalScopeExpressionAccess().getRightParenthesisKeyword_5_3_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GlobalScopeExpression__Group_5_3_2_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalScopeExpression__Group_5_3_2_2__0__Impl
	rule__GlobalScopeExpression__Group_5_3_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalScopeExpression__Group_5_3_2_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalScopeExpressionAccess().getCommaKeyword_5_3_2_2_0()); }
	','
	{ after(grammarAccess.getGlobalScopeExpressionAccess().getCommaKeyword_5_3_2_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalScopeExpression__Group_5_3_2_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalScopeExpression__Group_5_3_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalScopeExpression__Group_5_3_2_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalScopeExpressionAccess().getDomainsAssignment_5_3_2_2_1()); }
	(rule__GlobalScopeExpression__DomainsAssignment_5_3_2_2_1)
	{ after(grammarAccess.getGlobalScopeExpressionAccess().getDomainsAssignment_5_3_2_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MatchDataExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MatchDataExpression__Group__0__Impl
	rule__MatchDataExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchDataExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchDataExpressionAccess().getKeyAssignment_0()); }
	(rule__MatchDataExpression__KeyAssignment_0)
	{ after(grammarAccess.getMatchDataExpressionAccess().getKeyAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchDataExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MatchDataExpression__Group__1__Impl
	rule__MatchDataExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchDataExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchDataExpressionAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getMatchDataExpressionAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchDataExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MatchDataExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchDataExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchDataExpressionAccess().getValueAssignment_2()); }
	(rule__MatchDataExpression__ValueAssignment_2)
	{ after(grammarAccess.getMatchDataExpressionAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LambdaDataExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LambdaDataExpression__Group__0__Impl
	rule__LambdaDataExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LambdaDataExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLambdaDataExpressionAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getLambdaDataExpressionAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LambdaDataExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LambdaDataExpression__Group__1__Impl
	rule__LambdaDataExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LambdaDataExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLambdaDataExpressionAccess().getDescAssignment_1()); }
	(rule__LambdaDataExpression__DescAssignment_1)
	{ after(grammarAccess.getLambdaDataExpressionAccess().getDescAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LambdaDataExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LambdaDataExpression__Group__2__Impl
	rule__LambdaDataExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LambdaDataExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLambdaDataExpressionAccess().getVerticalLineKeyword_2()); }
	'|'
	{ after(grammarAccess.getLambdaDataExpressionAccess().getVerticalLineKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LambdaDataExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LambdaDataExpression__Group__3__Impl
	rule__LambdaDataExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LambdaDataExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLambdaDataExpressionAccess().getValueAssignment_3()); }
	(rule__LambdaDataExpression__ValueAssignment_3)
	{ after(grammarAccess.getLambdaDataExpressionAccess().getValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LambdaDataExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LambdaDataExpression__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LambdaDataExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLambdaDataExpressionAccess().getRightSquareBracketKeyword_4()); }
	']'
	{ after(grammarAccess.getLambdaDataExpressionAccess().getRightSquareBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Naming__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Naming__Group_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Naming__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamingAccess().getGroup_0_0()); }
	(rule__Naming__Group_0_0__0)
	{ after(grammarAccess.getNamingAccess().getGroup_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Naming__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Naming__Group_0_0__0__Impl
	rule__Naming__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Naming__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamingAccess().getLeftParenthesisKeyword_0_0_0()); }
	'('
	{ after(grammarAccess.getNamingAccess().getLeftParenthesisKeyword_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Naming__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Naming__Group_0_0__1__Impl
	rule__Naming__Group_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Naming__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamingAccess().getNamesAssignment_0_0_1()); }
	(rule__Naming__NamesAssignment_0_0_1)
	{ after(grammarAccess.getNamingAccess().getNamesAssignment_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Naming__Group_0_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Naming__Group_0_0__2__Impl
	rule__Naming__Group_0_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Naming__Group_0_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamingAccess().getGroup_0_0_2()); }
	(rule__Naming__Group_0_0_2__0)*
	{ after(grammarAccess.getNamingAccess().getGroup_0_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Naming__Group_0_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Naming__Group_0_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Naming__Group_0_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamingAccess().getRightParenthesisKeyword_0_0_3()); }
	')'
	{ after(grammarAccess.getNamingAccess().getRightParenthesisKeyword_0_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Naming__Group_0_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Naming__Group_0_0_2__0__Impl
	rule__Naming__Group_0_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Naming__Group_0_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamingAccess().getCommaKeyword_0_0_2_0()); }
	','
	{ after(grammarAccess.getNamingAccess().getCommaKeyword_0_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Naming__Group_0_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Naming__Group_0_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Naming__Group_0_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamingAccess().getNamesAssignment_0_0_2_1()); }
	(rule__Naming__NamesAssignment_0_0_2_1)
	{ after(grammarAccess.getNamingAccess().getNamesAssignment_0_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NamingExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamingExpression__Group_1__0__Impl
	rule__NamingExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamingExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamingExpressionAccess().getFactoryAssignment_1_0()); }
	(rule__NamingExpression__FactoryAssignment_1_0)?
	{ after(grammarAccess.getNamingExpressionAccess().getFactoryAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamingExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamingExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamingExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamingExpressionAccess().getExpressionAssignment_1_1()); }
	(rule__NamingExpression__ExpressionAssignment_1_1)
	{ after(grammarAccess.getNamingExpressionAccess().getExpressionAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedID__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedID__Group__0__Impl
	rule__QualifiedID__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedID__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedIDAccess().getIdentifierParserRuleCall_0()); }
	ruleIdentifier
	{ after(grammarAccess.getQualifiedIDAccess().getIdentifierParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedID__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedID__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedID__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedIDAccess().getGroup_1()); }
	(rule__QualifiedID__Group_1__0)*
	{ after(grammarAccess.getQualifiedIDAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedID__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedID__Group_1__0__Impl
	rule__QualifiedID__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedID__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedIDAccess().getColonColonKeyword_1_0()); }
	'::'
	{ after(grammarAccess.getQualifiedIDAccess().getColonColonKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedID__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedID__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedID__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedIDAccess().getIdentifierParserRuleCall_1_1()); }
	ruleIdentifier
	{ after(grammarAccess.getQualifiedIDAccess().getIdentifierParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DottedID__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DottedID__Group__0__Impl
	rule__DottedID__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DottedID__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDottedIDAccess().getIdentifierParserRuleCall_0()); }
	ruleIdentifier
	{ after(grammarAccess.getDottedIDAccess().getIdentifierParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DottedID__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DottedID__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DottedID__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDottedIDAccess().getGroup_1()); }
	(rule__DottedID__Group_1__0)*
	{ after(grammarAccess.getDottedIDAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DottedID__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DottedID__Group_1__0__Impl
	rule__DottedID__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DottedID__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDottedIDAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getDottedIDAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DottedID__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DottedID__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DottedID__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDottedIDAccess().getIdentifierParserRuleCall_1_1()); }
	ruleIdentifier
	{ after(grammarAccess.getDottedIDAccess().getIdentifierParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LetExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetExpression__Group__0__Impl
	rule__LetExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetExpressionAccess().getLetKeyword_0()); }
	'let'
	{ after(grammarAccess.getLetExpressionAccess().getLetKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetExpression__Group__1__Impl
	rule__LetExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetExpressionAccess().getIdentifierAssignment_1()); }
	(rule__LetExpression__IdentifierAssignment_1)
	{ after(grammarAccess.getLetExpressionAccess().getIdentifierAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetExpression__Group__2__Impl
	rule__LetExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetExpressionAccess().getEqualsSignKeyword_2()); }
	'='
	{ after(grammarAccess.getLetExpressionAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetExpression__Group__3__Impl
	rule__LetExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetExpressionAccess().getVarExprAssignment_3()); }
	(rule__LetExpression__VarExprAssignment_3)
	{ after(grammarAccess.getLetExpressionAccess().getVarExprAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetExpression__Group__4__Impl
	rule__LetExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetExpressionAccess().getColonKeyword_4()); }
	':'
	{ after(grammarAccess.getLetExpressionAccess().getColonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetExpression__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetExpressionAccess().getTargetAssignment_5()); }
	(rule__LetExpression__TargetAssignment_5)
	{ after(grammarAccess.getLetExpressionAccess().getTargetAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CastedExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CastedExpression__Group__0__Impl
	rule__CastedExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CastedExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCastedExpressionAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getCastedExpressionAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CastedExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CastedExpression__Group__1__Impl
	rule__CastedExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CastedExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCastedExpressionAccess().getTypeAssignment_1()); }
	(rule__CastedExpression__TypeAssignment_1)
	{ after(grammarAccess.getCastedExpressionAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CastedExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CastedExpression__Group__2__Impl
	rule__CastedExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CastedExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCastedExpressionAccess().getRightParenthesisKeyword_2()); }
	')'
	{ after(grammarAccess.getCastedExpressionAccess().getRightParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CastedExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CastedExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CastedExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCastedExpressionAccess().getTargetAssignment_3()); }
	(rule__CastedExpression__TargetAssignment_3)
	{ after(grammarAccess.getCastedExpressionAccess().getTargetAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ChainExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChainExpression__Group__0__Impl
	rule__ChainExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChainExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChainExpressionAccess().getChainedExpressionParserRuleCall_0()); }
	ruleChainedExpression
	{ after(grammarAccess.getChainExpressionAccess().getChainedExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChainExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChainExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChainExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChainExpressionAccess().getGroup_1()); }
	(rule__ChainExpression__Group_1__0)*
	{ after(grammarAccess.getChainExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ChainExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChainExpression__Group_1__0__Impl
	rule__ChainExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChainExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChainExpressionAccess().getChainExpressionFirstAction_1_0()); }
	()
	{ after(grammarAccess.getChainExpressionAccess().getChainExpressionFirstAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChainExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChainExpression__Group_1__1__Impl
	rule__ChainExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ChainExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChainExpressionAccess().getHyphenMinusGreaterThanSignKeyword_1_1()); }
	'->'
	{ after(grammarAccess.getChainExpressionAccess().getHyphenMinusGreaterThanSignKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChainExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChainExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChainExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChainExpressionAccess().getNextAssignment_1_2()); }
	(rule__ChainExpression__NextAssignment_1_2)
	{ after(grammarAccess.getChainExpressionAccess().getNextAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfExpressionTri__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpressionTri__Group__0__Impl
	rule__IfExpressionTri__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpressionTri__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionTriAccess().getOrExpressionParserRuleCall_0()); }
	ruleOrExpression
	{ after(grammarAccess.getIfExpressionTriAccess().getOrExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpressionTri__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpressionTri__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpressionTri__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionTriAccess().getGroup_1()); }
	(rule__IfExpressionTri__Group_1__0)?
	{ after(grammarAccess.getIfExpressionTriAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfExpressionTri__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpressionTri__Group_1__0__Impl
	rule__IfExpressionTri__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpressionTri__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionTriAccess().getIfExpressionConditionAction_1_0()); }
	()
	{ after(grammarAccess.getIfExpressionTriAccess().getIfExpressionConditionAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpressionTri__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpressionTri__Group_1__1__Impl
	rule__IfExpressionTri__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpressionTri__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionTriAccess().getQuestionMarkKeyword_1_1()); }
	'?'
	{ after(grammarAccess.getIfExpressionTriAccess().getQuestionMarkKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpressionTri__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpressionTri__Group_1__2__Impl
	rule__IfExpressionTri__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpressionTri__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionTriAccess().getThenPartAssignment_1_2()); }
	(rule__IfExpressionTri__ThenPartAssignment_1_2)
	{ after(grammarAccess.getIfExpressionTriAccess().getThenPartAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpressionTri__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpressionTri__Group_1__3__Impl
	rule__IfExpressionTri__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpressionTri__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionTriAccess().getColonKeyword_1_3()); }
	':'
	{ after(grammarAccess.getIfExpressionTriAccess().getColonKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpressionTri__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpressionTri__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpressionTri__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionTriAccess().getElsePartAssignment_1_4()); }
	(rule__IfExpressionTri__ElsePartAssignment_1_4)
	{ after(grammarAccess.getIfExpressionTriAccess().getElsePartAssignment_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfExpressionKw__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpressionKw__Group__0__Impl
	rule__IfExpressionKw__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpressionKw__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionKwAccess().getIfKeyword_0()); }
	'if'
	{ after(grammarAccess.getIfExpressionKwAccess().getIfKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpressionKw__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpressionKw__Group__1__Impl
	rule__IfExpressionKw__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpressionKw__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionKwAccess().getConditionAssignment_1()); }
	(rule__IfExpressionKw__ConditionAssignment_1)
	{ after(grammarAccess.getIfExpressionKwAccess().getConditionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpressionKw__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpressionKw__Group__2__Impl
	rule__IfExpressionKw__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpressionKw__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionKwAccess().getThenKeyword_2()); }
	'then'
	{ after(grammarAccess.getIfExpressionKwAccess().getThenKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpressionKw__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpressionKw__Group__3__Impl
	rule__IfExpressionKw__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpressionKw__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionKwAccess().getThenPartAssignment_3()); }
	(rule__IfExpressionKw__ThenPartAssignment_3)
	{ after(grammarAccess.getIfExpressionKwAccess().getThenPartAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpressionKw__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpressionKw__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpressionKw__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionKwAccess().getGroup_4()); }
	(rule__IfExpressionKw__Group_4__0)?
	{ after(grammarAccess.getIfExpressionKwAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfExpressionKw__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpressionKw__Group_4__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpressionKw__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionKwAccess().getGroup_4_0()); }
	(rule__IfExpressionKw__Group_4_0__0)
	{ after(grammarAccess.getIfExpressionKwAccess().getGroup_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfExpressionKw__Group_4_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpressionKw__Group_4_0__0__Impl
	rule__IfExpressionKw__Group_4_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpressionKw__Group_4_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionKwAccess().getElseKeyword_4_0_0()); }
	'else'
	{ after(grammarAccess.getIfExpressionKwAccess().getElseKeyword_4_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpressionKw__Group_4_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpressionKw__Group_4_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpressionKw__Group_4_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionKwAccess().getElsePartAssignment_4_0_1()); }
	(rule__IfExpressionKw__ElsePartAssignment_4_0_1)
	{ after(grammarAccess.getIfExpressionKwAccess().getElsePartAssignment_4_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchExpression__Group__0__Impl
	rule__SwitchExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchExpressionAccess().getSwitchKeyword_0()); }
	'switch'
	{ after(grammarAccess.getSwitchExpressionAccess().getSwitchKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchExpression__Group__1__Impl
	rule__SwitchExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchExpressionAccess().getGroup_1()); }
	(rule__SwitchExpression__Group_1__0)?
	{ after(grammarAccess.getSwitchExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchExpression__Group__2__Impl
	rule__SwitchExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchExpressionAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getSwitchExpressionAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchExpression__Group__3__Impl
	rule__SwitchExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchExpressionAccess().getCaseAssignment_3()); }
	(rule__SwitchExpression__CaseAssignment_3)*
	{ after(grammarAccess.getSwitchExpressionAccess().getCaseAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchExpression__Group__4__Impl
	rule__SwitchExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchExpressionAccess().getDefaultKeyword_4()); }
	'default'
	{ after(grammarAccess.getSwitchExpressionAccess().getDefaultKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchExpression__Group__5__Impl
	rule__SwitchExpression__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchExpressionAccess().getColonKeyword_5()); }
	':'
	{ after(grammarAccess.getSwitchExpressionAccess().getColonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchExpression__Group__6__Impl
	rule__SwitchExpression__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchExpressionAccess().getDefaultExprAssignment_6()); }
	(rule__SwitchExpression__DefaultExprAssignment_6)
	{ after(grammarAccess.getSwitchExpressionAccess().getDefaultExprAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchExpression__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchExpressionAccess().getRightCurlyBracketKeyword_7()); }
	'}'
	{ after(grammarAccess.getSwitchExpressionAccess().getRightCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchExpression__Group_1__0__Impl
	rule__SwitchExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchExpressionAccess().getLeftParenthesisKeyword_1_0()); }
	'('
	{ after(grammarAccess.getSwitchExpressionAccess().getLeftParenthesisKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchExpression__Group_1__1__Impl
	rule__SwitchExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchExpressionAccess().getSwitchExprAssignment_1_1()); }
	(rule__SwitchExpression__SwitchExprAssignment_1_1)
	{ after(grammarAccess.getSwitchExpressionAccess().getSwitchExprAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchExpressionAccess().getRightParenthesisKeyword_1_2()); }
	')'
	{ after(grammarAccess.getSwitchExpressionAccess().getRightParenthesisKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Case__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Case__Group__0__Impl
	rule__Case__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Case__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseAccess().getCaseKeyword_0()); }
	'case'
	{ after(grammarAccess.getCaseAccess().getCaseKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Case__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Case__Group__1__Impl
	rule__Case__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Case__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseAccess().getConditionAssignment_1()); }
	(rule__Case__ConditionAssignment_1)
	{ after(grammarAccess.getCaseAccess().getConditionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Case__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Case__Group__2__Impl
	rule__Case__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Case__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getCaseAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Case__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Case__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Case__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseAccess().getThenParAssignment_3()); }
	(rule__Case__ThenParAssignment_3)
	{ after(grammarAccess.getCaseAccess().getThenParAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpression__Group__0__Impl
	rule__OrExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0()); }
	ruleAndExpression
	{ after(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExpressionAccess().getGroup_1()); }
	(rule__OrExpression__Group_1__0)*
	{ after(grammarAccess.getOrExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpression__Group_1__0__Impl
	rule__OrExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExpressionAccess().getBooleanOperationLeftAction_1_0()); }
	()
	{ after(grammarAccess.getOrExpressionAccess().getBooleanOperationLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpression__Group_1__1__Impl
	rule__OrExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExpressionAccess().getOperatorAssignment_1_1()); }
	(rule__OrExpression__OperatorAssignment_1_1)
	{ after(grammarAccess.getOrExpressionAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExpressionAccess().getRightAssignment_1_2()); }
	(rule__OrExpression__RightAssignment_1_2)
	{ after(grammarAccess.getOrExpressionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group__0__Impl
	rule__AndExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getImpliesExpressionParserRuleCall_0()); }
	ruleImpliesExpression
	{ after(grammarAccess.getAndExpressionAccess().getImpliesExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getGroup_1()); }
	(rule__AndExpression__Group_1__0)*
	{ after(grammarAccess.getAndExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group_1__0__Impl
	rule__AndExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getBooleanOperationLeftAction_1_0()); }
	()
	{ after(grammarAccess.getAndExpressionAccess().getBooleanOperationLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group_1__1__Impl
	rule__AndExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getOperatorAssignment_1_1()); }
	(rule__AndExpression__OperatorAssignment_1_1)
	{ after(grammarAccess.getAndExpressionAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getRightAssignment_1_2()); }
	(rule__AndExpression__RightAssignment_1_2)
	{ after(grammarAccess.getAndExpressionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImpliesExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImpliesExpression__Group__0__Impl
	rule__ImpliesExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImpliesExpressionAccess().getRelationalExpressionParserRuleCall_0()); }
	ruleRelationalExpression
	{ after(grammarAccess.getImpliesExpressionAccess().getRelationalExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImpliesExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImpliesExpressionAccess().getGroup_1()); }
	(rule__ImpliesExpression__Group_1__0)*
	{ after(grammarAccess.getImpliesExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImpliesExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImpliesExpression__Group_1__0__Impl
	rule__ImpliesExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImpliesExpressionAccess().getBooleanOperationLeftAction_1_0()); }
	()
	{ after(grammarAccess.getImpliesExpressionAccess().getBooleanOperationLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImpliesExpression__Group_1__1__Impl
	rule__ImpliesExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImpliesExpressionAccess().getOperatorAssignment_1_1()); }
	(rule__ImpliesExpression__OperatorAssignment_1_1)
	{ after(grammarAccess.getImpliesExpressionAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImpliesExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImpliesExpressionAccess().getRightAssignment_1_2()); }
	(rule__ImpliesExpression__RightAssignment_1_2)
	{ after(grammarAccess.getImpliesExpressionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExpression__Group__0__Impl
	rule__RelationalExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExpressionAccess().getAdditiveExpressionParserRuleCall_0()); }
	ruleAdditiveExpression
	{ after(grammarAccess.getRelationalExpressionAccess().getAdditiveExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExpressionAccess().getGroup_1()); }
	(rule__RelationalExpression__Group_1__0)*
	{ after(grammarAccess.getRelationalExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExpression__Group_1__0__Impl
	rule__RelationalExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExpressionAccess().getBooleanOperationLeftAction_1_0()); }
	()
	{ after(grammarAccess.getRelationalExpressionAccess().getBooleanOperationLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExpression__Group_1__1__Impl
	rule__RelationalExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExpressionAccess().getOperatorAssignment_1_1()); }
	(rule__RelationalExpression__OperatorAssignment_1_1)
	{ after(grammarAccess.getRelationalExpressionAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExpressionAccess().getRightAssignment_1_2()); }
	(rule__RelationalExpression__RightAssignment_1_2)
	{ after(grammarAccess.getRelationalExpressionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpression__Group__0__Impl
	rule__AdditiveExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0()); }
	ruleMultiplicativeExpression
	{ after(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpressionAccess().getGroup_1()); }
	(rule__AdditiveExpression__Group_1__0)*
	{ after(grammarAccess.getAdditiveExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpression__Group_1__0__Impl
	rule__AdditiveExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpressionAccess().getOperationCallParamsAction_1_0()); }
	()
	{ after(grammarAccess.getAdditiveExpressionAccess().getOperationCallParamsAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpression__Group_1__1__Impl
	rule__AdditiveExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpressionAccess().getNameAssignment_1_1()); }
	(rule__AdditiveExpression__NameAssignment_1_1)
	{ after(grammarAccess.getAdditiveExpressionAccess().getNameAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpressionAccess().getParamsAssignment_1_2()); }
	(rule__AdditiveExpression__ParamsAssignment_1_2)
	{ after(grammarAccess.getAdditiveExpressionAccess().getParamsAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpression__Group__0__Impl
	rule__MultiplicativeExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExpressionAccess().getUnaryOrInfixExpressionParserRuleCall_0()); }
	ruleUnaryOrInfixExpression
	{ after(grammarAccess.getMultiplicativeExpressionAccess().getUnaryOrInfixExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1()); }
	(rule__MultiplicativeExpression__Group_1__0)*
	{ after(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpression__Group_1__0__Impl
	rule__MultiplicativeExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExpressionAccess().getOperationCallParamsAction_1_0()); }
	()
	{ after(grammarAccess.getMultiplicativeExpressionAccess().getOperationCallParamsAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpression__Group_1__1__Impl
	rule__MultiplicativeExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExpressionAccess().getNameAssignment_1_1()); }
	(rule__MultiplicativeExpression__NameAssignment_1_1)
	{ after(grammarAccess.getMultiplicativeExpressionAccess().getNameAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExpressionAccess().getParamsAssignment_1_2()); }
	(rule__MultiplicativeExpression__ParamsAssignment_1_2)
	{ after(grammarAccess.getMultiplicativeExpressionAccess().getParamsAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpression__Group__0__Impl
	rule__UnaryExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExpressionAccess().getNameAssignment_0()); }
	(rule__UnaryExpression__NameAssignment_0)
	{ after(grammarAccess.getUnaryExpressionAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExpressionAccess().getParamsAssignment_1()); }
	(rule__UnaryExpression__ParamsAssignment_1)
	{ after(grammarAccess.getUnaryExpressionAccess().getParamsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InfixExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InfixExpression__Group__0__Impl
	rule__InfixExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInfixExpressionAccess().getPrimaryExpressionParserRuleCall_0()); }
	rulePrimaryExpression
	{ after(grammarAccess.getInfixExpressionAccess().getPrimaryExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InfixExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInfixExpressionAccess().getAlternatives_1()); }
	(rule__InfixExpression__Alternatives_1)*
	{ after(grammarAccess.getInfixExpressionAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InfixExpression__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InfixExpression__Group_1_0__0__Impl
	rule__InfixExpression__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixExpression__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInfixExpressionAccess().getOperationCallTargetAction_1_0_0()); }
	()
	{ after(grammarAccess.getInfixExpressionAccess().getOperationCallTargetAction_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixExpression__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InfixExpression__Group_1_0__1__Impl
	rule__InfixExpression__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixExpression__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInfixExpressionAccess().getFullStopKeyword_1_0_1()); }
	'.'
	{ after(grammarAccess.getInfixExpressionAccess().getFullStopKeyword_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixExpression__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InfixExpression__Group_1_0__2__Impl
	rule__InfixExpression__Group_1_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixExpression__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInfixExpressionAccess().getNameAssignment_1_0_2()); }
	(rule__InfixExpression__NameAssignment_1_0_2)
	{ after(grammarAccess.getInfixExpressionAccess().getNameAssignment_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixExpression__Group_1_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InfixExpression__Group_1_0__3__Impl
	rule__InfixExpression__Group_1_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixExpression__Group_1_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInfixExpressionAccess().getLeftParenthesisKeyword_1_0_3()); }
	'('
	{ after(grammarAccess.getInfixExpressionAccess().getLeftParenthesisKeyword_1_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixExpression__Group_1_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InfixExpression__Group_1_0__4__Impl
	rule__InfixExpression__Group_1_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixExpression__Group_1_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInfixExpressionAccess().getGroup_1_0_4()); }
	(rule__InfixExpression__Group_1_0_4__0)?
	{ after(grammarAccess.getInfixExpressionAccess().getGroup_1_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixExpression__Group_1_0__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InfixExpression__Group_1_0__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixExpression__Group_1_0__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInfixExpressionAccess().getRightParenthesisKeyword_1_0_5()); }
	')'
	{ after(grammarAccess.getInfixExpressionAccess().getRightParenthesisKeyword_1_0_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InfixExpression__Group_1_0_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InfixExpression__Group_1_0_4__0__Impl
	rule__InfixExpression__Group_1_0_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixExpression__Group_1_0_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInfixExpressionAccess().getParamsAssignment_1_0_4_0()); }
	(rule__InfixExpression__ParamsAssignment_1_0_4_0)
	{ after(grammarAccess.getInfixExpressionAccess().getParamsAssignment_1_0_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixExpression__Group_1_0_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InfixExpression__Group_1_0_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixExpression__Group_1_0_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInfixExpressionAccess().getGroup_1_0_4_1()); }
	(rule__InfixExpression__Group_1_0_4_1__0)*
	{ after(grammarAccess.getInfixExpressionAccess().getGroup_1_0_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InfixExpression__Group_1_0_4_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InfixExpression__Group_1_0_4_1__0__Impl
	rule__InfixExpression__Group_1_0_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixExpression__Group_1_0_4_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInfixExpressionAccess().getCommaKeyword_1_0_4_1_0()); }
	','
	{ after(grammarAccess.getInfixExpressionAccess().getCommaKeyword_1_0_4_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixExpression__Group_1_0_4_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InfixExpression__Group_1_0_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixExpression__Group_1_0_4_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInfixExpressionAccess().getParamsAssignment_1_0_4_1_1()); }
	(rule__InfixExpression__ParamsAssignment_1_0_4_1_1)
	{ after(grammarAccess.getInfixExpressionAccess().getParamsAssignment_1_0_4_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InfixExpression__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InfixExpression__Group_1_1__0__Impl
	rule__InfixExpression__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixExpression__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInfixExpressionAccess().getFeatureCallTargetAction_1_1_0()); }
	()
	{ after(grammarAccess.getInfixExpressionAccess().getFeatureCallTargetAction_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixExpression__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InfixExpression__Group_1_1__1__Impl
	rule__InfixExpression__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixExpression__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInfixExpressionAccess().getFullStopKeyword_1_1_1()); }
	'.'
	{ after(grammarAccess.getInfixExpressionAccess().getFullStopKeyword_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixExpression__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InfixExpression__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixExpression__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInfixExpressionAccess().getTypeAssignment_1_1_2()); }
	(rule__InfixExpression__TypeAssignment_1_1_2)
	{ after(grammarAccess.getInfixExpressionAccess().getTypeAssignment_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InfixExpression__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InfixExpression__Group_1_2__0__Impl
	rule__InfixExpression__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixExpression__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInfixExpressionAccess().getTypeSelectExpressionTargetAction_1_2_0()); }
	()
	{ after(grammarAccess.getInfixExpressionAccess().getTypeSelectExpressionTargetAction_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixExpression__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InfixExpression__Group_1_2__1__Impl
	rule__InfixExpression__Group_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixExpression__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInfixExpressionAccess().getFullStopKeyword_1_2_1()); }
	'.'
	{ after(grammarAccess.getInfixExpressionAccess().getFullStopKeyword_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixExpression__Group_1_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InfixExpression__Group_1_2__2__Impl
	rule__InfixExpression__Group_1_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixExpression__Group_1_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInfixExpressionAccess().getNameAssignment_1_2_2()); }
	(rule__InfixExpression__NameAssignment_1_2_2)
	{ after(grammarAccess.getInfixExpressionAccess().getNameAssignment_1_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixExpression__Group_1_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InfixExpression__Group_1_2__3__Impl
	rule__InfixExpression__Group_1_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixExpression__Group_1_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInfixExpressionAccess().getLeftParenthesisKeyword_1_2_3()); }
	'('
	{ after(grammarAccess.getInfixExpressionAccess().getLeftParenthesisKeyword_1_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixExpression__Group_1_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InfixExpression__Group_1_2__4__Impl
	rule__InfixExpression__Group_1_2__5
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixExpression__Group_1_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInfixExpressionAccess().getTypeAssignment_1_2_4()); }
	(rule__InfixExpression__TypeAssignment_1_2_4)
	{ after(grammarAccess.getInfixExpressionAccess().getTypeAssignment_1_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixExpression__Group_1_2__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InfixExpression__Group_1_2__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixExpression__Group_1_2__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInfixExpressionAccess().getRightParenthesisKeyword_1_2_5()); }
	')'
	{ after(grammarAccess.getInfixExpressionAccess().getRightParenthesisKeyword_1_2_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InfixExpression__Group_1_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InfixExpression__Group_1_3__0__Impl
	rule__InfixExpression__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixExpression__Group_1_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInfixExpressionAccess().getCollectionExpressionTargetAction_1_3_0()); }
	()
	{ after(grammarAccess.getInfixExpressionAccess().getCollectionExpressionTargetAction_1_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixExpression__Group_1_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InfixExpression__Group_1_3__1__Impl
	rule__InfixExpression__Group_1_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixExpression__Group_1_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInfixExpressionAccess().getFullStopKeyword_1_3_1()); }
	'.'
	{ after(grammarAccess.getInfixExpressionAccess().getFullStopKeyword_1_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixExpression__Group_1_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InfixExpression__Group_1_3__2__Impl
	rule__InfixExpression__Group_1_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixExpression__Group_1_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInfixExpressionAccess().getNameAssignment_1_3_2()); }
	(rule__InfixExpression__NameAssignment_1_3_2)
	{ after(grammarAccess.getInfixExpressionAccess().getNameAssignment_1_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixExpression__Group_1_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InfixExpression__Group_1_3__3__Impl
	rule__InfixExpression__Group_1_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixExpression__Group_1_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInfixExpressionAccess().getLeftParenthesisKeyword_1_3_3()); }
	'('
	{ after(grammarAccess.getInfixExpressionAccess().getLeftParenthesisKeyword_1_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixExpression__Group_1_3__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InfixExpression__Group_1_3__4__Impl
	rule__InfixExpression__Group_1_3__5
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixExpression__Group_1_3__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInfixExpressionAccess().getGroup_1_3_4()); }
	(rule__InfixExpression__Group_1_3_4__0)?
	{ after(grammarAccess.getInfixExpressionAccess().getGroup_1_3_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixExpression__Group_1_3__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InfixExpression__Group_1_3__5__Impl
	rule__InfixExpression__Group_1_3__6
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixExpression__Group_1_3__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInfixExpressionAccess().getExpAssignment_1_3_5()); }
	(rule__InfixExpression__ExpAssignment_1_3_5)
	{ after(grammarAccess.getInfixExpressionAccess().getExpAssignment_1_3_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixExpression__Group_1_3__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InfixExpression__Group_1_3__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixExpression__Group_1_3__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInfixExpressionAccess().getRightParenthesisKeyword_1_3_6()); }
	')'
	{ after(grammarAccess.getInfixExpressionAccess().getRightParenthesisKeyword_1_3_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InfixExpression__Group_1_3_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InfixExpression__Group_1_3_4__0__Impl
	rule__InfixExpression__Group_1_3_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixExpression__Group_1_3_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInfixExpressionAccess().getVarAssignment_1_3_4_0()); }
	(rule__InfixExpression__VarAssignment_1_3_4_0)
	{ after(grammarAccess.getInfixExpressionAccess().getVarAssignment_1_3_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixExpression__Group_1_3_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InfixExpression__Group_1_3_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixExpression__Group_1_3_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInfixExpressionAccess().getVerticalLineKeyword_1_3_4_1()); }
	'|'
	{ after(grammarAccess.getInfixExpressionAccess().getVerticalLineKeyword_1_3_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParanthesizedExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParanthesizedExpression__Group__0__Impl
	rule__ParanthesizedExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParanthesizedExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParanthesizedExpressionAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getParanthesizedExpressionAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParanthesizedExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParanthesizedExpression__Group__1__Impl
	rule__ParanthesizedExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParanthesizedExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParanthesizedExpressionAccess().getExpressionParserRuleCall_1()); }
	ruleExpression
	{ after(grammarAccess.getParanthesizedExpressionAccess().getExpressionParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParanthesizedExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParanthesizedExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParanthesizedExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParanthesizedExpressionAccess().getRightParenthesisKeyword_2()); }
	')'
	{ after(grammarAccess.getParanthesizedExpressionAccess().getRightParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GlobalVarExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalVarExpression__Group__0__Impl
	rule__GlobalVarExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVarExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalVarExpressionAccess().getGLOBALVARKeyword_0()); }
	'GLOBALVAR'
	{ after(grammarAccess.getGlobalVarExpressionAccess().getGLOBALVARKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVarExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalVarExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVarExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalVarExpressionAccess().getNameAssignment_1()); }
	(rule__GlobalVarExpression__NameAssignment_1)
	{ after(grammarAccess.getGlobalVarExpressionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OperationCall__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationCall__Group__0__Impl
	rule__OperationCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationCallAccess().getNameAssignment_0()); }
	(rule__OperationCall__NameAssignment_0)
	{ after(grammarAccess.getOperationCallAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationCall__Group__1__Impl
	rule__OperationCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationCallAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getOperationCallAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationCall__Group__2__Impl
	rule__OperationCall__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationCallAccess().getGroup_2()); }
	(rule__OperationCall__Group_2__0)?
	{ after(grammarAccess.getOperationCallAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationCall__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationCallAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getOperationCallAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OperationCall__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationCall__Group_2__0__Impl
	rule__OperationCall__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationCallAccess().getParamsAssignment_2_0()); }
	(rule__OperationCall__ParamsAssignment_2_0)
	{ after(grammarAccess.getOperationCallAccess().getParamsAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationCall__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationCallAccess().getGroup_2_1()); }
	(rule__OperationCall__Group_2_1__0)*
	{ after(grammarAccess.getOperationCallAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OperationCall__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationCall__Group_2_1__0__Impl
	rule__OperationCall__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationCallAccess().getCommaKeyword_2_1_0()); }
	','
	{ after(grammarAccess.getOperationCallAccess().getCommaKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationCall__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationCallAccess().getParamsAssignment_2_1_1()); }
	(rule__OperationCall__ParamsAssignment_2_1_1)
	{ after(grammarAccess.getOperationCallAccess().getParamsAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ListLiteral__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListLiteral__Group__0__Impl
	rule__ListLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListLiteralAccess().getListLiteralAction_0()); }
	()
	{ after(grammarAccess.getListLiteralAccess().getListLiteralAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListLiteral__Group__1__Impl
	rule__ListLiteral__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListLiteralAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getListLiteralAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListLiteral__Group__2__Impl
	rule__ListLiteral__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListLiteralAccess().getGroup_2()); }
	(rule__ListLiteral__Group_2__0)?
	{ after(grammarAccess.getListLiteralAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListLiteral__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListLiteralAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getListLiteralAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ListLiteral__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListLiteral__Group_2__0__Impl
	rule__ListLiteral__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListLiteralAccess().getElementsAssignment_2_0()); }
	(rule__ListLiteral__ElementsAssignment_2_0)
	{ after(grammarAccess.getListLiteralAccess().getElementsAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListLiteral__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListLiteralAccess().getGroup_2_1()); }
	(rule__ListLiteral__Group_2_1__0)*
	{ after(grammarAccess.getListLiteralAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ListLiteral__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListLiteral__Group_2_1__0__Impl
	rule__ListLiteral__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListLiteralAccess().getCommaKeyword_2_1_0()); }
	','
	{ after(grammarAccess.getListLiteralAccess().getCommaKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListLiteral__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListLiteralAccess().getElementsAssignment_2_1_1()); }
	(rule__ListLiteral__ElementsAssignment_2_1_1)
	{ after(grammarAccess.getListLiteralAccess().getElementsAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorCallExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstructorCallExpression__Group__0__Impl
	rule__ConstructorCallExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorCallExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstructorCallExpressionAccess().getNewKeyword_0()); }
	'new'
	{ after(grammarAccess.getConstructorCallExpressionAccess().getNewKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorCallExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstructorCallExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorCallExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstructorCallExpressionAccess().getTypeAssignment_1()); }
	(rule__ConstructorCallExpression__TypeAssignment_1)
	{ after(grammarAccess.getConstructorCallExpressionAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeSelectExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSelectExpression__Group__0__Impl
	rule__TypeSelectExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSelectExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSelectExpressionAccess().getNameAssignment_0()); }
	(rule__TypeSelectExpression__NameAssignment_0)
	{ after(grammarAccess.getTypeSelectExpressionAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSelectExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSelectExpression__Group__1__Impl
	rule__TypeSelectExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSelectExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSelectExpressionAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getTypeSelectExpressionAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSelectExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSelectExpression__Group__2__Impl
	rule__TypeSelectExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSelectExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSelectExpressionAccess().getTypeAssignment_2()); }
	(rule__TypeSelectExpression__TypeAssignment_2)
	{ after(grammarAccess.getTypeSelectExpressionAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSelectExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSelectExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSelectExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSelectExpressionAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getTypeSelectExpressionAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CollectionExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionExpression__Group__0__Impl
	rule__CollectionExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionExpressionAccess().getNameAssignment_0()); }
	(rule__CollectionExpression__NameAssignment_0)
	{ after(grammarAccess.getCollectionExpressionAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionExpression__Group__1__Impl
	rule__CollectionExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionExpressionAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getCollectionExpressionAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionExpression__Group__2__Impl
	rule__CollectionExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionExpressionAccess().getGroup_2()); }
	(rule__CollectionExpression__Group_2__0)?
	{ after(grammarAccess.getCollectionExpressionAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionExpression__Group__3__Impl
	rule__CollectionExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionExpressionAccess().getExpAssignment_3()); }
	(rule__CollectionExpression__ExpAssignment_3)
	{ after(grammarAccess.getCollectionExpressionAccess().getExpAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionExpression__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionExpressionAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getCollectionExpressionAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CollectionExpression__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionExpression__Group_2__0__Impl
	rule__CollectionExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionExpression__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionExpressionAccess().getVarAssignment_2_0()); }
	(rule__CollectionExpression__VarAssignment_2_0)
	{ after(grammarAccess.getCollectionExpressionAccess().getVarAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionExpression__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionExpression__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionExpression__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionExpressionAccess().getVerticalLineKeyword_2_1()); }
	'|'
	{ after(grammarAccess.getCollectionExpressionAccess().getVerticalLineKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CollectionType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionType__Group__0__Impl
	rule__CollectionType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionTypeAccess().getClAssignment_0()); }
	(rule__CollectionType__ClAssignment_0)
	{ after(grammarAccess.getCollectionTypeAccess().getClAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionType__Group__1__Impl
	rule__CollectionType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionTypeAccess().getLeftSquareBracketKeyword_1()); }
	'['
	{ after(grammarAccess.getCollectionTypeAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionType__Group__2__Impl
	rule__CollectionType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionTypeAccess().getId1Assignment_2()); }
	(rule__CollectionType__Id1Assignment_2)
	{ after(grammarAccess.getCollectionTypeAccess().getId1Assignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CollectionType__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCollectionTypeAccess().getRightSquareBracketKeyword_3()); }
	']'
	{ after(grammarAccess.getCollectionTypeAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleType__Group__0__Impl
	rule__SimpleType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleTypeAccess().getIdAssignment_0()); }
	(rule__SimpleType__IdAssignment_0)
	{ after(grammarAccess.getSimpleTypeAccess().getIdAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleTypeAccess().getGroup_1()); }
	(rule__SimpleType__Group_1__0)*
	{ after(grammarAccess.getSimpleTypeAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleType__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleType__Group_1__0__Impl
	rule__SimpleType__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleType__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleTypeAccess().getColonColonKeyword_1_0()); }
	'::'
	{ after(grammarAccess.getSimpleTypeAccess().getColonColonKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleType__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleType__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleType__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleTypeAccess().getIdAssignment_1_1()); }
	(rule__SimpleType__IdAssignment_1_1)
	{ after(grammarAccess.getSimpleTypeAccess().getIdAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ScopeModel__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScopeModelAccess().getNameDottedIDParserRuleCall_1_0()); }
		ruleDottedID
		{ after(grammarAccess.getScopeModelAccess().getNameDottedIDParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeModel__IncludedScopesAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScopeModelAccess().getIncludedScopesScopeModelCrossReference_2_1_0()); }
		(
			{ before(grammarAccess.getScopeModelAccess().getIncludedScopesScopeModelDottedIDParserRuleCall_2_1_0_1()); }
			ruleDottedID
			{ after(grammarAccess.getScopeModelAccess().getIncludedScopesScopeModelDottedIDParserRuleCall_2_1_0_1()); }
		)
		{ after(grammarAccess.getScopeModelAccess().getIncludedScopesScopeModelCrossReference_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeModel__ImportsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScopeModelAccess().getImportsImportParserRuleCall_3_0()); }
		ruleImport
		{ after(grammarAccess.getScopeModelAccess().getImportsImportParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeModel__ExtensionsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScopeModelAccess().getExtensionsExtensionParserRuleCall_4_0()); }
		ruleExtension
		{ after(grammarAccess.getScopeModelAccess().getExtensionsExtensionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeModel__InjectionsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScopeModelAccess().getInjectionsInjectionParserRuleCall_5_0()); }
		ruleInjection
		{ after(grammarAccess.getScopeModelAccess().getInjectionsInjectionParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeModel__NamingAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScopeModelAccess().getNamingNamingSectionParserRuleCall_6_0()); }
		ruleNamingSection
		{ after(grammarAccess.getScopeModelAccess().getNamingNamingSectionParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeModel__ScopesAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScopeModelAccess().getScopesScopeDefinitionParserRuleCall_7_0()); }
		ruleScopeDefinition
		{ after(grammarAccess.getScopeModelAccess().getScopesScopeDefinitionParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__PackageAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportAccess().getPackageEPackageCrossReference_1_0()); }
		(
			{ before(grammarAccess.getImportAccess().getPackageEPackageSTRINGTerminalRuleCall_1_0_1()); }
			RULE_STRING
			{ after(grammarAccess.getImportAccess().getPackageEPackageSTRINGTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getImportAccess().getPackageEPackageCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__NameAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportAccess().getNameIdentifierParserRuleCall_2_1_0()); }
		ruleIdentifier
		{ after(grammarAccess.getImportAccess().getNameIdentifierParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Extension__ExtensionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExtensionAccess().getExtensionQualifiedIDParserRuleCall_1_0()); }
		ruleQualifiedID
		{ after(grammarAccess.getExtensionAccess().getExtensionQualifiedIDParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Injection__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInjectionAccess().getTypeDottedIDParserRuleCall_1_0()); }
		ruleDottedID
		{ after(grammarAccess.getInjectionAccess().getTypeDottedIDParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Injection__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInjectionAccess().getNameIdentifierParserRuleCall_3_0()); }
		ruleIdentifier
		{ after(grammarAccess.getInjectionAccess().getNameIdentifierParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamingSection__CasingAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNamingSectionAccess().getCasingCasingEnumRuleCall_1_1_0()); }
		ruleCasing
		{ after(grammarAccess.getNamingSectionAccess().getCasingCasingEnumRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamingSection__NamingsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNamingSectionAccess().getNamingsNamingDefinitionParserRuleCall_4_0()); }
		ruleNamingDefinition
		{ after(grammarAccess.getNamingSectionAccess().getNamingsNamingDefinitionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamingDefinition__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNamingDefinitionAccess().getTypeEClassCrossReference_0_0()); }
		(
			{ before(grammarAccess.getNamingDefinitionAccess().getTypeEClassQualifiedIDParserRuleCall_0_0_1()); }
			ruleQualifiedID
			{ after(grammarAccess.getNamingDefinitionAccess().getTypeEClassQualifiedIDParserRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getNamingDefinitionAccess().getTypeEClassCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamingDefinition__NamingAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNamingDefinitionAccess().getNamingNamingParserRuleCall_2_0()); }
		ruleNaming
		{ after(grammarAccess.getNamingDefinitionAccess().getNamingNamingParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeDefinition__NameAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScopeDefinitionAccess().getNameIdentifierParserRuleCall_1_1_0()); }
		ruleIdentifier
		{ after(grammarAccess.getScopeDefinitionAccess().getNameIdentifierParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeDefinition__TargetTypeAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScopeDefinitionAccess().getTargetTypeEClassCrossReference_2_0_0()); }
		(
			{ before(grammarAccess.getScopeDefinitionAccess().getTargetTypeEClassQualifiedIDParserRuleCall_2_0_0_1()); }
			ruleQualifiedID
			{ after(grammarAccess.getScopeDefinitionAccess().getTargetTypeEClassQualifiedIDParserRuleCall_2_0_0_1()); }
		)
		{ after(grammarAccess.getScopeDefinitionAccess().getTargetTypeEClassCrossReference_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeDefinition__ContextTypeAssignment_2_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScopeDefinitionAccess().getContextTypeEClassCrossReference_2_1_0_0()); }
		(
			{ before(grammarAccess.getScopeDefinitionAccess().getContextTypeEClassQualifiedIDParserRuleCall_2_1_0_0_1()); }
			ruleQualifiedID
			{ after(grammarAccess.getScopeDefinitionAccess().getContextTypeEClassQualifiedIDParserRuleCall_2_1_0_0_1()); }
		)
		{ after(grammarAccess.getScopeDefinitionAccess().getContextTypeEClassCrossReference_2_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeDefinition__ReferenceAssignment_2_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScopeDefinitionAccess().getReferenceEReferenceCrossReference_2_1_2_0()); }
		(
			{ before(grammarAccess.getScopeDefinitionAccess().getReferenceEReferenceIdentifierParserRuleCall_2_1_2_0_1()); }
			ruleIdentifier
			{ after(grammarAccess.getScopeDefinitionAccess().getReferenceEReferenceIdentifierParserRuleCall_2_1_2_0_1()); }
		)
		{ after(grammarAccess.getScopeDefinitionAccess().getReferenceEReferenceCrossReference_2_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeDefinition__RulesAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScopeDefinitionAccess().getRulesScopeRuleParserRuleCall_4_0()); }
		ruleScopeRule
		{ after(grammarAccess.getScopeDefinitionAccess().getRulesScopeRuleParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeRule__ContextAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScopeRuleAccess().getContextScopeContextParserRuleCall_1_0()); }
		ruleScopeContext
		{ after(grammarAccess.getScopeRuleAccess().getContextScopeContextParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeRule__ExprsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScopeRuleAccess().getExprsScopeExpressionParserRuleCall_3_0()); }
		ruleScopeExpression
		{ after(grammarAccess.getScopeRuleAccess().getExprsScopeExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeRule__ExprsAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScopeRuleAccess().getExprsScopeExpressionParserRuleCall_4_1_0()); }
		ruleScopeExpression
		{ after(grammarAccess.getScopeRuleAccess().getExprsScopeExpressionParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeContext__GlobalAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScopeContextAccess().getGlobalAsteriskKeyword_0_0_0()); }
		(
			{ before(grammarAccess.getScopeContextAccess().getGlobalAsteriskKeyword_0_0_0()); }
			'*'
			{ after(grammarAccess.getScopeContextAccess().getGlobalAsteriskKeyword_0_0_0()); }
		)
		{ after(grammarAccess.getScopeContextAccess().getGlobalAsteriskKeyword_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeContext__ContextTypeAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScopeContextAccess().getContextTypeEClassCrossReference_0_1_0()); }
		(
			{ before(grammarAccess.getScopeContextAccess().getContextTypeEClassQualifiedIDParserRuleCall_0_1_0_1()); }
			ruleQualifiedID
			{ after(grammarAccess.getScopeContextAccess().getContextTypeEClassQualifiedIDParserRuleCall_0_1_0_1()); }
		)
		{ after(grammarAccess.getScopeContextAccess().getContextTypeEClassCrossReference_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeContext__GuardAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScopeContextAccess().getGuardExpressionParserRuleCall_1_1_0()); }
		ruleExpression
		{ after(grammarAccess.getScopeContextAccess().getGuardExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FactoryExpression__ExprAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFactoryExpressionAccess().getExprExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getFactoryExpressionAccess().getExprExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeDelegation__DelegateAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScopeDelegationAccess().getDelegateExpressionParserRuleCall_2_0_0()); }
		ruleExpression
		{ after(grammarAccess.getScopeDelegationAccess().getDelegateExpressionParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeDelegation__ExternalAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScopeDelegationAccess().getExternalGlobalScopeExpressionParserRuleCall_2_1_0()); }
		ruleGlobalScopeExpression
		{ after(grammarAccess.getScopeDelegationAccess().getExternalGlobalScopeExpressionParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeDelegation__ScopeAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScopeDelegationAccess().getScopeScopeDefinitionCrossReference_3_1_0()); }
		(
			{ before(grammarAccess.getScopeDelegationAccess().getScopeScopeDefinitionIdentifierParserRuleCall_3_1_0_1()); }
			ruleIdentifier
			{ after(grammarAccess.getScopeDelegationAccess().getScopeScopeDefinitionIdentifierParserRuleCall_3_1_0_1()); }
		)
		{ after(grammarAccess.getScopeDelegationAccess().getScopeScopeDefinitionCrossReference_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedScopeExpression__CaseDefAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNamedScopeExpressionAccess().getCaseDefCaseKeyword_1_0_0()); }
		(
			{ before(grammarAccess.getNamedScopeExpressionAccess().getCaseDefCaseKeyword_1_0_0()); }
			'case'
			{ after(grammarAccess.getNamedScopeExpressionAccess().getCaseDefCaseKeyword_1_0_0()); }
		)
		{ after(grammarAccess.getNamedScopeExpressionAccess().getCaseDefCaseKeyword_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedScopeExpression__CasingAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNamedScopeExpressionAccess().getCasingCasingEnumRuleCall_1_1_0()); }
		ruleCasing
		{ after(grammarAccess.getNamedScopeExpressionAccess().getCasingCasingEnumRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedScopeExpression__NamingAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNamedScopeExpressionAccess().getNamingNamingParserRuleCall_2_1_0()); }
		ruleNaming
		{ after(grammarAccess.getNamedScopeExpressionAccess().getNamingNamingParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalScopeExpression__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGlobalScopeExpressionAccess().getTypeEClassCrossReference_2_0()); }
		(
			{ before(grammarAccess.getGlobalScopeExpressionAccess().getTypeEClassQualifiedIDParserRuleCall_2_0_1()); }
			ruleQualifiedID
			{ after(grammarAccess.getGlobalScopeExpressionAccess().getTypeEClassQualifiedIDParserRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getGlobalScopeExpressionAccess().getTypeEClassCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalScopeExpression__NameAssignment_3_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGlobalScopeExpressionAccess().getNameExpressionParserRuleCall_3_0_3_0()); }
		ruleExpression
		{ after(grammarAccess.getGlobalScopeExpressionAccess().getNameExpressionParserRuleCall_3_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalScopeExpression__RecursivePrefixAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGlobalScopeExpressionAccess().getRecursivePrefixRecursiveKeyword_3_1_1_0()); }
		(
			{ before(grammarAccess.getGlobalScopeExpressionAccess().getRecursivePrefixRecursiveKeyword_3_1_1_0()); }
			'recursive'
			{ after(grammarAccess.getGlobalScopeExpressionAccess().getRecursivePrefixRecursiveKeyword_3_1_1_0()); }
		)
		{ after(grammarAccess.getGlobalScopeExpressionAccess().getRecursivePrefixRecursiveKeyword_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalScopeExpression__PrefixAssignment_3_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGlobalScopeExpressionAccess().getPrefixExpressionParserRuleCall_3_1_4_0()); }
		ruleExpression
		{ after(grammarAccess.getGlobalScopeExpressionAccess().getPrefixExpressionParserRuleCall_3_1_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalScopeExpression__DataAssignment_4_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGlobalScopeExpressionAccess().getDataDataExpressionParserRuleCall_4_4_0()); }
		ruleDataExpression
		{ after(grammarAccess.getGlobalScopeExpressionAccess().getDataDataExpressionParserRuleCall_4_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalScopeExpression__DataAssignment_4_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGlobalScopeExpressionAccess().getDataDataExpressionParserRuleCall_4_5_1_0()); }
		ruleDataExpression
		{ after(grammarAccess.getGlobalScopeExpressionAccess().getDataDataExpressionParserRuleCall_4_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalScopeExpression__DomainsAssignment_5_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGlobalScopeExpressionAccess().getDomainsAsteriskKeyword_5_3_0_0()); }
		(
			{ before(grammarAccess.getGlobalScopeExpressionAccess().getDomainsAsteriskKeyword_5_3_0_0()); }
			'*'
			{ after(grammarAccess.getGlobalScopeExpressionAccess().getDomainsAsteriskKeyword_5_3_0_0()); }
		)
		{ after(grammarAccess.getGlobalScopeExpressionAccess().getDomainsAsteriskKeyword_5_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalScopeExpression__DomainsAssignment_5_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGlobalScopeExpressionAccess().getDomainsIdentifierParserRuleCall_5_3_1_0()); }
		ruleIdentifier
		{ after(grammarAccess.getGlobalScopeExpressionAccess().getDomainsIdentifierParserRuleCall_5_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalScopeExpression__DomainsAssignment_5_3_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGlobalScopeExpressionAccess().getDomainsIdentifierParserRuleCall_5_3_2_1_0()); }
		ruleIdentifier
		{ after(grammarAccess.getGlobalScopeExpressionAccess().getDomainsIdentifierParserRuleCall_5_3_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalScopeExpression__DomainsAssignment_5_3_2_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGlobalScopeExpressionAccess().getDomainsIdentifierParserRuleCall_5_3_2_2_1_0()); }
		ruleIdentifier
		{ after(grammarAccess.getGlobalScopeExpressionAccess().getDomainsIdentifierParserRuleCall_5_3_2_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchDataExpression__KeyAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMatchDataExpressionAccess().getKeyIdentifierParserRuleCall_0_0()); }
		ruleIdentifier
		{ after(grammarAccess.getMatchDataExpressionAccess().getKeyIdentifierParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchDataExpression__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMatchDataExpressionAccess().getValueExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getMatchDataExpressionAccess().getValueExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LambdaDataExpression__DescAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLambdaDataExpressionAccess().getDescIdentifierParserRuleCall_1_0()); }
		ruleIdentifier
		{ after(grammarAccess.getLambdaDataExpressionAccess().getDescIdentifierParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LambdaDataExpression__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLambdaDataExpressionAccess().getValueExpressionParserRuleCall_3_0()); }
		ruleExpression
		{ after(grammarAccess.getLambdaDataExpressionAccess().getValueExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleScopeExpression__ExprAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleScopeExpressionAccess().getExprExpressionParserRuleCall_0()); }
		ruleExpression
		{ after(grammarAccess.getSimpleScopeExpressionAccess().getExprExpressionParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Naming__NamesAssignment_0_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNamingAccess().getNamesNamingExpressionParserRuleCall_0_0_1_0()); }
		ruleNamingExpression
		{ after(grammarAccess.getNamingAccess().getNamesNamingExpressionParserRuleCall_0_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Naming__NamesAssignment_0_0_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNamingAccess().getNamesNamingExpressionParserRuleCall_0_0_2_1_0()); }
		ruleNamingExpression
		{ after(grammarAccess.getNamingAccess().getNamesNamingExpressionParserRuleCall_0_0_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Naming__NamesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNamingAccess().getNamesNamingExpressionParserRuleCall_1_0()); }
		ruleNamingExpression
		{ after(grammarAccess.getNamingAccess().getNamesNamingExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamingExpression__ExportAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNamingExpressionAccess().getExportExportKeyword_0_0()); }
		(
			{ before(grammarAccess.getNamingExpressionAccess().getExportExportKeyword_0_0()); }
			'export'
			{ after(grammarAccess.getNamingExpressionAccess().getExportExportKeyword_0_0()); }
		)
		{ after(grammarAccess.getNamingExpressionAccess().getExportExportKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamingExpression__FactoryAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNamingExpressionAccess().getFactoryFactoryKeyword_1_0_0()); }
		(
			{ before(grammarAccess.getNamingExpressionAccess().getFactoryFactoryKeyword_1_0_0()); }
			'factory'
			{ after(grammarAccess.getNamingExpressionAccess().getFactoryFactoryKeyword_1_0_0()); }
		)
		{ after(grammarAccess.getNamingExpressionAccess().getFactoryFactoryKeyword_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamingExpression__ExpressionAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNamingExpressionAccess().getExpressionExpressionParserRuleCall_1_1_0()); }
		ruleExpression
		{ after(grammarAccess.getNamingExpressionAccess().getExpressionExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__IdentifierAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLetExpressionAccess().getIdentifierIdentifierParserRuleCall_1_0()); }
		ruleIdentifier
		{ after(grammarAccess.getLetExpressionAccess().getIdentifierIdentifierParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__VarExprAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLetExpressionAccess().getVarExprExpressionParserRuleCall_3_0()); }
		ruleExpression
		{ after(grammarAccess.getLetExpressionAccess().getVarExprExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__TargetAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLetExpressionAccess().getTargetExpressionParserRuleCall_5_0()); }
		ruleExpression
		{ after(grammarAccess.getLetExpressionAccess().getTargetExpressionParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CastedExpression__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCastedExpressionAccess().getTypeTypeParserRuleCall_1_0()); }
		ruleType
		{ after(grammarAccess.getCastedExpressionAccess().getTypeTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CastedExpression__TargetAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCastedExpressionAccess().getTargetExpressionParserRuleCall_3_0()); }
		ruleExpression
		{ after(grammarAccess.getCastedExpressionAccess().getTargetExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChainExpression__NextAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChainExpressionAccess().getNextChainedExpressionParserRuleCall_1_2_0()); }
		ruleChainedExpression
		{ after(grammarAccess.getChainExpressionAccess().getNextChainedExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpressionTri__ThenPartAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfExpressionTriAccess().getThenPartChainedExpressionParserRuleCall_1_2_0()); }
		ruleChainedExpression
		{ after(grammarAccess.getIfExpressionTriAccess().getThenPartChainedExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpressionTri__ElsePartAssignment_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfExpressionTriAccess().getElsePartChainedExpressionParserRuleCall_1_4_0()); }
		ruleChainedExpression
		{ after(grammarAccess.getIfExpressionTriAccess().getElsePartChainedExpressionParserRuleCall_1_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpressionKw__ConditionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfExpressionKwAccess().getConditionChainedExpressionParserRuleCall_1_0()); }
		ruleChainedExpression
		{ after(grammarAccess.getIfExpressionKwAccess().getConditionChainedExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpressionKw__ThenPartAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfExpressionKwAccess().getThenPartChainedExpressionParserRuleCall_3_0()); }
		ruleChainedExpression
		{ after(grammarAccess.getIfExpressionKwAccess().getThenPartChainedExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpressionKw__ElsePartAssignment_4_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfExpressionKwAccess().getElsePartChainedExpressionParserRuleCall_4_0_1_0()); }
		ruleChainedExpression
		{ after(grammarAccess.getIfExpressionKwAccess().getElsePartChainedExpressionParserRuleCall_4_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__SwitchExprAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSwitchExpressionAccess().getSwitchExprOrExpressionParserRuleCall_1_1_0()); }
		ruleOrExpression
		{ after(grammarAccess.getSwitchExpressionAccess().getSwitchExprOrExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__CaseAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSwitchExpressionAccess().getCaseCaseParserRuleCall_3_0()); }
		ruleCase
		{ after(grammarAccess.getSwitchExpressionAccess().getCaseCaseParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__DefaultExprAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSwitchExpressionAccess().getDefaultExprOrExpressionParserRuleCall_6_0()); }
		ruleOrExpression
		{ after(grammarAccess.getSwitchExpressionAccess().getDefaultExprOrExpressionParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Case__ConditionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCaseAccess().getConditionOrExpressionParserRuleCall_1_0()); }
		ruleOrExpression
		{ after(grammarAccess.getCaseAccess().getConditionOrExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Case__ThenParAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCaseAccess().getThenParOrExpressionParserRuleCall_3_0()); }
		ruleOrExpression
		{ after(grammarAccess.getCaseAccess().getThenParOrExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrExpressionAccess().getOperatorVerticalLineVerticalLineKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getOrExpressionAccess().getOperatorVerticalLineVerticalLineKeyword_1_1_0()); }
			'||'
			{ after(grammarAccess.getOrExpressionAccess().getOperatorVerticalLineVerticalLineKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getOrExpressionAccess().getOperatorVerticalLineVerticalLineKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrExpressionAccess().getRightAndExpressionParserRuleCall_1_2_0()); }
		ruleAndExpression
		{ after(grammarAccess.getOrExpressionAccess().getRightAndExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndExpressionAccess().getOperatorAmpersandAmpersandKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getAndExpressionAccess().getOperatorAmpersandAmpersandKeyword_1_1_0()); }
			'&&'
			{ after(grammarAccess.getAndExpressionAccess().getOperatorAmpersandAmpersandKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getAndExpressionAccess().getOperatorAmpersandAmpersandKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndExpressionAccess().getRightImpliesExpressionParserRuleCall_1_2_0()); }
		ruleImpliesExpression
		{ after(grammarAccess.getAndExpressionAccess().getRightImpliesExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesExpression__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImpliesExpressionAccess().getOperatorImpliesKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getImpliesExpressionAccess().getOperatorImpliesKeyword_1_1_0()); }
			'implies'
			{ after(grammarAccess.getImpliesExpressionAccess().getOperatorImpliesKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getImpliesExpressionAccess().getOperatorImpliesKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesExpression__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImpliesExpressionAccess().getRightRelationalExpressionParserRuleCall_1_2_0()); }
		ruleRelationalExpression
		{ after(grammarAccess.getImpliesExpressionAccess().getRightRelationalExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationalExpressionAccess().getOperatorAlternatives_1_1_0()); }
		(rule__RelationalExpression__OperatorAlternatives_1_1_0)
		{ after(grammarAccess.getRelationalExpressionAccess().getOperatorAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationalExpressionAccess().getRightAdditiveExpressionParserRuleCall_1_2_0()); }
		ruleAdditiveExpression
		{ after(grammarAccess.getRelationalExpressionAccess().getRightAdditiveExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__NameAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditiveExpressionAccess().getNameAlternatives_1_1_0()); }
		(rule__AdditiveExpression__NameAlternatives_1_1_0)
		{ after(grammarAccess.getAdditiveExpressionAccess().getNameAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__ParamsAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditiveExpressionAccess().getParamsMultiplicativeExpressionParserRuleCall_1_2_0()); }
		ruleMultiplicativeExpression
		{ after(grammarAccess.getAdditiveExpressionAccess().getParamsMultiplicativeExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__NameAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicativeExpressionAccess().getNameAlternatives_1_1_0()); }
		(rule__MultiplicativeExpression__NameAlternatives_1_1_0)
		{ after(grammarAccess.getMultiplicativeExpressionAccess().getNameAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__ParamsAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicativeExpressionAccess().getParamsUnaryOrInfixExpressionParserRuleCall_1_2_0()); }
		ruleUnaryOrInfixExpression
		{ after(grammarAccess.getMultiplicativeExpressionAccess().getParamsUnaryOrInfixExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getNameAlternatives_0_0()); }
		(rule__UnaryExpression__NameAlternatives_0_0)
		{ after(grammarAccess.getUnaryExpressionAccess().getNameAlternatives_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__ParamsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getParamsInfixExpressionParserRuleCall_1_0()); }
		ruleInfixExpression
		{ after(grammarAccess.getUnaryExpressionAccess().getParamsInfixExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixExpression__NameAssignment_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInfixExpressionAccess().getNameIdentifierParserRuleCall_1_0_2_0()); }
		ruleIdentifier
		{ after(grammarAccess.getInfixExpressionAccess().getNameIdentifierParserRuleCall_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixExpression__ParamsAssignment_1_0_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInfixExpressionAccess().getParamsExpressionParserRuleCall_1_0_4_0_0()); }
		ruleExpression
		{ after(grammarAccess.getInfixExpressionAccess().getParamsExpressionParserRuleCall_1_0_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixExpression__ParamsAssignment_1_0_4_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInfixExpressionAccess().getParamsExpressionParserRuleCall_1_0_4_1_1_0()); }
		ruleExpression
		{ after(grammarAccess.getInfixExpressionAccess().getParamsExpressionParserRuleCall_1_0_4_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixExpression__TypeAssignment_1_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInfixExpressionAccess().getTypeTypeParserRuleCall_1_1_2_0()); }
		ruleType
		{ after(grammarAccess.getInfixExpressionAccess().getTypeTypeParserRuleCall_1_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixExpression__NameAssignment_1_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInfixExpressionAccess().getNameTypeSelectKeyword_1_2_2_0()); }
		(
			{ before(grammarAccess.getInfixExpressionAccess().getNameTypeSelectKeyword_1_2_2_0()); }
			'typeSelect'
			{ after(grammarAccess.getInfixExpressionAccess().getNameTypeSelectKeyword_1_2_2_0()); }
		)
		{ after(grammarAccess.getInfixExpressionAccess().getNameTypeSelectKeyword_1_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixExpression__TypeAssignment_1_2_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInfixExpressionAccess().getTypeTypeParserRuleCall_1_2_4_0()); }
		ruleType
		{ after(grammarAccess.getInfixExpressionAccess().getTypeTypeParserRuleCall_1_2_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixExpression__NameAssignment_1_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInfixExpressionAccess().getNameAlternatives_1_3_2_0()); }
		(rule__InfixExpression__NameAlternatives_1_3_2_0)
		{ after(grammarAccess.getInfixExpressionAccess().getNameAlternatives_1_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixExpression__VarAssignment_1_3_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInfixExpressionAccess().getVarIdentifierParserRuleCall_1_3_4_0_0()); }
		ruleIdentifier
		{ after(grammarAccess.getInfixExpressionAccess().getVarIdentifierParserRuleCall_1_3_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixExpression__ExpAssignment_1_3_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInfixExpressionAccess().getExpExpressionParserRuleCall_1_3_5_0()); }
		ruleExpression
		{ after(grammarAccess.getInfixExpressionAccess().getExpExpressionParserRuleCall_1_3_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__ValAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanLiteralAccess().getValAlternatives_0()); }
		(rule__BooleanLiteral__ValAlternatives_0)
		{ after(grammarAccess.getBooleanLiteralAccess().getValAlternatives_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerLiteral__ValAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntegerLiteralAccess().getValINTTerminalRuleCall_0()); }
		RULE_INT
		{ after(grammarAccess.getIntegerLiteralAccess().getValINTTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NullLiteral__ValAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNullLiteralAccess().getValNullKeyword_0()); }
		(
			{ before(grammarAccess.getNullLiteralAccess().getValNullKeyword_0()); }
			'null'
			{ after(grammarAccess.getNullLiteralAccess().getValNullKeyword_0()); }
		)
		{ after(grammarAccess.getNullLiteralAccess().getValNullKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RealLiteral__ValAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRealLiteralAccess().getValREALTerminalRuleCall_0()); }
		RULE_REAL
		{ after(grammarAccess.getRealLiteralAccess().getValREALTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__ValAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringLiteralAccess().getValSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getStringLiteralAccess().getValSTRINGTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVarExpression__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGlobalVarExpressionAccess().getNameIdentifierParserRuleCall_1_0()); }
		ruleIdentifier
		{ after(grammarAccess.getGlobalVarExpressionAccess().getNameIdentifierParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureCall__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureCallAccess().getTypeTypeParserRuleCall_1_0()); }
		ruleType
		{ after(grammarAccess.getFeatureCallAccess().getTypeTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationCallAccess().getNameIdentifierParserRuleCall_0_0()); }
		ruleIdentifier
		{ after(grammarAccess.getOperationCallAccess().getNameIdentifierParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__ParamsAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationCallAccess().getParamsExpressionParserRuleCall_2_0_0()); }
		ruleExpression
		{ after(grammarAccess.getOperationCallAccess().getParamsExpressionParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__ParamsAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationCallAccess().getParamsExpressionParserRuleCall_2_1_1_0()); }
		ruleExpression
		{ after(grammarAccess.getOperationCallAccess().getParamsExpressionParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__ElementsAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListLiteralAccess().getElementsExpressionParserRuleCall_2_0_0()); }
		ruleExpression
		{ after(grammarAccess.getListLiteralAccess().getElementsExpressionParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__ElementsAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListLiteralAccess().getElementsExpressionParserRuleCall_2_1_1_0()); }
		ruleExpression
		{ after(grammarAccess.getListLiteralAccess().getElementsExpressionParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorCallExpression__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstructorCallExpressionAccess().getTypeSimpleTypeParserRuleCall_1_0()); }
		ruleSimpleType
		{ after(grammarAccess.getConstructorCallExpressionAccess().getTypeSimpleTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSelectExpression__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeSelectExpressionAccess().getNameTypeSelectKeyword_0_0()); }
		(
			{ before(grammarAccess.getTypeSelectExpressionAccess().getNameTypeSelectKeyword_0_0()); }
			'typeSelect'
			{ after(grammarAccess.getTypeSelectExpressionAccess().getNameTypeSelectKeyword_0_0()); }
		)
		{ after(grammarAccess.getTypeSelectExpressionAccess().getNameTypeSelectKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSelectExpression__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeSelectExpressionAccess().getTypeTypeParserRuleCall_2_0()); }
		ruleType
		{ after(grammarAccess.getTypeSelectExpressionAccess().getTypeTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionExpression__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCollectionExpressionAccess().getNameAlternatives_0_0()); }
		(rule__CollectionExpression__NameAlternatives_0_0)
		{ after(grammarAccess.getCollectionExpressionAccess().getNameAlternatives_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionExpression__VarAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCollectionExpressionAccess().getVarIdentifierParserRuleCall_2_0_0()); }
		ruleIdentifier
		{ after(grammarAccess.getCollectionExpressionAccess().getVarIdentifierParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionExpression__ExpAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCollectionExpressionAccess().getExpExpressionParserRuleCall_3_0()); }
		ruleExpression
		{ after(grammarAccess.getCollectionExpressionAccess().getExpExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionType__ClAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCollectionTypeAccess().getClAlternatives_0_0()); }
		(rule__CollectionType__ClAlternatives_0_0)
		{ after(grammarAccess.getCollectionTypeAccess().getClAlternatives_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionType__Id1Assignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCollectionTypeAccess().getId1SimpleTypeParserRuleCall_2_0()); }
		ruleSimpleType
		{ after(grammarAccess.getCollectionTypeAccess().getId1SimpleTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleType__IdAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleTypeAccess().getIdIdentifierParserRuleCall_0_0()); }
		ruleIdentifier
		{ after(grammarAccess.getSimpleTypeAccess().getIdIdentifierParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleType__IdAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleTypeAccess().getIdIdentifierParserRuleCall_1_1_0()); }
		ruleIdentifier
		{ after(grammarAccess.getSimpleTypeAccess().getIdIdentifierParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_REAL : ('0'..'9')* '.' ('0'..'9')*;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
