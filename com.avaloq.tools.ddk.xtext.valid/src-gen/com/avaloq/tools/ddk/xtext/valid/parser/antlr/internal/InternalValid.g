/*
 * generated by Xtext
 */
grammar InternalValid;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package com.avaloq.tools.ddk.xtext.valid.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package com.avaloq.tools.ddk.xtext.valid.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import com.avaloq.tools.ddk.xtext.valid.services.ValidGrammarAccess;

}

@parser::members {

 	private ValidGrammarAccess grammarAccess;
 	
    public InternalValidParser(TokenStream input, ValidGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "ValidModel";	
   	}
   	
   	@Override
   	protected ValidGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleValidModel
entryRuleValidModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getValidModelRule()); }
	 iv_ruleValidModel=ruleValidModel 
	 { $current=$iv_ruleValidModel.current; } 
	 EOF 
;

// Rule ValidModel
ruleValidModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getValidModelAccess().getImportsImportParserRuleCall_0_0()); 
	    }
		lv_imports_0_0=ruleImport		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getValidModelRule());
	        }
       		add(
       			$current, 
       			"imports",
        		lv_imports_0_0, 
        		"com.avaloq.tools.ddk.xtext.valid.Valid.Import");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getValidModelAccess().getCategoriesCategoryParserRuleCall_1_0()); 
	    }
		lv_categories_1_0=ruleCategory		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getValidModelRule());
	        }
       		add(
       			$current, 
       			"categories",
        		lv_categories_1_0, 
        		"com.avaloq.tools.ddk.xtext.valid.Valid.Category");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleImport
entryRuleImport returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getImportRule()); }
	 iv_ruleImport=ruleImport 
	 { $current=$iv_ruleImport.current; } 
	 EOF 
;

// Rule Import
ruleImport returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='import' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getImportAccess().getImportKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getImportRule());
	        }
        }
	otherlv_1=RULE_STRING
	{
		newLeafNode(otherlv_1, grammarAccess.getImportAccess().getPackageEPackageCrossReference_1_0()); 
	}

)
))
;





// Entry rule entryRuleCategory
entryRuleCategory returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCategoryRule()); }
	 iv_ruleCategory=ruleCategory 
	 { $current=$iv_ruleCategory.current; } 
	 EOF 
;

// Rule Category
ruleCategory returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='category' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCategoryAccess().getCategoryKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getCategoryAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCategoryRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)	otherlv_2='label' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCategoryAccess().getLabelKeyword_2());
    }
(
(
		lv_label_3_0=RULE_STRING
		{
			newLeafNode(lv_label_3_0, grammarAccess.getCategoryAccess().getLabelSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCategoryRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"label",
        		lv_label_3_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
)(	otherlv_4='description' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getCategoryAccess().getDescriptionKeyword_4_0());
    }
(
(
		lv_description_5_0=RULE_STRING
		{
			newLeafNode(lv_description_5_0, grammarAccess.getCategoryAccess().getDescriptionSTRINGTerminalRuleCall_4_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCategoryRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"description",
        		lv_description_5_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
))?	otherlv_6='{' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getCategoryAccess().getLeftCurlyBracketKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCategoryAccess().getRulesRuleParserRuleCall_6_0()); 
	    }
		lv_rules_7_0=ruleRule		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCategoryRule());
	        }
       		add(
       			$current, 
       			"rules",
        		lv_rules_7_0, 
        		"com.avaloq.tools.ddk.xtext.valid.Valid.Rule");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getCategoryAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleRule
entryRuleRule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRuleRule()); }
	 iv_ruleRule=ruleRule 
	 { $current=$iv_ruleRule.current; } 
	 EOF 
;

// Rule Rule
ruleRule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getRuleAccess().getNativeRuleParserRuleCall_0()); 
    }
    this_NativeRule_0=ruleNativeRule
    { 
        $current = $this_NativeRule_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRuleAccess().getPredefinedRuleParserRuleCall_1()); 
    }
    this_PredefinedRule_1=rulePredefinedRule
    { 
        $current = $this_PredefinedRule_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulePredefinedRule
entryRulePredefinedRule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPredefinedRuleRule()); }
	 iv_rulePredefinedRule=rulePredefinedRule 
	 { $current=$iv_rulePredefinedRule.current; } 
	 EOF 
;

// Rule PredefinedRule
rulePredefinedRule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getPredefinedRuleAccess().getSizeRuleParserRuleCall_0()); 
    }
    this_SizeRule_0=ruleSizeRule
    { 
        $current = $this_SizeRule_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPredefinedRuleAccess().getRangeRuleParserRuleCall_1()); 
    }
    this_RangeRule_1=ruleRangeRule
    { 
        $current = $this_RangeRule_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPredefinedRuleAccess().getUniqueRuleParserRuleCall_2()); 
    }
    this_UniqueRule_2=ruleUniqueRule
    { 
        $current = $this_UniqueRule_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleNativeRule
entryRuleNativeRule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNativeRuleRule()); }
	 iv_ruleNativeRule=ruleNativeRule 
	 { $current=$iv_ruleNativeRule.current; } 
	 EOF 
;

// Rule NativeRule
ruleNativeRule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getNativeRuleAccess().getUnorderedGroup_0());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getNativeRuleAccess().getUnorderedGroup_0(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getNativeRuleAccess().getUnorderedGroup_0(), 0);
	 				}
					({true}?=>(
(
		lv_optional_1_0=	'optional' 
    {
        newLeafNode(lv_optional_1_0, grammarAccess.getNativeRuleAccess().getOptionalOptionalKeyword_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNativeRuleRule());
	        }
       		setWithLastConsumed($current, "optional", true, "optional");
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNativeRuleAccess().getUnorderedGroup_0());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getNativeRuleAccess().getUnorderedGroup_0(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getNativeRuleAccess().getUnorderedGroup_0(), 1);
	 				}
					({true}?=>(
(
		{ 
	        newCompositeNode(grammarAccess.getNativeRuleAccess().getCheckKindCheckKindEnumRuleCall_0_1_0()); 
	    }
		lv_checkKind_2_0=ruleCheckKind		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNativeRuleRule());
	        }
       		set(
       			$current, 
       			"checkKind",
        		lv_checkKind_2_0, 
        		"com.avaloq.tools.ddk.xtext.valid.Valid.CheckKind");
	        afterParserOrEnumRuleCall();
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNativeRuleAccess().getUnorderedGroup_0());
	 				}
 				)
			)  

		)*	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getNativeRuleAccess().getUnorderedGroup_0());
	}

)(
(
		{ 
	        newCompositeNode(grammarAccess.getNativeRuleAccess().getSeveritySeverityKindEnumRuleCall_1_0()); 
	    }
		lv_severity_3_0=ruleSeverityKind		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNativeRuleRule());
	        }
       		set(
       			$current, 
       			"severity",
        		lv_severity_3_0, 
        		"com.avaloq.tools.ddk.xtext.valid.Valid.SeverityKind");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_name_4_0=RULE_ID
		{
			newLeafNode(lv_name_4_0, grammarAccess.getNativeRuleAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNativeRuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_4_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)	otherlv_5='label' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getNativeRuleAccess().getLabelKeyword_3());
    }
(
(
		lv_label_6_0=RULE_STRING
		{
			newLeafNode(lv_label_6_0, grammarAccess.getNativeRuleAccess().getLabelSTRINGTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNativeRuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"label",
        		lv_label_6_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
)(	otherlv_7='description' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getNativeRuleAccess().getDescriptionKeyword_5_0());
    }
(
(
		lv_description_8_0=RULE_STRING
		{
			newLeafNode(lv_description_8_0, grammarAccess.getNativeRuleAccess().getDescriptionSTRINGTerminalRuleCall_5_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNativeRuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"description",
        		lv_description_8_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
))?	otherlv_9='message' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getNativeRuleAccess().getMessageKeyword_6());
    }
(
(
		lv_message_10_0=RULE_STRING
		{
			newLeafNode(lv_message_10_0, grammarAccess.getNativeRuleAccess().getMessageSTRINGTerminalRuleCall_7_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNativeRuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"message",
        		lv_message_10_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
)	otherlv_11='context' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getNativeRuleAccess().getContextKeyword_8());
    }
	otherlv_12='{' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getNativeRuleAccess().getLeftCurlyBracketKeyword_9());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNativeRuleAccess().getContextsNativeContextParserRuleCall_10_0()); 
	    }
		lv_contexts_13_0=ruleNativeContext		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNativeRuleRule());
	        }
       		add(
       			$current, 
       			"contexts",
        		lv_contexts_13_0, 
        		"com.avaloq.tools.ddk.xtext.valid.Valid.NativeContext");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_14='}' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getNativeRuleAccess().getRightCurlyBracketKeyword_11());
    }
)
;





// Entry rule entryRuleSizeRule
entryRuleSizeRule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSizeRuleRule()); }
	 iv_ruleSizeRule=ruleSizeRule 
	 { $current=$iv_ruleSizeRule.current; } 
	 EOF 
;

// Rule SizeRule
ruleSizeRule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getSizeRuleAccess().getUnorderedGroup_0());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getSizeRuleAccess().getUnorderedGroup_0(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getSizeRuleAccess().getUnorderedGroup_0(), 0);
	 				}
					({true}?=>(
(
		lv_optional_1_0=	'optional' 
    {
        newLeafNode(lv_optional_1_0, grammarAccess.getSizeRuleAccess().getOptionalOptionalKeyword_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSizeRuleRule());
	        }
       		setWithLastConsumed($current, "optional", true, "optional");
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSizeRuleAccess().getUnorderedGroup_0());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getSizeRuleAccess().getUnorderedGroup_0(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getSizeRuleAccess().getUnorderedGroup_0(), 1);
	 				}
					({true}?=>(
(
		{ 
	        newCompositeNode(grammarAccess.getSizeRuleAccess().getCheckKindCheckKindEnumRuleCall_0_1_0()); 
	    }
		lv_checkKind_2_0=ruleCheckKind		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSizeRuleRule());
	        }
       		set(
       			$current, 
       			"checkKind",
        		lv_checkKind_2_0, 
        		"com.avaloq.tools.ddk.xtext.valid.Valid.CheckKind");
	        afterParserOrEnumRuleCall();
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSizeRuleAccess().getUnorderedGroup_0());
	 				}
 				)
			)  

		)*	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getSizeRuleAccess().getUnorderedGroup_0());
	}

)	otherlv_3='size' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSizeRuleAccess().getSizeKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSizeRuleAccess().getSeveritySeverityKindEnumRuleCall_2_0()); 
	    }
		lv_severity_4_0=ruleSeverityKind		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSizeRuleRule());
	        }
       		set(
       			$current, 
       			"severity",
        		lv_severity_4_0, 
        		"com.avaloq.tools.ddk.xtext.valid.Valid.SeverityKind");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_name_5_0=RULE_ID
		{
			newLeafNode(lv_name_5_0, grammarAccess.getSizeRuleAccess().getNameIDTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSizeRuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_5_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)	otherlv_6='label' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getSizeRuleAccess().getLabelKeyword_4());
    }
(
(
		lv_label_7_0=RULE_STRING
		{
			newLeafNode(lv_label_7_0, grammarAccess.getSizeRuleAccess().getLabelSTRINGTerminalRuleCall_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSizeRuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"label",
        		lv_label_7_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
)(	otherlv_8='description' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getSizeRuleAccess().getDescriptionKeyword_6_0());
    }
(
(
		lv_description_9_0=RULE_STRING
		{
			newLeafNode(lv_description_9_0, grammarAccess.getSizeRuleAccess().getDescriptionSTRINGTerminalRuleCall_6_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSizeRuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"description",
        		lv_description_9_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
))?(	otherlv_10='message' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getSizeRuleAccess().getMessageKeyword_7_0());
    }
(
(
		lv_message_11_0=RULE_STRING
		{
			newLeafNode(lv_message_11_0, grammarAccess.getSizeRuleAccess().getMessageSTRINGTerminalRuleCall_7_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSizeRuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"message",
        		lv_message_11_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
))?	otherlv_12='size' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getSizeRuleAccess().getSizeKeyword_8());
    }
((
(
		lv_min_13_0=RULE_INT
		{
			newLeafNode(lv_min_13_0, grammarAccess.getSizeRuleAccess().getMinINTTerminalRuleCall_9_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSizeRuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"min",
        		lv_min_13_0, 
        		"org.eclipse.xtext.common.Terminals.INT");
	    }

)
)	otherlv_14='..' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getSizeRuleAccess().getFullStopFullStopKeyword_9_1());
    }
)?(
(
		lv_max_15_0=RULE_INT
		{
			newLeafNode(lv_max_15_0, grammarAccess.getSizeRuleAccess().getMaxINTTerminalRuleCall_10_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSizeRuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"max",
        		lv_max_15_0, 
        		"org.eclipse.xtext.common.Terminals.INT");
	    }

)
)	otherlv_16='context' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getSizeRuleAccess().getContextKeyword_11());
    }
	otherlv_17='{' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getSizeRuleAccess().getLeftCurlyBracketKeyword_12());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSizeRuleAccess().getContextsSimpleContextParserRuleCall_13_0()); 
	    }
		lv_contexts_18_0=ruleSimpleContext		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSizeRuleRule());
	        }
       		add(
       			$current, 
       			"contexts",
        		lv_contexts_18_0, 
        		"com.avaloq.tools.ddk.xtext.valid.Valid.SimpleContext");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_19='}' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getSizeRuleAccess().getRightCurlyBracketKeyword_14());
    }
)
;





// Entry rule entryRuleRangeRule
entryRuleRangeRule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRangeRuleRule()); }
	 iv_ruleRangeRule=ruleRangeRule 
	 { $current=$iv_ruleRangeRule.current; } 
	 EOF 
;

// Rule RangeRule
ruleRangeRule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getRangeRuleAccess().getUnorderedGroup_0());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getRangeRuleAccess().getUnorderedGroup_0(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getRangeRuleAccess().getUnorderedGroup_0(), 0);
	 				}
					({true}?=>(
(
		lv_optional_1_0=	'optional' 
    {
        newLeafNode(lv_optional_1_0, grammarAccess.getRangeRuleAccess().getOptionalOptionalKeyword_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRangeRuleRule());
	        }
       		setWithLastConsumed($current, "optional", true, "optional");
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRangeRuleAccess().getUnorderedGroup_0());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getRangeRuleAccess().getUnorderedGroup_0(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getRangeRuleAccess().getUnorderedGroup_0(), 1);
	 				}
					({true}?=>(
(
		{ 
	        newCompositeNode(grammarAccess.getRangeRuleAccess().getCheckKindCheckKindEnumRuleCall_0_1_0()); 
	    }
		lv_checkKind_2_0=ruleCheckKind		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRangeRuleRule());
	        }
       		set(
       			$current, 
       			"checkKind",
        		lv_checkKind_2_0, 
        		"com.avaloq.tools.ddk.xtext.valid.Valid.CheckKind");
	        afterParserOrEnumRuleCall();
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRangeRuleAccess().getUnorderedGroup_0());
	 				}
 				)
			)  

		)*	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getRangeRuleAccess().getUnorderedGroup_0());
	}

)	otherlv_3='range' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRangeRuleAccess().getRangeKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRangeRuleAccess().getSeveritySeverityKindEnumRuleCall_2_0()); 
	    }
		lv_severity_4_0=ruleSeverityKind		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRangeRuleRule());
	        }
       		set(
       			$current, 
       			"severity",
        		lv_severity_4_0, 
        		"com.avaloq.tools.ddk.xtext.valid.Valid.SeverityKind");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_name_5_0=RULE_ID
		{
			newLeafNode(lv_name_5_0, grammarAccess.getRangeRuleAccess().getNameIDTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRangeRuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_5_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)	otherlv_6='label' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getRangeRuleAccess().getLabelKeyword_4());
    }
(
(
		lv_label_7_0=RULE_STRING
		{
			newLeafNode(lv_label_7_0, grammarAccess.getRangeRuleAccess().getLabelSTRINGTerminalRuleCall_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRangeRuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"label",
        		lv_label_7_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
)(	otherlv_8='description' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getRangeRuleAccess().getDescriptionKeyword_6_0());
    }
(
(
		lv_description_9_0=RULE_STRING
		{
			newLeafNode(lv_description_9_0, grammarAccess.getRangeRuleAccess().getDescriptionSTRINGTerminalRuleCall_6_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRangeRuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"description",
        		lv_description_9_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
))?(	otherlv_10='message' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getRangeRuleAccess().getMessageKeyword_7_0());
    }
(
(
		lv_message_11_0=RULE_STRING
		{
			newLeafNode(lv_message_11_0, grammarAccess.getRangeRuleAccess().getMessageSTRINGTerminalRuleCall_7_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRangeRuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"message",
        		lv_message_11_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
))?	otherlv_12='range' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getRangeRuleAccess().getRangeKeyword_8());
    }
((
(
		lv_min_13_0=RULE_INT
		{
			newLeafNode(lv_min_13_0, grammarAccess.getRangeRuleAccess().getMinINTTerminalRuleCall_9_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRangeRuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"min",
        		lv_min_13_0, 
        		"org.eclipse.xtext.common.Terminals.INT");
	    }

)
)	otherlv_14='..' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getRangeRuleAccess().getFullStopFullStopKeyword_9_1());
    }
)?(
(
		lv_max_15_0=RULE_INT
		{
			newLeafNode(lv_max_15_0, grammarAccess.getRangeRuleAccess().getMaxINTTerminalRuleCall_10_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRangeRuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"max",
        		lv_max_15_0, 
        		"org.eclipse.xtext.common.Terminals.INT");
	    }

)
)	otherlv_16='context' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getRangeRuleAccess().getContextKeyword_11());
    }
	otherlv_17='{' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getRangeRuleAccess().getLeftCurlyBracketKeyword_12());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRangeRuleAccess().getContextsSimpleContextParserRuleCall_13_0()); 
	    }
		lv_contexts_18_0=ruleSimpleContext		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRangeRuleRule());
	        }
       		add(
       			$current, 
       			"contexts",
        		lv_contexts_18_0, 
        		"com.avaloq.tools.ddk.xtext.valid.Valid.SimpleContext");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_19='}' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getRangeRuleAccess().getRightCurlyBracketKeyword_14());
    }
)
;





// Entry rule entryRuleUniqueRule
entryRuleUniqueRule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUniqueRuleRule()); }
	 iv_ruleUniqueRule=ruleUniqueRule 
	 { $current=$iv_ruleUniqueRule.current; } 
	 EOF 
;

// Rule UniqueRule
ruleUniqueRule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getUniqueRuleAccess().getUnorderedGroup_0());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getUniqueRuleAccess().getUnorderedGroup_0(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getUniqueRuleAccess().getUnorderedGroup_0(), 0);
	 				}
					({true}?=>(
(
		lv_optional_1_0=	'optional' 
    {
        newLeafNode(lv_optional_1_0, grammarAccess.getUniqueRuleAccess().getOptionalOptionalKeyword_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUniqueRuleRule());
	        }
       		setWithLastConsumed($current, "optional", true, "optional");
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getUniqueRuleAccess().getUnorderedGroup_0());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getUniqueRuleAccess().getUnorderedGroup_0(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getUniqueRuleAccess().getUnorderedGroup_0(), 1);
	 				}
					({true}?=>(
(
		{ 
	        newCompositeNode(grammarAccess.getUniqueRuleAccess().getCheckKindCheckKindEnumRuleCall_0_1_0()); 
	    }
		lv_checkKind_2_0=ruleCheckKind		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUniqueRuleRule());
	        }
       		set(
       			$current, 
       			"checkKind",
        		lv_checkKind_2_0, 
        		"com.avaloq.tools.ddk.xtext.valid.Valid.CheckKind");
	        afterParserOrEnumRuleCall();
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getUniqueRuleAccess().getUnorderedGroup_0());
	 				}
 				)
			)  

		)*	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getUniqueRuleAccess().getUnorderedGroup_0());
	}

)	otherlv_3='unique' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getUniqueRuleAccess().getUniqueKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUniqueRuleAccess().getSeveritySeverityKindEnumRuleCall_2_0()); 
	    }
		lv_severity_4_0=ruleSeverityKind		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUniqueRuleRule());
	        }
       		set(
       			$current, 
       			"severity",
        		lv_severity_4_0, 
        		"com.avaloq.tools.ddk.xtext.valid.Valid.SeverityKind");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_name_5_0=RULE_ID
		{
			newLeafNode(lv_name_5_0, grammarAccess.getUniqueRuleAccess().getNameIDTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUniqueRuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_5_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)	otherlv_6='label' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getUniqueRuleAccess().getLabelKeyword_4());
    }
(
(
		lv_label_7_0=RULE_STRING
		{
			newLeafNode(lv_label_7_0, grammarAccess.getUniqueRuleAccess().getLabelSTRINGTerminalRuleCall_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUniqueRuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"label",
        		lv_label_7_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
)(	otherlv_8='description' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getUniqueRuleAccess().getDescriptionKeyword_6_0());
    }
(
(
		lv_description_9_0=RULE_STRING
		{
			newLeafNode(lv_description_9_0, grammarAccess.getUniqueRuleAccess().getDescriptionSTRINGTerminalRuleCall_6_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUniqueRuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"description",
        		lv_description_9_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
))?(	otherlv_10='message' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getUniqueRuleAccess().getMessageKeyword_7_0());
    }
(
(
		lv_message_11_0=RULE_STRING
		{
			newLeafNode(lv_message_11_0, grammarAccess.getUniqueRuleAccess().getMessageSTRINGTerminalRuleCall_7_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUniqueRuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"message",
        		lv_message_11_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
))?	otherlv_12='context' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getUniqueRuleAccess().getContextKeyword_8());
    }
	otherlv_13='{' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getUniqueRuleAccess().getLeftCurlyBracketKeyword_9());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUniqueRuleAccess().getContextsDuplicateContextParserRuleCall_10_0()); 
	    }
		lv_contexts_14_0=ruleDuplicateContext		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUniqueRuleRule());
	        }
       		add(
       			$current, 
       			"contexts",
        		lv_contexts_14_0, 
        		"com.avaloq.tools.ddk.xtext.valid.Valid.DuplicateContext");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_15='}' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getUniqueRuleAccess().getRightCurlyBracketKeyword_11());
    }
)
;







// Entry rule entryRuleSimpleContext
entryRuleSimpleContext returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSimpleContextRule()); }
	 iv_ruleSimpleContext=ruleSimpleContext 
	 { $current=$iv_ruleSimpleContext.current; } 
	 EOF 
;

// Rule SimpleContext
ruleSimpleContext returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSimpleContextRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getSimpleContextAccess().getContextTypeEClassCrossReference_0_0()); 
	    }
		ruleQualifiedID		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1='#' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSimpleContextAccess().getNumberSignKeyword_1_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSimpleContextRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getSimpleContextAccess().getContextFeatureEStructuralFeatureCrossReference_1_1_0()); 
	}

)
))?	otherlv_3=';' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSimpleContextAccess().getSemicolonKeyword_2());
    }
)
;





// Entry rule entryRuleDuplicateContext
entryRuleDuplicateContext returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDuplicateContextRule()); }
	 iv_ruleDuplicateContext=ruleDuplicateContext 
	 { $current=$iv_ruleDuplicateContext.current; } 
	 EOF 
;

// Rule DuplicateContext
ruleDuplicateContext returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDuplicateContextRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getDuplicateContextAccess().getContextTypeEClassCrossReference_0_0()); 
	    }
		ruleQualifiedID		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1='#' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDuplicateContextAccess().getNumberSignKeyword_1_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDuplicateContextRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getDuplicateContextAccess().getContextFeatureEStructuralFeatureCrossReference_1_1_0()); 
	}

)
))?	otherlv_3='marker' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDuplicateContextAccess().getMarkerKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDuplicateContextRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getDuplicateContextAccess().getMarkerTypeEClassCrossReference_3_0()); 
	    }
		ruleQualifiedID		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='#' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDuplicateContextAccess().getNumberSignKeyword_4());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDuplicateContextRule());
	        }
        }
	otherlv_6=RULE_ID
	{
		newLeafNode(otherlv_6, grammarAccess.getDuplicateContextAccess().getMarkerFeatureEStructuralFeatureCrossReference_5_0()); 
	}

)
)?	otherlv_7=';' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getDuplicateContextAccess().getSemicolonKeyword_6());
    }
)
;





// Entry rule entryRuleNativeContext
entryRuleNativeContext returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNativeContextRule()); }
	 iv_ruleNativeContext=ruleNativeContext 
	 { $current=$iv_ruleNativeContext.current; } 
	 EOF 
;

// Rule NativeContext
ruleNativeContext returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getNativeContextRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getNativeContextAccess().getContextTypeEClassCrossReference_0_0()); 
	    }
		ruleQualifiedID		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1='#' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getNativeContextAccess().getNumberSignKeyword_1_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getNativeContextRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getNativeContextAccess().getContextFeatureEStructuralFeatureCrossReference_1_1_0()); 
	}

)
))?((
(
		lv_named_3_0=	'as' 
    {
        newLeafNode(lv_named_3_0, grammarAccess.getNativeContextAccess().getNamedAsKeyword_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNativeContextRule());
	        }
       		setWithLastConsumed($current, "named", true, "as");
	    }

)
)(
(
		lv_givenName_4_0=RULE_ID
		{
			newLeafNode(lv_givenName_4_0, grammarAccess.getNativeContextAccess().getGivenNameIDTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNativeContextRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"givenName",
        		lv_givenName_4_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
))?(	otherlv_5='marker' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getNativeContextAccess().getMarkerKeyword_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getNativeContextRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getNativeContextAccess().getMarkerTypeEClassCrossReference_3_1_0()); 
	    }
		ruleQualifiedID		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_7='#' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getNativeContextAccess().getNumberSignKeyword_3_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getNativeContextRule());
	        }
        }
	otherlv_8=RULE_ID
	{
		newLeafNode(otherlv_8, grammarAccess.getNativeContextAccess().getMarkerFeatureEStructuralFeatureCrossReference_3_2_1_0()); 
	}

)
)))?(	otherlv_9='quickfixes' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getNativeContextAccess().getQuickfixesKeyword_4_0());
    }
	otherlv_10='{' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getNativeContextAccess().getLeftCurlyBracketKeyword_4_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNativeContextAccess().getQuickFixesQuickFixParserRuleCall_4_2_0()); 
	    }
		lv_quickFixes_11_0=ruleQuickFix		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNativeContextRule());
	        }
       		add(
       			$current, 
       			"quickFixes",
        		lv_quickFixes_11_0, 
        		"com.avaloq.tools.ddk.xtext.valid.Valid.QuickFix");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_12='}' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getNativeContextAccess().getRightCurlyBracketKeyword_4_3());
    }
)?	otherlv_13=';' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getNativeContextAccess().getSemicolonKeyword_5());
    }
)
;





// Entry rule entryRuleQuickFix
entryRuleQuickFix returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getQuickFixRule()); }
	 iv_ruleQuickFix=ruleQuickFix 
	 { $current=$iv_ruleQuickFix.current; } 
	 EOF 
;

// Rule QuickFix
ruleQuickFix returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getQuickFixAccess().getQuickFixKindQuickFixKindEnumRuleCall_0_0()); 
	    }
		lv_quickFixKind_0_0=ruleQuickFixKind		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQuickFixRule());
	        }
       		set(
       			$current, 
       			"quickFixKind",
        		lv_quickFixKind_0_0, 
        		"com.avaloq.tools.ddk.xtext.valid.Valid.QuickFixKind");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_1='fix' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getQuickFixAccess().getFixKeyword_1());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getQuickFixAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getQuickFixRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)	otherlv_3='label' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getQuickFixAccess().getLabelKeyword_3());
    }
(
(
		lv_label_4_0=RULE_STRING
		{
			newLeafNode(lv_label_4_0, grammarAccess.getQuickFixAccess().getLabelSTRINGTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getQuickFixRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"label",
        		lv_label_4_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
)	otherlv_5='message' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getQuickFixAccess().getMessageKeyword_5());
    }
(
(
		lv_message_6_0=RULE_STRING
		{
			newLeafNode(lv_message_6_0, grammarAccess.getQuickFixAccess().getMessageSTRINGTerminalRuleCall_6_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getQuickFixRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"message",
        		lv_message_6_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
)	otherlv_7=';' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getQuickFixAccess().getSemicolonKeyword_7());
    }
)
;





// Entry rule entryRuleQualifiedID
entryRuleQualifiedID returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifiedIDRule()); } 
	 iv_ruleQualifiedID=ruleQualifiedID 
	 { $current=$iv_ruleQualifiedID.current.getText(); }  
	 EOF 
;

// Rule QualifiedID
ruleQualifiedID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getQualifiedIDAccess().getIDTerminalRuleCall_0_0()); 
    }

	kw='::' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedIDAccess().getColonColonKeyword_0_1()); 
    }
)*    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getQualifiedIDAccess().getIDTerminalRuleCall_1()); 
    }
)
    ;





// Rule CheckKind
ruleCheckKind returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='fast' 
	{
        $current = grammarAccess.getCheckKindAccess().getFastEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getCheckKindAccess().getFastEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='normal' 
	{
        $current = grammarAccess.getCheckKindAccess().getNormalEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getCheckKindAccess().getNormalEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='expensive' 
	{
        $current = grammarAccess.getCheckKindAccess().getExpensiveEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getCheckKindAccess().getExpensiveEnumLiteralDeclaration_2()); 
    }
));



// Rule SeverityKind
ruleSeverityKind returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='error' 
	{
        $current = grammarAccess.getSeverityKindAccess().getErrorEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getSeverityKindAccess().getErrorEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='warning' 
	{
        $current = grammarAccess.getSeverityKindAccess().getWarningEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getSeverityKindAccess().getWarningEnumLiteralDeclaration_1()); 
    }
));



// Rule QuickFixKind
ruleQuickFixKind returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='semantic' 
	{
        $current = grammarAccess.getQuickFixKindAccess().getSemanticEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getQuickFixKindAccess().getSemanticEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='textual' 
	{
        $current = grammarAccess.getQuickFixKindAccess().getTextualEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getQuickFixKindAccess().getTextualEnumLiteralDeclaration_1()); 
    }
));



RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


