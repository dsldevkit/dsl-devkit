/*
 * generated by Xtext
 */
package com.avaloq.tools.ddk.xtext.valid.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class ValidGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class ValidModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.avaloq.tools.ddk.xtext.valid.Valid.ValidModel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cImportsAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cImportsImportParserRuleCall_0_0 = (RuleCall)cImportsAssignment_0.eContents().get(0);
		private final Assignment cCategoriesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cCategoriesCategoryParserRuleCall_1_0 = (RuleCall)cCategoriesAssignment_1.eContents().get(0);
		
		//ValidModel:
		//	imports+=Import*
		//	categories+=Category*;
		@Override public ParserRule getRule() { return rule; }

		//imports+=Import* categories+=Category*
		public Group getGroup() { return cGroup; }

		//imports+=Import*
		public Assignment getImportsAssignment_0() { return cImportsAssignment_0; }

		//Import
		public RuleCall getImportsImportParserRuleCall_0_0() { return cImportsImportParserRuleCall_0_0; }

		//categories+=Category*
		public Assignment getCategoriesAssignment_1() { return cCategoriesAssignment_1; }

		//Category
		public RuleCall getCategoriesCategoryParserRuleCall_1_0() { return cCategoriesCategoryParserRuleCall_1_0; }
	}

	public class ImportElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.avaloq.tools.ddk.xtext.valid.Valid.Import");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cImportKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cPackageAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cPackageEPackageCrossReference_1_0 = (CrossReference)cPackageAssignment_1.eContents().get(0);
		private final RuleCall cPackageEPackageSTRINGTerminalRuleCall_1_0_1 = (RuleCall)cPackageEPackageCrossReference_1_0.eContents().get(1);
		
		//Import:
		//	'import' package=[ecore::EPackage|STRING];
		@Override public ParserRule getRule() { return rule; }

		//'import' package=[ecore::EPackage|STRING]
		public Group getGroup() { return cGroup; }

		//'import'
		public Keyword getImportKeyword_0() { return cImportKeyword_0; }

		//package=[ecore::EPackage|STRING]
		public Assignment getPackageAssignment_1() { return cPackageAssignment_1; }

		//[ecore::EPackage|STRING]
		public CrossReference getPackageEPackageCrossReference_1_0() { return cPackageEPackageCrossReference_1_0; }

		//STRING
		public RuleCall getPackageEPackageSTRINGTerminalRuleCall_1_0_1() { return cPackageEPackageSTRINGTerminalRuleCall_1_0_1; }
	}

	public class CategoryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.avaloq.tools.ddk.xtext.valid.Valid.Category");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCategoryKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLabelKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cLabelAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLabelSTRINGTerminalRuleCall_3_0 = (RuleCall)cLabelAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cDescriptionKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cDescriptionAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_4_1_0 = (RuleCall)cDescriptionAssignment_4_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cRulesAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cRulesRuleParserRuleCall_6_0 = (RuleCall)cRulesAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Category:
		//	'category' name=ID 'label' label=STRING ('description' description=STRING)? '{' rules+=Rule* '}';
		@Override public ParserRule getRule() { return rule; }

		//'category' name=ID 'label' label=STRING ('description' description=STRING)? '{' rules+=Rule* '}'
		public Group getGroup() { return cGroup; }

		//'category'
		public Keyword getCategoryKeyword_0() { return cCategoryKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//'label'
		public Keyword getLabelKeyword_2() { return cLabelKeyword_2; }

		//label=STRING
		public Assignment getLabelAssignment_3() { return cLabelAssignment_3; }

		//STRING
		public RuleCall getLabelSTRINGTerminalRuleCall_3_0() { return cLabelSTRINGTerminalRuleCall_3_0; }

		//('description' description=STRING)?
		public Group getGroup_4() { return cGroup_4; }

		//'description'
		public Keyword getDescriptionKeyword_4_0() { return cDescriptionKeyword_4_0; }

		//description=STRING
		public Assignment getDescriptionAssignment_4_1() { return cDescriptionAssignment_4_1; }

		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_4_1_0() { return cDescriptionSTRINGTerminalRuleCall_4_1_0; }

		//'{'
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }

		//rules+=Rule*
		public Assignment getRulesAssignment_6() { return cRulesAssignment_6; }

		//Rule
		public RuleCall getRulesRuleParserRuleCall_6_0() { return cRulesRuleParserRuleCall_6_0; }

		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}

	public class RuleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.avaloq.tools.ddk.xtext.valid.Valid.Rule");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cNativeRuleParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cPredefinedRuleParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Rule:
		//	NativeRule | PredefinedRule;
		@Override public ParserRule getRule() { return rule; }

		//NativeRule | PredefinedRule
		public Alternatives getAlternatives() { return cAlternatives; }

		//NativeRule
		public RuleCall getNativeRuleParserRuleCall_0() { return cNativeRuleParserRuleCall_0; }

		//PredefinedRule
		public RuleCall getPredefinedRuleParserRuleCall_1() { return cPredefinedRuleParserRuleCall_1; }
	}

	public class PredefinedRuleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.avaloq.tools.ddk.xtext.valid.Valid.PredefinedRule");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSizeRuleParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cRangeRuleParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cUniqueRuleParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//PredefinedRule:
		//	SizeRule | RangeRule | UniqueRule //TODO | CapitalizationRule
		//;
		@Override public ParserRule getRule() { return rule; }

		//SizeRule | RangeRule | UniqueRule
		public Alternatives getAlternatives() { return cAlternatives; }

		//SizeRule
		public RuleCall getSizeRuleParserRuleCall_0() { return cSizeRuleParserRuleCall_0; }

		//RangeRule
		public RuleCall getRangeRuleParserRuleCall_1() { return cRangeRuleParserRuleCall_1; }

		//UniqueRule
		public RuleCall getUniqueRuleParserRuleCall_2() { return cUniqueRuleParserRuleCall_2; }
	}

	public class NativeRuleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.avaloq.tools.ddk.xtext.valid.Valid.NativeRule");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final UnorderedGroup cUnorderedGroup_0 = (UnorderedGroup)cGroup.eContents().get(0);
		private final Assignment cOptionalAssignment_0_0 = (Assignment)cUnorderedGroup_0.eContents().get(0);
		private final Keyword cOptionalOptionalKeyword_0_0_0 = (Keyword)cOptionalAssignment_0_0.eContents().get(0);
		private final Assignment cCheckKindAssignment_0_1 = (Assignment)cUnorderedGroup_0.eContents().get(1);
		private final RuleCall cCheckKindCheckKindEnumRuleCall_0_1_0 = (RuleCall)cCheckKindAssignment_0_1.eContents().get(0);
		private final Assignment cSeverityAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cSeveritySeverityKindEnumRuleCall_1_0 = (RuleCall)cSeverityAssignment_1.eContents().get(0);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLabelKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cLabelAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cLabelSTRINGTerminalRuleCall_4_0 = (RuleCall)cLabelAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cDescriptionKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cDescriptionAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_5_1_0 = (RuleCall)cDescriptionAssignment_5_1.eContents().get(0);
		private final Keyword cMessageKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cMessageAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cMessageSTRINGTerminalRuleCall_7_0 = (RuleCall)cMessageAssignment_7.eContents().get(0);
		private final Keyword cContextKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cLeftCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cContextsAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cContextsNativeContextParserRuleCall_10_0 = (RuleCall)cContextsAssignment_10.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//NativeRule:
		//	(optional?='optional'? & checkKind=CheckKind?) severity=SeverityKind name=ID
		//	'label' label=STRING ('description' description=STRING)?
		//	'message' message=STRING
		//	'context' '{'
		//	contexts+=NativeContext+
		//	'}';
		@Override public ParserRule getRule() { return rule; }

		//(optional?='optional'? & checkKind=CheckKind?) severity=SeverityKind name=ID 'label' label=STRING ('description'
		//description=STRING)? 'message' message=STRING 'context' '{' contexts+=NativeContext+ '}'
		public Group getGroup() { return cGroup; }

		//optional?='optional'? & checkKind=CheckKind?
		public UnorderedGroup getUnorderedGroup_0() { return cUnorderedGroup_0; }

		//optional?='optional'?
		public Assignment getOptionalAssignment_0_0() { return cOptionalAssignment_0_0; }

		//'optional'
		public Keyword getOptionalOptionalKeyword_0_0_0() { return cOptionalOptionalKeyword_0_0_0; }

		//checkKind=CheckKind?
		public Assignment getCheckKindAssignment_0_1() { return cCheckKindAssignment_0_1; }

		//CheckKind
		public RuleCall getCheckKindCheckKindEnumRuleCall_0_1_0() { return cCheckKindCheckKindEnumRuleCall_0_1_0; }

		//severity=SeverityKind
		public Assignment getSeverityAssignment_1() { return cSeverityAssignment_1; }

		//SeverityKind
		public RuleCall getSeveritySeverityKindEnumRuleCall_1_0() { return cSeveritySeverityKindEnumRuleCall_1_0; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//'label'
		public Keyword getLabelKeyword_3() { return cLabelKeyword_3; }

		//label=STRING
		public Assignment getLabelAssignment_4() { return cLabelAssignment_4; }

		//STRING
		public RuleCall getLabelSTRINGTerminalRuleCall_4_0() { return cLabelSTRINGTerminalRuleCall_4_0; }

		//('description' description=STRING)?
		public Group getGroup_5() { return cGroup_5; }

		//'description'
		public Keyword getDescriptionKeyword_5_0() { return cDescriptionKeyword_5_0; }

		//description=STRING
		public Assignment getDescriptionAssignment_5_1() { return cDescriptionAssignment_5_1; }

		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_5_1_0() { return cDescriptionSTRINGTerminalRuleCall_5_1_0; }

		//'message'
		public Keyword getMessageKeyword_6() { return cMessageKeyword_6; }

		//message=STRING
		public Assignment getMessageAssignment_7() { return cMessageAssignment_7; }

		//STRING
		public RuleCall getMessageSTRINGTerminalRuleCall_7_0() { return cMessageSTRINGTerminalRuleCall_7_0; }

		//'context'
		public Keyword getContextKeyword_8() { return cContextKeyword_8; }

		//'{'
		public Keyword getLeftCurlyBracketKeyword_9() { return cLeftCurlyBracketKeyword_9; }

		//contexts+=NativeContext+
		public Assignment getContextsAssignment_10() { return cContextsAssignment_10; }

		//NativeContext
		public RuleCall getContextsNativeContextParserRuleCall_10_0() { return cContextsNativeContextParserRuleCall_10_0; }

		//'}'
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
	}

	public class SizeRuleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.avaloq.tools.ddk.xtext.valid.Valid.SizeRule");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final UnorderedGroup cUnorderedGroup_0 = (UnorderedGroup)cGroup.eContents().get(0);
		private final Assignment cOptionalAssignment_0_0 = (Assignment)cUnorderedGroup_0.eContents().get(0);
		private final Keyword cOptionalOptionalKeyword_0_0_0 = (Keyword)cOptionalAssignment_0_0.eContents().get(0);
		private final Assignment cCheckKindAssignment_0_1 = (Assignment)cUnorderedGroup_0.eContents().get(1);
		private final RuleCall cCheckKindCheckKindEnumRuleCall_0_1_0 = (RuleCall)cCheckKindAssignment_0_1.eContents().get(0);
		private final Keyword cSizeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cSeverityAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cSeveritySeverityKindEnumRuleCall_2_0 = (RuleCall)cSeverityAssignment_2.eContents().get(0);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Keyword cLabelKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cLabelAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cLabelSTRINGTerminalRuleCall_5_0 = (RuleCall)cLabelAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cDescriptionKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cDescriptionAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_6_1_0 = (RuleCall)cDescriptionAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cMessageKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cMessageAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cMessageSTRINGTerminalRuleCall_7_1_0 = (RuleCall)cMessageAssignment_7_1.eContents().get(0);
		private final Keyword cSizeKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Assignment cMinAssignment_9_0 = (Assignment)cGroup_9.eContents().get(0);
		private final RuleCall cMinINTTerminalRuleCall_9_0_0 = (RuleCall)cMinAssignment_9_0.eContents().get(0);
		private final Keyword cFullStopFullStopKeyword_9_1 = (Keyword)cGroup_9.eContents().get(1);
		private final Assignment cMaxAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cMaxINTTerminalRuleCall_10_0 = (RuleCall)cMaxAssignment_10.eContents().get(0);
		private final Keyword cContextKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cLeftCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Assignment cContextsAssignment_13 = (Assignment)cGroup.eContents().get(13);
		private final RuleCall cContextsSimpleContextParserRuleCall_13_0 = (RuleCall)cContextsAssignment_13.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_14 = (Keyword)cGroup.eContents().get(14);
		
		//SizeRule:
		//	(optional?='optional'? & checkKind=CheckKind?) 'size' severity=SeverityKind name=ID
		//	'label' label=STRING ('description' description=STRING)? ('message' message=STRING)?
		//	'size' (min=INT '..')? max=INT
		//	'context' '{'
		//	contexts+=SimpleContext+
		//	'}';
		@Override public ParserRule getRule() { return rule; }

		//(optional?='optional'? & checkKind=CheckKind?) 'size' severity=SeverityKind name=ID 'label' label=STRING ('description'
		//description=STRING)? ('message' message=STRING)? 'size' (min=INT '..')? max=INT 'context' '{' contexts+=SimpleContext+
		//'}'
		public Group getGroup() { return cGroup; }

		//optional?='optional'? & checkKind=CheckKind?
		public UnorderedGroup getUnorderedGroup_0() { return cUnorderedGroup_0; }

		//optional?='optional'?
		public Assignment getOptionalAssignment_0_0() { return cOptionalAssignment_0_0; }

		//'optional'
		public Keyword getOptionalOptionalKeyword_0_0_0() { return cOptionalOptionalKeyword_0_0_0; }

		//checkKind=CheckKind?
		public Assignment getCheckKindAssignment_0_1() { return cCheckKindAssignment_0_1; }

		//CheckKind
		public RuleCall getCheckKindCheckKindEnumRuleCall_0_1_0() { return cCheckKindCheckKindEnumRuleCall_0_1_0; }

		//'size'
		public Keyword getSizeKeyword_1() { return cSizeKeyword_1; }

		//severity=SeverityKind
		public Assignment getSeverityAssignment_2() { return cSeverityAssignment_2; }

		//SeverityKind
		public RuleCall getSeveritySeverityKindEnumRuleCall_2_0() { return cSeveritySeverityKindEnumRuleCall_2_0; }

		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }

		//'label'
		public Keyword getLabelKeyword_4() { return cLabelKeyword_4; }

		//label=STRING
		public Assignment getLabelAssignment_5() { return cLabelAssignment_5; }

		//STRING
		public RuleCall getLabelSTRINGTerminalRuleCall_5_0() { return cLabelSTRINGTerminalRuleCall_5_0; }

		//('description' description=STRING)?
		public Group getGroup_6() { return cGroup_6; }

		//'description'
		public Keyword getDescriptionKeyword_6_0() { return cDescriptionKeyword_6_0; }

		//description=STRING
		public Assignment getDescriptionAssignment_6_1() { return cDescriptionAssignment_6_1; }

		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_6_1_0() { return cDescriptionSTRINGTerminalRuleCall_6_1_0; }

		//('message' message=STRING)?
		public Group getGroup_7() { return cGroup_7; }

		//'message'
		public Keyword getMessageKeyword_7_0() { return cMessageKeyword_7_0; }

		//message=STRING
		public Assignment getMessageAssignment_7_1() { return cMessageAssignment_7_1; }

		//STRING
		public RuleCall getMessageSTRINGTerminalRuleCall_7_1_0() { return cMessageSTRINGTerminalRuleCall_7_1_0; }

		//'size'
		public Keyword getSizeKeyword_8() { return cSizeKeyword_8; }

		//(min=INT '..')?
		public Group getGroup_9() { return cGroup_9; }

		//min=INT
		public Assignment getMinAssignment_9_0() { return cMinAssignment_9_0; }

		//INT
		public RuleCall getMinINTTerminalRuleCall_9_0_0() { return cMinINTTerminalRuleCall_9_0_0; }

		//'..'
		public Keyword getFullStopFullStopKeyword_9_1() { return cFullStopFullStopKeyword_9_1; }

		//max=INT
		public Assignment getMaxAssignment_10() { return cMaxAssignment_10; }

		//INT
		public RuleCall getMaxINTTerminalRuleCall_10_0() { return cMaxINTTerminalRuleCall_10_0; }

		//'context'
		public Keyword getContextKeyword_11() { return cContextKeyword_11; }

		//'{'
		public Keyword getLeftCurlyBracketKeyword_12() { return cLeftCurlyBracketKeyword_12; }

		//contexts+=SimpleContext+
		public Assignment getContextsAssignment_13() { return cContextsAssignment_13; }

		//SimpleContext
		public RuleCall getContextsSimpleContextParserRuleCall_13_0() { return cContextsSimpleContextParserRuleCall_13_0; }

		//'}'
		public Keyword getRightCurlyBracketKeyword_14() { return cRightCurlyBracketKeyword_14; }
	}

	public class RangeRuleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.avaloq.tools.ddk.xtext.valid.Valid.RangeRule");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final UnorderedGroup cUnorderedGroup_0 = (UnorderedGroup)cGroup.eContents().get(0);
		private final Assignment cOptionalAssignment_0_0 = (Assignment)cUnorderedGroup_0.eContents().get(0);
		private final Keyword cOptionalOptionalKeyword_0_0_0 = (Keyword)cOptionalAssignment_0_0.eContents().get(0);
		private final Assignment cCheckKindAssignment_0_1 = (Assignment)cUnorderedGroup_0.eContents().get(1);
		private final RuleCall cCheckKindCheckKindEnumRuleCall_0_1_0 = (RuleCall)cCheckKindAssignment_0_1.eContents().get(0);
		private final Keyword cRangeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cSeverityAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cSeveritySeverityKindEnumRuleCall_2_0 = (RuleCall)cSeverityAssignment_2.eContents().get(0);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Keyword cLabelKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cLabelAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cLabelSTRINGTerminalRuleCall_5_0 = (RuleCall)cLabelAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cDescriptionKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cDescriptionAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_6_1_0 = (RuleCall)cDescriptionAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cMessageKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cMessageAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cMessageSTRINGTerminalRuleCall_7_1_0 = (RuleCall)cMessageAssignment_7_1.eContents().get(0);
		private final Keyword cRangeKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Assignment cMinAssignment_9_0 = (Assignment)cGroup_9.eContents().get(0);
		private final RuleCall cMinINTTerminalRuleCall_9_0_0 = (RuleCall)cMinAssignment_9_0.eContents().get(0);
		private final Keyword cFullStopFullStopKeyword_9_1 = (Keyword)cGroup_9.eContents().get(1);
		private final Assignment cMaxAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cMaxINTTerminalRuleCall_10_0 = (RuleCall)cMaxAssignment_10.eContents().get(0);
		private final Keyword cContextKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cLeftCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Assignment cContextsAssignment_13 = (Assignment)cGroup.eContents().get(13);
		private final RuleCall cContextsSimpleContextParserRuleCall_13_0 = (RuleCall)cContextsAssignment_13.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_14 = (Keyword)cGroup.eContents().get(14);
		
		//RangeRule:
		//	(optional?='optional'? & checkKind=CheckKind?) 'range' severity=SeverityKind name=ID
		//	'label' label=STRING ('description' description=STRING)? ('message' message=STRING)?
		//	'range' (min=INT '..')? max=INT
		//	'context' '{'
		//	contexts+=SimpleContext+
		//	'}';
		@Override public ParserRule getRule() { return rule; }

		//(optional?='optional'? & checkKind=CheckKind?) 'range' severity=SeverityKind name=ID 'label' label=STRING ('description'
		//description=STRING)? ('message' message=STRING)? 'range' (min=INT '..')? max=INT 'context' '{'
		//contexts+=SimpleContext+ '}'
		public Group getGroup() { return cGroup; }

		//optional?='optional'? & checkKind=CheckKind?
		public UnorderedGroup getUnorderedGroup_0() { return cUnorderedGroup_0; }

		//optional?='optional'?
		public Assignment getOptionalAssignment_0_0() { return cOptionalAssignment_0_0; }

		//'optional'
		public Keyword getOptionalOptionalKeyword_0_0_0() { return cOptionalOptionalKeyword_0_0_0; }

		//checkKind=CheckKind?
		public Assignment getCheckKindAssignment_0_1() { return cCheckKindAssignment_0_1; }

		//CheckKind
		public RuleCall getCheckKindCheckKindEnumRuleCall_0_1_0() { return cCheckKindCheckKindEnumRuleCall_0_1_0; }

		//'range'
		public Keyword getRangeKeyword_1() { return cRangeKeyword_1; }

		//severity=SeverityKind
		public Assignment getSeverityAssignment_2() { return cSeverityAssignment_2; }

		//SeverityKind
		public RuleCall getSeveritySeverityKindEnumRuleCall_2_0() { return cSeveritySeverityKindEnumRuleCall_2_0; }

		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }

		//'label'
		public Keyword getLabelKeyword_4() { return cLabelKeyword_4; }

		//label=STRING
		public Assignment getLabelAssignment_5() { return cLabelAssignment_5; }

		//STRING
		public RuleCall getLabelSTRINGTerminalRuleCall_5_0() { return cLabelSTRINGTerminalRuleCall_5_0; }

		//('description' description=STRING)?
		public Group getGroup_6() { return cGroup_6; }

		//'description'
		public Keyword getDescriptionKeyword_6_0() { return cDescriptionKeyword_6_0; }

		//description=STRING
		public Assignment getDescriptionAssignment_6_1() { return cDescriptionAssignment_6_1; }

		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_6_1_0() { return cDescriptionSTRINGTerminalRuleCall_6_1_0; }

		//('message' message=STRING)?
		public Group getGroup_7() { return cGroup_7; }

		//'message'
		public Keyword getMessageKeyword_7_0() { return cMessageKeyword_7_0; }

		//message=STRING
		public Assignment getMessageAssignment_7_1() { return cMessageAssignment_7_1; }

		//STRING
		public RuleCall getMessageSTRINGTerminalRuleCall_7_1_0() { return cMessageSTRINGTerminalRuleCall_7_1_0; }

		//'range'
		public Keyword getRangeKeyword_8() { return cRangeKeyword_8; }

		//(min=INT '..')?
		public Group getGroup_9() { return cGroup_9; }

		//min=INT
		public Assignment getMinAssignment_9_0() { return cMinAssignment_9_0; }

		//INT
		public RuleCall getMinINTTerminalRuleCall_9_0_0() { return cMinINTTerminalRuleCall_9_0_0; }

		//'..'
		public Keyword getFullStopFullStopKeyword_9_1() { return cFullStopFullStopKeyword_9_1; }

		//max=INT
		public Assignment getMaxAssignment_10() { return cMaxAssignment_10; }

		//INT
		public RuleCall getMaxINTTerminalRuleCall_10_0() { return cMaxINTTerminalRuleCall_10_0; }

		//'context'
		public Keyword getContextKeyword_11() { return cContextKeyword_11; }

		//'{'
		public Keyword getLeftCurlyBracketKeyword_12() { return cLeftCurlyBracketKeyword_12; }

		//contexts+=SimpleContext+
		public Assignment getContextsAssignment_13() { return cContextsAssignment_13; }

		//SimpleContext
		public RuleCall getContextsSimpleContextParserRuleCall_13_0() { return cContextsSimpleContextParserRuleCall_13_0; }

		//'}'
		public Keyword getRightCurlyBracketKeyword_14() { return cRightCurlyBracketKeyword_14; }
	}

	public class UniqueRuleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.avaloq.tools.ddk.xtext.valid.Valid.UniqueRule");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final UnorderedGroup cUnorderedGroup_0 = (UnorderedGroup)cGroup.eContents().get(0);
		private final Assignment cOptionalAssignment_0_0 = (Assignment)cUnorderedGroup_0.eContents().get(0);
		private final Keyword cOptionalOptionalKeyword_0_0_0 = (Keyword)cOptionalAssignment_0_0.eContents().get(0);
		private final Assignment cCheckKindAssignment_0_1 = (Assignment)cUnorderedGroup_0.eContents().get(1);
		private final RuleCall cCheckKindCheckKindEnumRuleCall_0_1_0 = (RuleCall)cCheckKindAssignment_0_1.eContents().get(0);
		private final Keyword cUniqueKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cSeverityAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cSeveritySeverityKindEnumRuleCall_2_0 = (RuleCall)cSeverityAssignment_2.eContents().get(0);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Keyword cLabelKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cLabelAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cLabelSTRINGTerminalRuleCall_5_0 = (RuleCall)cLabelAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cDescriptionKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cDescriptionAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_6_1_0 = (RuleCall)cDescriptionAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cMessageKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cMessageAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cMessageSTRINGTerminalRuleCall_7_1_0 = (RuleCall)cMessageAssignment_7_1.eContents().get(0);
		private final Keyword cContextKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cLeftCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cContextsAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cContextsDuplicateContextParserRuleCall_10_0 = (RuleCall)cContextsAssignment_10.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//UniqueRule:
		//	(optional?='optional'? & checkKind=CheckKind?) 'unique' severity=SeverityKind name=ID
		//	'label' label=STRING ('description' description=STRING)? ('message' message=STRING)?
		//	'context' '{'
		//	contexts+=DuplicateContext+
		//	'}';
		@Override public ParserRule getRule() { return rule; }

		//(optional?='optional'? & checkKind=CheckKind?) 'unique' severity=SeverityKind name=ID 'label' label=STRING
		//('description' description=STRING)? ('message' message=STRING)? 'context' '{' contexts+=DuplicateContext+ '}'
		public Group getGroup() { return cGroup; }

		//optional?='optional'? & checkKind=CheckKind?
		public UnorderedGroup getUnorderedGroup_0() { return cUnorderedGroup_0; }

		//optional?='optional'?
		public Assignment getOptionalAssignment_0_0() { return cOptionalAssignment_0_0; }

		//'optional'
		public Keyword getOptionalOptionalKeyword_0_0_0() { return cOptionalOptionalKeyword_0_0_0; }

		//checkKind=CheckKind?
		public Assignment getCheckKindAssignment_0_1() { return cCheckKindAssignment_0_1; }

		//CheckKind
		public RuleCall getCheckKindCheckKindEnumRuleCall_0_1_0() { return cCheckKindCheckKindEnumRuleCall_0_1_0; }

		//'unique'
		public Keyword getUniqueKeyword_1() { return cUniqueKeyword_1; }

		//severity=SeverityKind
		public Assignment getSeverityAssignment_2() { return cSeverityAssignment_2; }

		//SeverityKind
		public RuleCall getSeveritySeverityKindEnumRuleCall_2_0() { return cSeveritySeverityKindEnumRuleCall_2_0; }

		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }

		//'label'
		public Keyword getLabelKeyword_4() { return cLabelKeyword_4; }

		//label=STRING
		public Assignment getLabelAssignment_5() { return cLabelAssignment_5; }

		//STRING
		public RuleCall getLabelSTRINGTerminalRuleCall_5_0() { return cLabelSTRINGTerminalRuleCall_5_0; }

		//('description' description=STRING)?
		public Group getGroup_6() { return cGroup_6; }

		//'description'
		public Keyword getDescriptionKeyword_6_0() { return cDescriptionKeyword_6_0; }

		//description=STRING
		public Assignment getDescriptionAssignment_6_1() { return cDescriptionAssignment_6_1; }

		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_6_1_0() { return cDescriptionSTRINGTerminalRuleCall_6_1_0; }

		//('message' message=STRING)?
		public Group getGroup_7() { return cGroup_7; }

		//'message'
		public Keyword getMessageKeyword_7_0() { return cMessageKeyword_7_0; }

		//message=STRING
		public Assignment getMessageAssignment_7_1() { return cMessageAssignment_7_1; }

		//STRING
		public RuleCall getMessageSTRINGTerminalRuleCall_7_1_0() { return cMessageSTRINGTerminalRuleCall_7_1_0; }

		//'context'
		public Keyword getContextKeyword_8() { return cContextKeyword_8; }

		//'{'
		public Keyword getLeftCurlyBracketKeyword_9() { return cLeftCurlyBracketKeyword_9; }

		//contexts+=DuplicateContext+
		public Assignment getContextsAssignment_10() { return cContextsAssignment_10; }

		//DuplicateContext
		public RuleCall getContextsDuplicateContextParserRuleCall_10_0() { return cContextsDuplicateContextParserRuleCall_10_0; }

		//'}'
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
	}

	public class ContextElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.avaloq.tools.ddk.xtext.valid.Valid.Context");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cNativeContextParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cDuplicateContextParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cSimpleContextParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//Context:
		//	NativeContext | DuplicateContext | SimpleContext;
		@Override public ParserRule getRule() { return rule; }

		//NativeContext | DuplicateContext | SimpleContext
		public Alternatives getAlternatives() { return cAlternatives; }

		//NativeContext
		public RuleCall getNativeContextParserRuleCall_0() { return cNativeContextParserRuleCall_0; }

		//DuplicateContext
		public RuleCall getDuplicateContextParserRuleCall_1() { return cDuplicateContextParserRuleCall_1; }

		//SimpleContext
		public RuleCall getSimpleContextParserRuleCall_2() { return cSimpleContextParserRuleCall_2; }
	}

	public class SimpleContextElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.avaloq.tools.ddk.xtext.valid.Valid.SimpleContext");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cContextTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cContextTypeEClassCrossReference_0_0 = (CrossReference)cContextTypeAssignment_0.eContents().get(0);
		private final RuleCall cContextTypeEClassQualifiedIDParserRuleCall_0_0_1 = (RuleCall)cContextTypeEClassCrossReference_0_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cNumberSignKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cContextFeatureAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final CrossReference cContextFeatureEStructuralFeatureCrossReference_1_1_0 = (CrossReference)cContextFeatureAssignment_1_1.eContents().get(0);
		private final RuleCall cContextFeatureEStructuralFeatureIDTerminalRuleCall_1_1_0_1 = (RuleCall)cContextFeatureEStructuralFeatureCrossReference_1_1_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//SimpleContext:
		//	contextType=[ecore::EClass|QualifiedID] ('#' contextFeature=[ecore::EStructuralFeature])? ";";
		@Override public ParserRule getRule() { return rule; }

		//contextType=[ecore::EClass|QualifiedID] ('#' contextFeature=[ecore::EStructuralFeature])? ";"
		public Group getGroup() { return cGroup; }

		//contextType=[ecore::EClass|QualifiedID]
		public Assignment getContextTypeAssignment_0() { return cContextTypeAssignment_0; }

		//[ecore::EClass|QualifiedID]
		public CrossReference getContextTypeEClassCrossReference_0_0() { return cContextTypeEClassCrossReference_0_0; }

		//QualifiedID
		public RuleCall getContextTypeEClassQualifiedIDParserRuleCall_0_0_1() { return cContextTypeEClassQualifiedIDParserRuleCall_0_0_1; }

		//('#' contextFeature=[ecore::EStructuralFeature])?
		public Group getGroup_1() { return cGroup_1; }

		//'#'
		public Keyword getNumberSignKeyword_1_0() { return cNumberSignKeyword_1_0; }

		//contextFeature=[ecore::EStructuralFeature]
		public Assignment getContextFeatureAssignment_1_1() { return cContextFeatureAssignment_1_1; }

		//[ecore::EStructuralFeature]
		public CrossReference getContextFeatureEStructuralFeatureCrossReference_1_1_0() { return cContextFeatureEStructuralFeatureCrossReference_1_1_0; }

		//ID
		public RuleCall getContextFeatureEStructuralFeatureIDTerminalRuleCall_1_1_0_1() { return cContextFeatureEStructuralFeatureIDTerminalRuleCall_1_1_0_1; }

		//";"
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}

	public class DuplicateContextElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.avaloq.tools.ddk.xtext.valid.Valid.DuplicateContext");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cContextTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cContextTypeEClassCrossReference_0_0 = (CrossReference)cContextTypeAssignment_0.eContents().get(0);
		private final RuleCall cContextTypeEClassQualifiedIDParserRuleCall_0_0_1 = (RuleCall)cContextTypeEClassCrossReference_0_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cNumberSignKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cContextFeatureAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final CrossReference cContextFeatureEStructuralFeatureCrossReference_1_1_0 = (CrossReference)cContextFeatureAssignment_1_1.eContents().get(0);
		private final RuleCall cContextFeatureEStructuralFeatureIDTerminalRuleCall_1_1_0_1 = (RuleCall)cContextFeatureEStructuralFeatureCrossReference_1_1_0.eContents().get(1);
		private final Keyword cMarkerKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cMarkerTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cMarkerTypeEClassCrossReference_3_0 = (CrossReference)cMarkerTypeAssignment_3.eContents().get(0);
		private final RuleCall cMarkerTypeEClassQualifiedIDParserRuleCall_3_0_1 = (RuleCall)cMarkerTypeEClassCrossReference_3_0.eContents().get(1);
		private final Keyword cNumberSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cMarkerFeatureAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cMarkerFeatureEStructuralFeatureCrossReference_5_0 = (CrossReference)cMarkerFeatureAssignment_5.eContents().get(0);
		private final RuleCall cMarkerFeatureEStructuralFeatureIDTerminalRuleCall_5_0_1 = (RuleCall)cMarkerFeatureEStructuralFeatureCrossReference_5_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//DuplicateContext:
		//	contextType=[ecore::EClass|QualifiedID] ('#' contextFeature=[ecore::EStructuralFeature])? 'marker'
		//	markerType=[ecore::EClass|QualifiedID] '#' markerFeature=[ecore::EStructuralFeature]? ";";
		@Override public ParserRule getRule() { return rule; }

		//contextType=[ecore::EClass|QualifiedID] ('#' contextFeature=[ecore::EStructuralFeature])? 'marker'
		//markerType=[ecore::EClass|QualifiedID] '#' markerFeature=[ecore::EStructuralFeature]? ";"
		public Group getGroup() { return cGroup; }

		//contextType=[ecore::EClass|QualifiedID]
		public Assignment getContextTypeAssignment_0() { return cContextTypeAssignment_0; }

		//[ecore::EClass|QualifiedID]
		public CrossReference getContextTypeEClassCrossReference_0_0() { return cContextTypeEClassCrossReference_0_0; }

		//QualifiedID
		public RuleCall getContextTypeEClassQualifiedIDParserRuleCall_0_0_1() { return cContextTypeEClassQualifiedIDParserRuleCall_0_0_1; }

		//('#' contextFeature=[ecore::EStructuralFeature])?
		public Group getGroup_1() { return cGroup_1; }

		//'#'
		public Keyword getNumberSignKeyword_1_0() { return cNumberSignKeyword_1_0; }

		//contextFeature=[ecore::EStructuralFeature]
		public Assignment getContextFeatureAssignment_1_1() { return cContextFeatureAssignment_1_1; }

		//[ecore::EStructuralFeature]
		public CrossReference getContextFeatureEStructuralFeatureCrossReference_1_1_0() { return cContextFeatureEStructuralFeatureCrossReference_1_1_0; }

		//ID
		public RuleCall getContextFeatureEStructuralFeatureIDTerminalRuleCall_1_1_0_1() { return cContextFeatureEStructuralFeatureIDTerminalRuleCall_1_1_0_1; }

		//'marker'
		public Keyword getMarkerKeyword_2() { return cMarkerKeyword_2; }

		//markerType=[ecore::EClass|QualifiedID]
		public Assignment getMarkerTypeAssignment_3() { return cMarkerTypeAssignment_3; }

		//[ecore::EClass|QualifiedID]
		public CrossReference getMarkerTypeEClassCrossReference_3_0() { return cMarkerTypeEClassCrossReference_3_0; }

		//QualifiedID
		public RuleCall getMarkerTypeEClassQualifiedIDParserRuleCall_3_0_1() { return cMarkerTypeEClassQualifiedIDParserRuleCall_3_0_1; }

		//'#'
		public Keyword getNumberSignKeyword_4() { return cNumberSignKeyword_4; }

		//markerFeature=[ecore::EStructuralFeature]?
		public Assignment getMarkerFeatureAssignment_5() { return cMarkerFeatureAssignment_5; }

		//[ecore::EStructuralFeature]
		public CrossReference getMarkerFeatureEStructuralFeatureCrossReference_5_0() { return cMarkerFeatureEStructuralFeatureCrossReference_5_0; }

		//ID
		public RuleCall getMarkerFeatureEStructuralFeatureIDTerminalRuleCall_5_0_1() { return cMarkerFeatureEStructuralFeatureIDTerminalRuleCall_5_0_1; }

		//";"
		public Keyword getSemicolonKeyword_6() { return cSemicolonKeyword_6; }
	}

	public class NativeContextElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.avaloq.tools.ddk.xtext.valid.Valid.NativeContext");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cContextTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cContextTypeEClassCrossReference_0_0 = (CrossReference)cContextTypeAssignment_0.eContents().get(0);
		private final RuleCall cContextTypeEClassQualifiedIDParserRuleCall_0_0_1 = (RuleCall)cContextTypeEClassCrossReference_0_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cNumberSignKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cContextFeatureAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final CrossReference cContextFeatureEStructuralFeatureCrossReference_1_1_0 = (CrossReference)cContextFeatureAssignment_1_1.eContents().get(0);
		private final RuleCall cContextFeatureEStructuralFeatureIDTerminalRuleCall_1_1_0_1 = (RuleCall)cContextFeatureEStructuralFeatureCrossReference_1_1_0.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cNamedAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final Keyword cNamedAsKeyword_2_0_0 = (Keyword)cNamedAssignment_2_0.eContents().get(0);
		private final Assignment cGivenNameAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cGivenNameIDTerminalRuleCall_2_1_0 = (RuleCall)cGivenNameAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cMarkerKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cMarkerTypeAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cMarkerTypeEClassCrossReference_3_1_0 = (CrossReference)cMarkerTypeAssignment_3_1.eContents().get(0);
		private final RuleCall cMarkerTypeEClassQualifiedIDParserRuleCall_3_1_0_1 = (RuleCall)cMarkerTypeEClassCrossReference_3_1_0.eContents().get(1);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final Keyword cNumberSignKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Assignment cMarkerFeatureAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final CrossReference cMarkerFeatureEStructuralFeatureCrossReference_3_2_1_0 = (CrossReference)cMarkerFeatureAssignment_3_2_1.eContents().get(0);
		private final RuleCall cMarkerFeatureEStructuralFeatureIDTerminalRuleCall_3_2_1_0_1 = (RuleCall)cMarkerFeatureEStructuralFeatureCrossReference_3_2_1_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cQuickfixesKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cQuickFixesAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cQuickFixesQuickFixParserRuleCall_4_2_0 = (RuleCall)cQuickFixesAssignment_4_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_3 = (Keyword)cGroup_4.eContents().get(3);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//NativeContext:
		//	contextType=[ecore::EClass|QualifiedID] ('#' contextFeature=[ecore::EStructuralFeature])? (named?='as' givenName=ID)?
		//	('marker' markerType=[ecore::EClass|QualifiedID] ('#' markerFeature=[ecore::EStructuralFeature]))? ('quickfixes' '{'
		//	quickFixes+=QuickFix+
		//	'}')?
		//	";";
		@Override public ParserRule getRule() { return rule; }

		//contextType=[ecore::EClass|QualifiedID] ('#' contextFeature=[ecore::EStructuralFeature])? (named?='as' givenName=ID)?
		//('marker' markerType=[ecore::EClass|QualifiedID] ('#' markerFeature=[ecore::EStructuralFeature]))? ('quickfixes' '{'
		//quickFixes+=QuickFix+ '}')? ";"
		public Group getGroup() { return cGroup; }

		//contextType=[ecore::EClass|QualifiedID]
		public Assignment getContextTypeAssignment_0() { return cContextTypeAssignment_0; }

		//[ecore::EClass|QualifiedID]
		public CrossReference getContextTypeEClassCrossReference_0_0() { return cContextTypeEClassCrossReference_0_0; }

		//QualifiedID
		public RuleCall getContextTypeEClassQualifiedIDParserRuleCall_0_0_1() { return cContextTypeEClassQualifiedIDParserRuleCall_0_0_1; }

		//('#' contextFeature=[ecore::EStructuralFeature])?
		public Group getGroup_1() { return cGroup_1; }

		//'#'
		public Keyword getNumberSignKeyword_1_0() { return cNumberSignKeyword_1_0; }

		//contextFeature=[ecore::EStructuralFeature]
		public Assignment getContextFeatureAssignment_1_1() { return cContextFeatureAssignment_1_1; }

		//[ecore::EStructuralFeature]
		public CrossReference getContextFeatureEStructuralFeatureCrossReference_1_1_0() { return cContextFeatureEStructuralFeatureCrossReference_1_1_0; }

		//ID
		public RuleCall getContextFeatureEStructuralFeatureIDTerminalRuleCall_1_1_0_1() { return cContextFeatureEStructuralFeatureIDTerminalRuleCall_1_1_0_1; }

		//(named?='as' givenName=ID)?
		public Group getGroup_2() { return cGroup_2; }

		//named?='as'
		public Assignment getNamedAssignment_2_0() { return cNamedAssignment_2_0; }

		//'as'
		public Keyword getNamedAsKeyword_2_0_0() { return cNamedAsKeyword_2_0_0; }

		//givenName=ID
		public Assignment getGivenNameAssignment_2_1() { return cGivenNameAssignment_2_1; }

		//ID
		public RuleCall getGivenNameIDTerminalRuleCall_2_1_0() { return cGivenNameIDTerminalRuleCall_2_1_0; }

		//('marker' markerType=[ecore::EClass|QualifiedID] ('#' markerFeature=[ecore::EStructuralFeature]))?
		public Group getGroup_3() { return cGroup_3; }

		//'marker'
		public Keyword getMarkerKeyword_3_0() { return cMarkerKeyword_3_0; }

		//markerType=[ecore::EClass|QualifiedID]
		public Assignment getMarkerTypeAssignment_3_1() { return cMarkerTypeAssignment_3_1; }

		//[ecore::EClass|QualifiedID]
		public CrossReference getMarkerTypeEClassCrossReference_3_1_0() { return cMarkerTypeEClassCrossReference_3_1_0; }

		//QualifiedID
		public RuleCall getMarkerTypeEClassQualifiedIDParserRuleCall_3_1_0_1() { return cMarkerTypeEClassQualifiedIDParserRuleCall_3_1_0_1; }

		//'#' markerFeature=[ecore::EStructuralFeature]
		public Group getGroup_3_2() { return cGroup_3_2; }

		//'#'
		public Keyword getNumberSignKeyword_3_2_0() { return cNumberSignKeyword_3_2_0; }

		//markerFeature=[ecore::EStructuralFeature]
		public Assignment getMarkerFeatureAssignment_3_2_1() { return cMarkerFeatureAssignment_3_2_1; }

		//[ecore::EStructuralFeature]
		public CrossReference getMarkerFeatureEStructuralFeatureCrossReference_3_2_1_0() { return cMarkerFeatureEStructuralFeatureCrossReference_3_2_1_0; }

		//ID
		public RuleCall getMarkerFeatureEStructuralFeatureIDTerminalRuleCall_3_2_1_0_1() { return cMarkerFeatureEStructuralFeatureIDTerminalRuleCall_3_2_1_0_1; }

		//('quickfixes' '{' quickFixes+=QuickFix+ '}')?
		public Group getGroup_4() { return cGroup_4; }

		//'quickfixes'
		public Keyword getQuickfixesKeyword_4_0() { return cQuickfixesKeyword_4_0; }

		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }

		//quickFixes+=QuickFix+
		public Assignment getQuickFixesAssignment_4_2() { return cQuickFixesAssignment_4_2; }

		//QuickFix
		public RuleCall getQuickFixesQuickFixParserRuleCall_4_2_0() { return cQuickFixesQuickFixParserRuleCall_4_2_0; }

		//'}'
		public Keyword getRightCurlyBracketKeyword_4_3() { return cRightCurlyBracketKeyword_4_3; }

		//";"
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }
	}

	public class QuickFixElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.avaloq.tools.ddk.xtext.valid.Valid.QuickFix");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cQuickFixKindAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cQuickFixKindQuickFixKindEnumRuleCall_0_0 = (RuleCall)cQuickFixKindAssignment_0.eContents().get(0);
		private final Keyword cFixKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLabelKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cLabelAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cLabelSTRINGTerminalRuleCall_4_0 = (RuleCall)cLabelAssignment_4.eContents().get(0);
		private final Keyword cMessageKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cMessageAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cMessageSTRINGTerminalRuleCall_6_0 = (RuleCall)cMessageAssignment_6.eContents().get(0);
		private final Keyword cSemicolonKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//QuickFix:
		//	quickFixKind=QuickFixKind? 'fix' name=ID 'label' label=STRING 'message' message=STRING ';';
		@Override public ParserRule getRule() { return rule; }

		//quickFixKind=QuickFixKind? 'fix' name=ID 'label' label=STRING 'message' message=STRING ';'
		public Group getGroup() { return cGroup; }

		//quickFixKind=QuickFixKind?
		public Assignment getQuickFixKindAssignment_0() { return cQuickFixKindAssignment_0; }

		//QuickFixKind
		public RuleCall getQuickFixKindQuickFixKindEnumRuleCall_0_0() { return cQuickFixKindQuickFixKindEnumRuleCall_0_0; }

		//'fix'
		public Keyword getFixKeyword_1() { return cFixKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//'label'
		public Keyword getLabelKeyword_3() { return cLabelKeyword_3; }

		//label=STRING
		public Assignment getLabelAssignment_4() { return cLabelAssignment_4; }

		//STRING
		public RuleCall getLabelSTRINGTerminalRuleCall_4_0() { return cLabelSTRINGTerminalRuleCall_4_0; }

		//'message'
		public Keyword getMessageKeyword_5() { return cMessageKeyword_5; }

		//message=STRING
		public Assignment getMessageAssignment_6() { return cMessageAssignment_6; }

		//STRING
		public RuleCall getMessageSTRINGTerminalRuleCall_6_0() { return cMessageSTRINGTerminalRuleCall_6_0; }

		//';'
		public Keyword getSemicolonKeyword_7() { return cSemicolonKeyword_7; }
	}

	public class QualifiedIDElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.avaloq.tools.ddk.xtext.valid.Valid.QualifiedID");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final Keyword cColonColonKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//QualifiedID:
		//	(ID '::')* ID;
		@Override public ParserRule getRule() { return rule; }

		//(ID '::')* ID
		public Group getGroup() { return cGroup; }

		//(ID '::')*
		public Group getGroup_0() { return cGroup_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_0_0() { return cIDTerminalRuleCall_0_0; }

		//'::'
		public Keyword getColonColonKeyword_0_1() { return cColonColonKeyword_0_1; }

		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	
	
	public class CheckKindElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "com.avaloq.tools.ddk.xtext.valid.Valid.CheckKind");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cFastEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cFastFastKeyword_0_0 = (Keyword)cFastEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cNormalEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cNormalNormalKeyword_1_0 = (Keyword)cNormalEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cExpensiveEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cExpensiveExpensiveKeyword_2_0 = (Keyword)cExpensiveEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum CheckKind:
		//	fast | normal | expensive;
		public EnumRule getRule() { return rule; }

		//fast | normal | expensive
		public Alternatives getAlternatives() { return cAlternatives; }

		//fast
		public EnumLiteralDeclaration getFastEnumLiteralDeclaration_0() { return cFastEnumLiteralDeclaration_0; }

		//'fast'
		public Keyword getFastFastKeyword_0_0() { return cFastFastKeyword_0_0; }

		//normal
		public EnumLiteralDeclaration getNormalEnumLiteralDeclaration_1() { return cNormalEnumLiteralDeclaration_1; }

		//'normal'
		public Keyword getNormalNormalKeyword_1_0() { return cNormalNormalKeyword_1_0; }

		//expensive
		public EnumLiteralDeclaration getExpensiveEnumLiteralDeclaration_2() { return cExpensiveEnumLiteralDeclaration_2; }

		//'expensive'
		public Keyword getExpensiveExpensiveKeyword_2_0() { return cExpensiveExpensiveKeyword_2_0; }
	}

	public class SeverityKindElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "com.avaloq.tools.ddk.xtext.valid.Valid.SeverityKind");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cErrorEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cErrorErrorKeyword_0_0 = (Keyword)cErrorEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cWarningEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cWarningWarningKeyword_1_0 = (Keyword)cWarningEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum SeverityKind:
		//	error | warning;
		public EnumRule getRule() { return rule; }

		//error | warning
		public Alternatives getAlternatives() { return cAlternatives; }

		//error
		public EnumLiteralDeclaration getErrorEnumLiteralDeclaration_0() { return cErrorEnumLiteralDeclaration_0; }

		//'error'
		public Keyword getErrorErrorKeyword_0_0() { return cErrorErrorKeyword_0_0; }

		//warning
		public EnumLiteralDeclaration getWarningEnumLiteralDeclaration_1() { return cWarningEnumLiteralDeclaration_1; }

		//'warning'
		public Keyword getWarningWarningKeyword_1_0() { return cWarningWarningKeyword_1_0; }
	}

	public class QuickFixKindElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "com.avaloq.tools.ddk.xtext.valid.Valid.QuickFixKind");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cSemanticEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cSemanticSemanticKeyword_0_0 = (Keyword)cSemanticEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cTextualEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cTextualTextualKeyword_1_0 = (Keyword)cTextualEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum QuickFixKind:
		//	semantic | textual;
		public EnumRule getRule() { return rule; }

		//semantic | textual
		public Alternatives getAlternatives() { return cAlternatives; }

		//semantic
		public EnumLiteralDeclaration getSemanticEnumLiteralDeclaration_0() { return cSemanticEnumLiteralDeclaration_0; }

		//'semantic'
		public Keyword getSemanticSemanticKeyword_0_0() { return cSemanticSemanticKeyword_0_0; }

		//textual
		public EnumLiteralDeclaration getTextualEnumLiteralDeclaration_1() { return cTextualEnumLiteralDeclaration_1; }

		//'textual'
		public Keyword getTextualTextualKeyword_1_0() { return cTextualTextualKeyword_1_0; }
	}
	
	private final ValidModelElements pValidModel;
	private final ImportElements pImport;
	private final CategoryElements pCategory;
	private final RuleElements pRule;
	private final PredefinedRuleElements pPredefinedRule;
	private final NativeRuleElements pNativeRule;
	private final SizeRuleElements pSizeRule;
	private final RangeRuleElements pRangeRule;
	private final UniqueRuleElements pUniqueRule;
	private final ContextElements pContext;
	private final SimpleContextElements pSimpleContext;
	private final DuplicateContextElements pDuplicateContext;
	private final NativeContextElements pNativeContext;
	private final QuickFixElements pQuickFix;
	private final CheckKindElements eCheckKind;
	private final SeverityKindElements eSeverityKind;
	private final QuickFixKindElements eQuickFixKind;
	private final QualifiedIDElements pQualifiedID;
	
	private final Grammar grammar;

	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public ValidGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pValidModel = new ValidModelElements();
		this.pImport = new ImportElements();
		this.pCategory = new CategoryElements();
		this.pRule = new RuleElements();
		this.pPredefinedRule = new PredefinedRuleElements();
		this.pNativeRule = new NativeRuleElements();
		this.pSizeRule = new SizeRuleElements();
		this.pRangeRule = new RangeRuleElements();
		this.pUniqueRule = new UniqueRuleElements();
		this.pContext = new ContextElements();
		this.pSimpleContext = new SimpleContextElements();
		this.pDuplicateContext = new DuplicateContextElements();
		this.pNativeContext = new NativeContextElements();
		this.pQuickFix = new QuickFixElements();
		this.eCheckKind = new CheckKindElements();
		this.eSeverityKind = new SeverityKindElements();
		this.eQuickFixKind = new QuickFixKindElements();
		this.pQualifiedID = new QualifiedIDElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("com.avaloq.tools.ddk.xtext.valid.Valid".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//ValidModel:
	//	imports+=Import*
	//	categories+=Category*;
	public ValidModelElements getValidModelAccess() {
		return pValidModel;
	}
	
	public ParserRule getValidModelRule() {
		return getValidModelAccess().getRule();
	}

	//Import:
	//	'import' package=[ecore::EPackage|STRING];
	public ImportElements getImportAccess() {
		return pImport;
	}
	
	public ParserRule getImportRule() {
		return getImportAccess().getRule();
	}

	//Category:
	//	'category' name=ID 'label' label=STRING ('description' description=STRING)? '{' rules+=Rule* '}';
	public CategoryElements getCategoryAccess() {
		return pCategory;
	}
	
	public ParserRule getCategoryRule() {
		return getCategoryAccess().getRule();
	}

	//Rule:
	//	NativeRule | PredefinedRule;
	public RuleElements getRuleAccess() {
		return pRule;
	}
	
	public ParserRule getRuleRule() {
		return getRuleAccess().getRule();
	}

	//PredefinedRule:
	//	SizeRule | RangeRule | UniqueRule //TODO | CapitalizationRule
	//;
	public PredefinedRuleElements getPredefinedRuleAccess() {
		return pPredefinedRule;
	}
	
	public ParserRule getPredefinedRuleRule() {
		return getPredefinedRuleAccess().getRule();
	}

	//NativeRule:
	//	(optional?='optional'? & checkKind=CheckKind?) severity=SeverityKind name=ID
	//	'label' label=STRING ('description' description=STRING)?
	//	'message' message=STRING
	//	'context' '{'
	//	contexts+=NativeContext+
	//	'}';
	public NativeRuleElements getNativeRuleAccess() {
		return pNativeRule;
	}
	
	public ParserRule getNativeRuleRule() {
		return getNativeRuleAccess().getRule();
	}

	//SizeRule:
	//	(optional?='optional'? & checkKind=CheckKind?) 'size' severity=SeverityKind name=ID
	//	'label' label=STRING ('description' description=STRING)? ('message' message=STRING)?
	//	'size' (min=INT '..')? max=INT
	//	'context' '{'
	//	contexts+=SimpleContext+
	//	'}';
	public SizeRuleElements getSizeRuleAccess() {
		return pSizeRule;
	}
	
	public ParserRule getSizeRuleRule() {
		return getSizeRuleAccess().getRule();
	}

	//RangeRule:
	//	(optional?='optional'? & checkKind=CheckKind?) 'range' severity=SeverityKind name=ID
	//	'label' label=STRING ('description' description=STRING)? ('message' message=STRING)?
	//	'range' (min=INT '..')? max=INT
	//	'context' '{'
	//	contexts+=SimpleContext+
	//	'}';
	public RangeRuleElements getRangeRuleAccess() {
		return pRangeRule;
	}
	
	public ParserRule getRangeRuleRule() {
		return getRangeRuleAccess().getRule();
	}

	//UniqueRule:
	//	(optional?='optional'? & checkKind=CheckKind?) 'unique' severity=SeverityKind name=ID
	//	'label' label=STRING ('description' description=STRING)? ('message' message=STRING)?
	//	'context' '{'
	//	contexts+=DuplicateContext+
	//	'}';
	public UniqueRuleElements getUniqueRuleAccess() {
		return pUniqueRule;
	}
	
	public ParserRule getUniqueRuleRule() {
		return getUniqueRuleAccess().getRule();
	}

	//Context:
	//	NativeContext | DuplicateContext | SimpleContext;
	public ContextElements getContextAccess() {
		return pContext;
	}
	
	public ParserRule getContextRule() {
		return getContextAccess().getRule();
	}

	//SimpleContext:
	//	contextType=[ecore::EClass|QualifiedID] ('#' contextFeature=[ecore::EStructuralFeature])? ";";
	public SimpleContextElements getSimpleContextAccess() {
		return pSimpleContext;
	}
	
	public ParserRule getSimpleContextRule() {
		return getSimpleContextAccess().getRule();
	}

	//DuplicateContext:
	//	contextType=[ecore::EClass|QualifiedID] ('#' contextFeature=[ecore::EStructuralFeature])? 'marker'
	//	markerType=[ecore::EClass|QualifiedID] '#' markerFeature=[ecore::EStructuralFeature]? ";";
	public DuplicateContextElements getDuplicateContextAccess() {
		return pDuplicateContext;
	}
	
	public ParserRule getDuplicateContextRule() {
		return getDuplicateContextAccess().getRule();
	}

	//NativeContext:
	//	contextType=[ecore::EClass|QualifiedID] ('#' contextFeature=[ecore::EStructuralFeature])? (named?='as' givenName=ID)?
	//	('marker' markerType=[ecore::EClass|QualifiedID] ('#' markerFeature=[ecore::EStructuralFeature]))? ('quickfixes' '{'
	//	quickFixes+=QuickFix+
	//	'}')?
	//	";";
	public NativeContextElements getNativeContextAccess() {
		return pNativeContext;
	}
	
	public ParserRule getNativeContextRule() {
		return getNativeContextAccess().getRule();
	}

	//QuickFix:
	//	quickFixKind=QuickFixKind? 'fix' name=ID 'label' label=STRING 'message' message=STRING ';';
	public QuickFixElements getQuickFixAccess() {
		return pQuickFix;
	}
	
	public ParserRule getQuickFixRule() {
		return getQuickFixAccess().getRule();
	}

	//enum CheckKind:
	//	fast | normal | expensive;
	public CheckKindElements getCheckKindAccess() {
		return eCheckKind;
	}
	
	public EnumRule getCheckKindRule() {
		return getCheckKindAccess().getRule();
	}

	//enum SeverityKind:
	//	error | warning;
	public SeverityKindElements getSeverityKindAccess() {
		return eSeverityKind;
	}
	
	public EnumRule getSeverityKindRule() {
		return getSeverityKindAccess().getRule();
	}

	//enum QuickFixKind:
	//	semantic | textual;
	public QuickFixKindElements getQuickFixKindAccess() {
		return eQuickFixKind;
	}
	
	public EnumRule getQuickFixKindRule() {
		return getQuickFixKindAccess().getRule();
	}

	//QualifiedID:
	//	(ID '::')* ID;
	public QualifiedIDElements getQualifiedIDAccess() {
		return pQualifiedID;
	}
	
	public ParserRule getQualifiedIDRule() {
		return getQualifiedIDAccess().getRule();
	}

	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' | "'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
